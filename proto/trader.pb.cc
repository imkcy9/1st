// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trader.proto

#include "trader.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace LT {
class ReqQueryFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqQueryField>
      _instance;
} _ReqQueryField_default_instance_;
class PositionFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionField>
      _instance;
} _PositionField_default_instance_;
class QuoteFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuoteField>
      _instance;
} _QuoteField_default_instance_;
class OrderFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderField>
      _instance;
} _OrderField_default_instance_;
class TradeFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TradeField>
      _instance;
} _TradeField_default_instance_;
class ServerInfoFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfoField>
      _instance;
} _ServerInfoField_default_instance_;
class UserInfoFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfoField>
      _instance;
} _UserInfoField_default_instance_;
class ErrorFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorField>
      _instance;
} _ErrorField_default_instance_;
class LogFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogField>
      _instance;
} _LogField_default_instance_;
class RspUserLoginFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspUserLoginField>
      _instance;
} _RspUserLoginField_default_instance_;
class DepthMarketDataNFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DepthMarketDataNField>
      _instance;
} _DepthMarketDataNField_default_instance_;
class DepthFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DepthField>
      _instance;
} _DepthField_default_instance_;
class InstrumentFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstrumentField>
      _instance;
} _InstrumentField_default_instance_;
class AccountFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountField>
      _instance;
} _AccountField_default_instance_;
class QuoteRequestFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuoteRequestField>
      _instance;
} _QuoteRequestField_default_instance_;
class SettlementInfoFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SettlementInfoField>
      _instance;
} _SettlementInfoField_default_instance_;
class InvestorFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvestorField>
      _instance;
} _InvestorField_default_instance_;
class InstrumentStatusFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstrumentStatusField>
      _instance;
} _InstrumentStatusField_default_instance_;
}  // namespace LT
namespace protobuf_trader_2eproto {
static void InitDefaultsReqQueryField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_ReqQueryField_default_instance_;
    new (ptr) ::LT::ReqQueryField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::ReqQueryField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqQueryField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqQueryField}, {}};

static void InitDefaultsPositionField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_PositionField_default_instance_;
    new (ptr) ::LT::PositionField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::PositionField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PositionField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPositionField}, {}};

static void InitDefaultsQuoteField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_QuoteField_default_instance_;
    new (ptr) ::LT::QuoteField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::QuoteField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuoteField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuoteField}, {}};

static void InitDefaultsOrderField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_OrderField_default_instance_;
    new (ptr) ::LT::OrderField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::OrderField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrderField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrderField}, {}};

static void InitDefaultsTradeField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_TradeField_default_instance_;
    new (ptr) ::LT::TradeField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::TradeField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TradeField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTradeField}, {}};

static void InitDefaultsServerInfoField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_ServerInfoField_default_instance_;
    new (ptr) ::LT::ServerInfoField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::ServerInfoField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfoField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerInfoField}, {}};

static void InitDefaultsUserInfoField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_UserInfoField_default_instance_;
    new (ptr) ::LT::UserInfoField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::UserInfoField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserInfoField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserInfoField}, {}};

static void InitDefaultsErrorField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_ErrorField_default_instance_;
    new (ptr) ::LT::ErrorField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::ErrorField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorField}, {}};

static void InitDefaultsLogField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_LogField_default_instance_;
    new (ptr) ::LT::LogField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::LogField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogField}, {}};

static void InitDefaultsRspUserLoginField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_RspUserLoginField_default_instance_;
    new (ptr) ::LT::RspUserLoginField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::RspUserLoginField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RspUserLoginField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRspUserLoginField}, {}};

static void InitDefaultsDepthMarketDataNField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_DepthMarketDataNField_default_instance_;
    new (ptr) ::LT::DepthMarketDataNField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::DepthMarketDataNField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DepthMarketDataNField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDepthMarketDataNField}, {}};

static void InitDefaultsDepthField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_DepthField_default_instance_;
    new (ptr) ::LT::DepthField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::DepthField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DepthField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDepthField}, {}};

static void InitDefaultsInstrumentField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_InstrumentField_default_instance_;
    new (ptr) ::LT::InstrumentField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::InstrumentField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InstrumentField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstrumentField}, {}};

static void InitDefaultsAccountField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_AccountField_default_instance_;
    new (ptr) ::LT::AccountField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::AccountField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountField}, {}};

static void InitDefaultsQuoteRequestField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_QuoteRequestField_default_instance_;
    new (ptr) ::LT::QuoteRequestField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::QuoteRequestField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuoteRequestField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuoteRequestField}, {}};

static void InitDefaultsSettlementInfoField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_SettlementInfoField_default_instance_;
    new (ptr) ::LT::SettlementInfoField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::SettlementInfoField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SettlementInfoField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSettlementInfoField}, {}};

static void InitDefaultsInvestorField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_InvestorField_default_instance_;
    new (ptr) ::LT::InvestorField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::InvestorField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InvestorField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInvestorField}, {}};

static void InitDefaultsInstrumentStatusField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LT::_InstrumentStatusField_default_instance_;
    new (ptr) ::LT::InstrumentStatusField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::InstrumentStatusField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InstrumentStatusField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstrumentStatusField}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReqQueryField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PositionField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuoteField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TradeField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerInfoField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserInfoField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RspUserLoginField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DepthMarketDataNField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DepthField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InstrumentField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuoteRequestField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SettlementInfoField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InvestorField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InstrumentStatusField.base);
}

::google::protobuf::Metadata file_level_metadata[18];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, instrument_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, instrument_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, currency_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, date_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, date_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, time_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, time_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, char64_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, int32_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, char64_position_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, int32_position_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, portfolio_id1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, portfolio_id2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, portfolio_id3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ReqQueryField, business_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, instrument_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, instrument_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, hedge_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, position_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, today_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, history_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, history_frozen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, today_bs_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, today_bs_frozen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, today_pr_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, today_pr_frozen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, portfolio_id1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, portfolio_id2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, portfolio_id3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::PositionField, business_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, instrument_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, instrument_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, ask_qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, ask_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, ask_open_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, ask_hedge_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, bid_qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, bid_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, bid_open_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, bid_hedge_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, exec_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, quote_req_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, local_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, ask_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, bid_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, ask_order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, bid_order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, xerror_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, row_error_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteField, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, instrument_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, instrument_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, open_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, hedge_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, local_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, stop_px_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, time_in_force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, exec_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, leaves_qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, cum_qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, avg_px_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, xerror_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, raw_error_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, reserve_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, reserve_char64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, portfolio_id1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, portfolio_id2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, portfolio_id3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::OrderField, business_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, instrument_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, instrument_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, open_close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, hedge_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, tradeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, commission_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, reserveint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, reservechar64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, portfolioid1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, portfolioid2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, portfolioid3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::TradeField, business_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, is_using_udp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, is_multicast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, topicid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, marketdata_topic_resume_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, private_topic_resume_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, public_topic_resume_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, user_topic_resume_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, broker_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, user_product_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, authcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, config_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ServerInfoField, extinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::UserInfoField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::UserInfoField, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::UserInfoField, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::UserInfoField, extinfo_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::UserInfoField, extinfo_int32_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ErrorField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ErrorField, xerror_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ErrorField, raw_errorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ErrorField, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::ErrorField, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::LogField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::LogField, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::LogField, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, trading_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, login_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, investor_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, xerror_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, raw_errorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::RspUserLoginField, lang_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, trading_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, action_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, update_millisec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, instrument_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, exchange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, last_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, openinterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, average_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, open_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, highest_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, lowest_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, close_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, settlement_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, upperlimit_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, lowerlimit_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, preclose_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, presettlement_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, preopeninterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, trading_phase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthMarketDataNField, bidcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthField, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthField, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::DepthField, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, instrument_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, instrument_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, exchange_instid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, volume_multiple_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, price_tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, expire_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, strike_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, options_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, underlying_instrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentField, instlife_phase_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, currency_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, pre_balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, curr_margin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, close_profit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, position_profit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, deposit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, withdraw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, withdrawquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, frozen_transfer_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, frozen_stamp_tax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, frozen_commission_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, frozen_cash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, transfer_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, stamp_tax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, commission_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::AccountField, cashin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteRequestField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteRequestField, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteRequestField, instrument_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteRequestField, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteRequestField, trading_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteRequestField, quote_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::QuoteRequestField, quote_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::SettlementInfoField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::SettlementInfoField, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::SettlementInfoField, trading_day_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InvestorField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InvestorField, investor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InvestorField, broker_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InvestorField, identified_card_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InvestorField, identified_cardno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InvestorField, investor_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentStatusField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentStatusField, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentStatusField, instrument_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentStatusField, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentStatusField, instrument_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::InstrumentStatusField, enter_time_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LT::ReqQueryField)},
  { 24, -1, sizeof(::LT::PositionField)},
  { 52, -1, sizeof(::LT::QuoteField)},
  { 83, -1, sizeof(::LT::OrderField)},
  { 121, -1, sizeof(::LT::TradeField)},
  { 148, -1, sizeof(::LT::ServerInfoField)},
  { 167, -1, sizeof(::LT::UserInfoField)},
  { 176, -1, sizeof(::LT::ErrorField)},
  { 185, -1, sizeof(::LT::LogField)},
  { 192, -1, sizeof(::LT::RspUserLoginField)},
  { 208, -1, sizeof(::LT::DepthMarketDataNField)},
  { 239, -1, sizeof(::LT::DepthField)},
  { 247, -1, sizeof(::LT::InstrumentField)},
  { 268, -1, sizeof(::LT::AccountField)},
  { 293, -1, sizeof(::LT::QuoteRequestField)},
  { 304, -1, sizeof(::LT::SettlementInfoField)},
  { 311, -1, sizeof(::LT::InvestorField)},
  { 321, -1, sizeof(::LT::InstrumentStatusField)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_ReqQueryField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_PositionField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_QuoteField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_OrderField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_TradeField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_ServerInfoField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_UserInfoField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_ErrorField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_LogField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_RspUserLoginField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_DepthMarketDataNField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_DepthField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_InstrumentField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_AccountField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_QuoteRequestField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_SettlementInfoField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_InvestorField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_InstrumentStatusField_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "trader.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014trader.proto\022\002LT\032\nenum.proto\"\267\003\n\rReqQu"
      "eryField\022\027\n\017instrument_name\030\001 \001(\t\022\016\n\006sym"
      "bol\030\002 \001(\t\022\025\n\rinstrument_id\030\003 \001(\t\022\023\n\013exch"
      "ange_id\030\004 \001(\t\022\021\n\tclient_id\030\005 \001(\t\022\022\n\nacco"
      "unt_id\030\006 \001(\t\022\023\n\013currency_id\030\007 \001(\t\022\022\n\ndat"
      "e_start\030\010 \001(\005\022\020\n\010date_end\030\t \001(\005\022\022\n\ntime_"
      "start\030\n \001(\005\022\020\n\010time_end\030\013 \001(\005\022\021\n\tchar64_"
      "id\030\014 \001(\t\022\020\n\010int32_id\030\r \001(\005\022\035\n\025char64_pos"
      "ition_index\030\016 \001(\t\022\034\n\024int32_position_inde"
      "x\030\017 \001(\005\022\025\n\rportfolio_id1\030\020 \001(\t\022\025\n\rportfo"
      "lio_id2\030\021 \001(\t\022\025\n\rportfolio_id3\030\022 \001(\t\022\"\n\010"
      "business\030\023 \001(\0162\020.LT.BusinessType\"\260\004\n\rPos"
      "itionField\022\027\n\017instrument_name\030\001 \001(\t\022\016\n\006s"
      "ymbol\030\002 \001(\t\022\025\n\rinstrument_id\030\003 \001(\t\022\023\n\013ex"
      "change_id\030\004 \001(\t\022\021\n\tclient_id\030\005 \001(\t\022\022\n\nac"
      "count_id\030\006 \001(\t\022\036\n\004side\030\007 \001(\0162\020.LT.Positi"
      "onSide\022%\n\nhedge_flag\030\010 \001(\0162\021.LT.HedgeFla"
      "gType\022\014\n\004date\030\t \001(\005\022\025\n\rposition_cost\030\n \001"
      "(\001\022\020\n\010position\030\013 \001(\001\022\026\n\016today_position\030\014"
      " \001(\001\022\030\n\020history_position\030\r \001(\001\022\026\n\016histor"
      "y_frozen\030\016 \001(\001\022\031\n\021today_bs_position\030\017 \001("
      "\001\022\027\n\017today_bs_frozen\030\020 \001(\001\022\031\n\021today_pr_p"
      "osition\030\021 \001(\001\022\027\n\017today_pr_frozen\030\022 \001(\001\022\n"
      "\n\002id\030\023 \001(\t\022\025\n\rportfolio_id1\030\024 \001(\t\022\025\n\rpor"
      "tfolio_id2\030\025 \001(\t\022\025\n\rportfolio_id3\030\026 \001(\t\022"
      "\"\n\010business\030\027 \001(\0162\020.LT.BusinessType\"\365\004\n\n"
      "QuoteField\022\027\n\017instrument_name\030\001 \001(\t\022\016\n\006s"
      "ymbol\030\002 \001(\t\022\025\n\rinstrument_id\030\003 \001(\t\022\023\n\013ex"
      "change_id\030\004 \001(\t\022\021\n\tclient_id\030\005 \001(\t\022\022\n\nac"
      "count_id\030\006 \001(\t\022\017\n\007ask_qty\030\007 \001(\001\022\021\n\task_p"
      "rice\030\010 \001(\001\022)\n\016ask_open_close\030\t \001(\0162\021.LT."
      "OpenCloseType\022)\n\016ask_hedge_flag\030\n \001(\0162\021."
      "LT.HedgeFlagType\022\017\n\007bid_qty\030\013 \001(\001\022\021\n\tbid"
      "_price\030\014 \001(\001\022)\n\016bid_open_close\030\r \001(\0162\021.L"
      "T.OpenCloseType\022)\n\016bid_hedge_flag\030\016 \001(\0162"
      "\021.LT.HedgeFlagType\022\037\n\006status\030\017 \001(\0162\017.LT."
      "OrderStatus\022\037\n\texec_type\030\020 \001(\0162\014.LT.Exec"
      "Type\022\024\n\014quote_req_id\030\021 \001(\t\022\020\n\010local_id\030\022"
      " \001(\t\022\n\n\002id\030\023 \001(\t\022\016\n\006ask_id\030\024 \001(\t\022\016\n\006bid_"
      "id\030\025 \001(\t\022\024\n\014ask_order_id\030\026 \001(\t\022\024\n\014bid_or"
      "der_id\030\027 \001(\t\022\021\n\txerror_id\030\030 \001(\005\022\024\n\014row_e"
      "rror_id\030\031 \001(\005\022\014\n\004text\030\032 \001(\t\"\367\005\n\nOrderFie"
      "ld\022\027\n\017instrument_name\030\001 \001(\t\022\016\n\006symbol\030\002 "
      "\001(\t\022\025\n\rinstrument_id\030\003 \001(\t\022\023\n\013exchange_i"
      "d\030\004 \001(\t\022\021\n\tclient_id\030\005 \001(\t\022\022\n\naccount_id"
      "\030\006 \001(\t\022\033\n\004size\030\007 \001(\0162\r.LT.OrderSide\022\013\n\003q"
      "ty\030\010 \001(\001\022\r\n\005price\030\t \001(\001\022%\n\nopen_close\030\n "
      "\001(\0162\021.LT.OpenCloseType\022%\n\nhedge_flag\030\013 \001"
      "(\0162\021.LT.HedgeFlagType\022\014\n\004date\030\014 \001(\005\022\014\n\004t"
      "ime\030\r \001(\003\022\n\n\002id\030\016 \001(\t\022\020\n\010order_id\030\017 \001(\t\022"
      "\020\n\010local_id\030\020 \001(\t\022\033\n\004type\030\021 \001(\0162\r.LT.Ord"
      "erType\022\017\n\007stop_px\030\022 \001(\001\022&\n\rtime_in_force"
      "\030\023 \001(\0162\017.LT.TimeInForce\022\037\n\006status\030\024 \001(\0162"
      "\017.LT.OrderStatus\022\037\n\texec_type\030\025 \001(\0162\014.LT"
      ".ExecType\022\022\n\nleaves_qty\030\026 \001(\001\022\017\n\007cum_qty"
      "\030\027 \001(\001\022\016\n\006avg_px\030\030 \001(\001\022\021\n\txerror_id\030\031 \001("
      "\005\022\024\n\014raw_error_id\030\032 \001(\005\022\014\n\004text\030\033 \001(\t\022\025\n"
      "\rreserve_int32\030\034 \001(\005\022\026\n\016reserve_char64\030\035"
      " \001(\t\022\025\n\rportfolio_id1\030\036 \001(\t\022\025\n\rportfolio"
      "_id2\030\037 \001(\t\022\025\n\rportfolio_id3\030  \001(\t\022\"\n\010bus"
      "iness\030! \001(\0162\020.LT.BusinessType\"\357\003\n\nTradeF"
      "ield\022\027\n\017instrument_name\030\001 \001(\t\022\016\n\006symbol\030"
      "\002 \001(\t\022\025\n\rinstrument_id\030\003 \001(\t\022\023\n\013exchange"
      "_id\030\004 \001(\t\022\021\n\tclient_id\030\005 \001(\t\022\022\n\naccount_"
      "id\030\006 \001(\t\022\033\n\004side\030\007 \001(\0162\r.LT.OrderSide\022\013\n"
      "\003qty\030\010 \001(\001\022\r\n\005price\030\t \001(\001\022%\n\nopen_close\030"
      "\n \001(\0162\021.LT.OpenCloseType\022%\n\nhedge_flag\030\013"
      " \001(\0162\021.LT.HedgeFlagType\022\014\n\004date\030\014 \001(\005\022\014\n"
      "\004time\030\r \001(\003\022\n\n\002id\030\016 \001(\t\022\017\n\007tradeid\030\017 \001(\t"
      "\022\022\n\ncommission\030\020 \001(\001\022\024\n\014reserveint32\030\021 \001"
      "(\005\022\025\n\rreservechar64\030\022 \001(\t\022\024\n\014portfolioid"
      "1\030\023 \001(\t\022\024\n\014portfolioid2\030\024 \001(\t\022\024\n\014portfol"
      "ioid3\030\025 \001(\t\022\"\n\010business\030\026 \001(\0162\020.LT.Busin"
      "essType\"\236\003\n\017ServerInfoField\022\024\n\014is_using_"
      "udp\030\001 \001(\010\022\024\n\014is_multicast\030\002 \001(\010\022\017\n\007topic"
      "id\030\003 \001(\005\022\014\n\004port\030\004 \001(\005\0224\n\034marketdata_top"
      "ic_resume_type\030\005 \001(\0162\016.LT.ResumeType\0221\n\031"
      "private_topic_resume_type\030\006 \001(\0162\016.LT.Res"
      "umeType\0220\n\030public_topic_resume_type\030\007 \001("
      "\0162\016.LT.ResumeType\022.\n\026user_topic_resume_t"
      "ype\030\010 \001(\0162\016.LT.ResumeType\022\021\n\tbroker_id\030\t"
      " \001(\t\022\031\n\021user_product_info\030\n \001(\t\022\020\n\010authc"
      "ode\030\013 \001(\t\022\017\n\007address\030\014 \001(\t\022\023\n\013config_pat"
      "h\030\r \001(\t\022\017\n\007extinfo\030\016 \001(\t\"a\n\rUserInfoFiel"
      "d\022\017\n\007user_id\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\026\n\016"
      "extinfo_string\030\003 \001(\t\022\025\n\rextinfo_int32\030\004 "
      "\001(\005\"R\n\nErrorField\022\021\n\txerror_id\030\001 \001(\005\022\023\n\013"
      "raw_errorid\030\002 \001(\005\022\014\n\004text\030\003 \001(\t\022\016\n\006sourc"
      "e\030\004 \001(\t\"8\n\010LogField\022\033\n\005level\030\001 \001(\0162\014.LT."
      "LogLevel\022\017\n\007message\030\002 \001(\t\"\340\001\n\021RspUserLog"
      "inField\022\023\n\013trading_day\030\001 \001(\003\022\022\n\nlogin_ti"
      "me\030\002 \001(\003\022\022\n\nsession_id\030\004 \001(\t\022\017\n\007user_id\030"
      "\005 \001(\t\022\021\n\taccountid\030\006 \001(\t\022\025\n\rinvestor_nam"
      "e\030\007 \001(\t\022\021\n\txerror_id\030\010 \001(\005\022\023\n\013raw_errori"
      "d\030\t \001(\005\022\014\n\004text\030\n \001(\t\022\017\n\007version\030\013 \001(\t\022\014"
      "\n\004lang\030\014 \001(\t\"\360\004\n\025DepthMarketDataNField\022\014"
      "\n\004size\030\001 \001(\005\022\023\n\013trading_day\030\002 \001(\003\022\022\n\nact"
      "ion_day\030\003 \001(\003\022\023\n\013update_time\030\004 \001(\003\022\027\n\017up"
      "date_millisec\030\005 \001(\003\022\016\n\006symbol\030\006 \001(\t\022\025\n\ri"
      "nstrument_id\030\007 \001(\t\022\023\n\013exchange_id\030\010 \001(\t\022"
      "\"\n\010exchange\030\t \001(\0162\020.LT.ExchangeType\022\022\n\nl"
      "ast_price\030\n \001(\001\022\016\n\006volume\030\013 \001(\001\022\020\n\010turno"
      "ver\030\014 \001(\001\022\024\n\014openinterest\030\r \001(\001\022\025\n\ravera"
      "ge_price\030\016 \001(\001\022\022\n\nopen_price\030\017 \001(\001\022\025\n\rhi"
      "ghest_price\030\020 \001(\001\022\024\n\014lowest_price\030\021 \001(\001\022"
      "\023\n\013close_price\030\022 \001(\001\022\030\n\020settlement_price"
      "\030\023 \001(\001\022\030\n\020upperlimit_price\030\024 \001(\001\022\030\n\020lowe"
      "rlimit_price\030\025 \001(\001\022\026\n\016preclose_price\030\026 \001"
      "(\001\022\033\n\023presettlement_price\030\027 \001(\001\022\027\n\017preop"
      "eninterest\030\030 \001(\001\022+\n\rtrading_phase\030\031 \001(\0162"
      "\024.LT.TradingPhaseType\022\020\n\010bidcount\030\032 \001(\005\""
      "8\n\nDepthField\022\r\n\005price\030\001 \001(\001\022\014\n\004size\030\002 \001"
      "(\001\022\r\n\005count\030\003 \001(\001\"\242\003\n\017InstrumentField\022\027\n"
      "\017instrument_name\030\001 \001(\t\022\016\n\006symbol\030\002 \001(\t\022\025"
      "\n\rinstrument_id\030\003 \001(\t\022\023\n\013exchange_id\030\004 \001"
      "(\t\022\021\n\tclient_id\030\005 \001(\t\022\022\n\naccount_id\030\006 \001("
      "\t\022\027\n\017exchange_instid\030\007 \001(\t\022 \n\004type\030\010 \001(\016"
      "2\022.LT.InstrumentType\022\027\n\017volume_multiple\030"
      "\t \001(\005\022\022\n\nprice_tick\030\n \001(\001\022\023\n\013expire_date"
      "\030\013 \001(\005\022\024\n\014strike_price\030\014 \001(\001\022!\n\014options_"
      "type\030\r \001(\0162\013.LT.PutCall\022\022\n\nproduct_id\030\016 "
      "\001(\t\022\032\n\022underlying_instrid\030\017 \001(\t\022-\n\016instl"
      "ife_phase\030\020 \001(\0162\025.LT.InstLifePhaseType\"\265"
      "\003\n\014AccountField\022\021\n\tclient_id\030\001 \001(\t\022\022\n\nac"
      "count_id\030\002 \001(\t\022\023\n\013currency_id\030\003 \001(\t\022\023\n\013p"
      "re_balance\030\004 \001(\001\022\023\n\013curr_margin\030\005 \001(\001\022\024\n"
      "\014close_profit\030\006 \001(\001\022\027\n\017position_profit\030\007"
      " \001(\001\022\017\n\007balance\030\010 \001(\001\022\021\n\tavailable\030\t \001(\001"
      "\022\017\n\007deposit\030\n \001(\001\022\020\n\010withdraw\030\013 \001(\001\022\025\n\rw"
      "ithdrawquota\030\014 \001(\001\022\033\n\023frozen_transfer_fe"
      "e\030\r \001(\001\022\030\n\020frozen_stamp_tax\030\016 \001(\001\022\031\n\021fro"
      "zen_commission\030\017 \001(\001\022\023\n\013frozen_cash\030\020 \001("
      "\001\022\024\n\014transfer_fee\030\021 \001(\001\022\021\n\tstamp_tax\030\022 \001"
      "(\001\022\022\n\ncommission\030\023 \001(\001\022\016\n\006cashin\030\024 \001(\001\"\212"
      "\001\n\021QuoteRequestField\022\016\n\006symbol\030\001 \001(\t\022\025\n\r"
      "instrument_id\030\002 \001(\t\022\023\n\013exchange_id\030\003 \001(\t"
      "\022\023\n\013trading_day\030\004 \001(\005\022\022\n\nquote_time\030\005 \001("
      "\003\022\020\n\010quote_id\030\006 \001(\t\"8\n\023SettlementInfoFie"
      "ld\022\014\n\004size\030\001 \001(\005\022\023\n\013trading_day\030\002 \001(\003\"\227\001"
      "\n\rInvestorField\022\023\n\013investor_id\030\001 \001(\t\022\021\n\t"
      "broker_id\030\002 \001(\t\022,\n\024identified_card_type\030"
      "\003 \001(\0162\016.LT.IdCardType\022\031\n\021identified_card"
      "no\030\004 \001(\t\022\025\n\rinvestor_name\030\005 \001(\t\"\230\001\n\025Inst"
      "rumentStatusField\022\016\n\006symbol\030\001 \001(\t\022\025\n\rins"
      "trument_id\030\002 \001(\t\022\023\n\013exchange_id\030\003 \001(\t\022/\n"
      "\021instrument_status\030\004 \001(\0162\024.LT.TradingPha"
      "seType\022\022\n\nenter_time\030\005 \001(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5874);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "trader.proto", &protobuf_RegisterTypes);
  ::protobuf_enum_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_trader_2eproto
namespace LT {

// ===================================================================

void ReqQueryField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqQueryField::kInstrumentNameFieldNumber;
const int ReqQueryField::kSymbolFieldNumber;
const int ReqQueryField::kInstrumentIdFieldNumber;
const int ReqQueryField::kExchangeIdFieldNumber;
const int ReqQueryField::kClientIdFieldNumber;
const int ReqQueryField::kAccountIdFieldNumber;
const int ReqQueryField::kCurrencyIdFieldNumber;
const int ReqQueryField::kDateStartFieldNumber;
const int ReqQueryField::kDateEndFieldNumber;
const int ReqQueryField::kTimeStartFieldNumber;
const int ReqQueryField::kTimeEndFieldNumber;
const int ReqQueryField::kChar64IdFieldNumber;
const int ReqQueryField::kInt32IdFieldNumber;
const int ReqQueryField::kChar64PositionIndexFieldNumber;
const int ReqQueryField::kInt32PositionIndexFieldNumber;
const int ReqQueryField::kPortfolioId1FieldNumber;
const int ReqQueryField::kPortfolioId2FieldNumber;
const int ReqQueryField::kPortfolioId3FieldNumber;
const int ReqQueryField::kBusinessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqQueryField::ReqQueryField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_ReqQueryField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.ReqQueryField)
}
ReqQueryField::ReqQueryField(const ReqQueryField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_name().size() > 0) {
    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_id().size() > 0) {
    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currency_id().size() > 0) {
    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  char64_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.char64_id().size() > 0) {
    char64_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.char64_id_);
  }
  char64_position_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.char64_position_index().size() > 0) {
    char64_position_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.char64_position_index_);
  }
  portfolio_id1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolio_id1().size() > 0) {
    portfolio_id1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id1_);
  }
  portfolio_id2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolio_id2().size() > 0) {
    portfolio_id2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id2_);
  }
  portfolio_id3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolio_id3().size() > 0) {
    portfolio_id3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id3_);
  }
  ::memcpy(&date_start_, &from.date_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&business_) -
    reinterpret_cast<char*>(&date_start_)) + sizeof(business_));
  // @@protoc_insertion_point(copy_constructor:LT.ReqQueryField)
}

void ReqQueryField::SharedCtor() {
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  char64_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  char64_position_index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&date_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&business_) -
      reinterpret_cast<char*>(&date_start_)) + sizeof(business_));
}

ReqQueryField::~ReqQueryField() {
  // @@protoc_insertion_point(destructor:LT.ReqQueryField)
  SharedDtor();
}

void ReqQueryField::SharedDtor() {
  instrument_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  char64_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  char64_position_index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqQueryField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqQueryField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqQueryField& ReqQueryField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_ReqQueryField.base);
  return *internal_default_instance();
}


void ReqQueryField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.ReqQueryField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrument_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  char64_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  char64_position_index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&date_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&business_) -
      reinterpret_cast<char*>(&date_start_)) + sizeof(business_));
  _internal_metadata_.Clear();
}

bool ReqQueryField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.ReqQueryField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instrument_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.instrument_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.instrument_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency_id().data(), static_cast<int>(this->currency_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.currency_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 date_start = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &date_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 date_end = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &date_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 time_start = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 time_end = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string char64_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_char64_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->char64_id().data(), static_cast<int>(this->char64_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.char64_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int32_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int32_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string char64_position_index = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_char64_position_index()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->char64_position_index().data(), static_cast<int>(this->char64_position_index().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.char64_position_index"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int32_position_index = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int32_position_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolio_id1 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio_id1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio_id1().data(), static_cast<int>(this->portfolio_id1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.portfolio_id1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolio_id2 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio_id2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio_id2().data(), static_cast<int>(this->portfolio_id2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.portfolio_id2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolio_id3 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio_id3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio_id3().data(), static_cast<int>(this->portfolio_id3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ReqQueryField.portfolio_id3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.BusinessType business = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_business(static_cast< ::LT::BusinessType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.ReqQueryField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.ReqQueryField)
  return false;
#undef DO_
}

void ReqQueryField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.ReqQueryField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.instrument_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instrument_name(), output);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.instrument_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instrument_id(), output);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchange_id(), output);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_id(), output);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account_id(), output);
  }

  // string currency_id = 7;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.currency_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->currency_id(), output);
  }

  // int32 date_start = 8;
  if (this->date_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->date_start(), output);
  }

  // int32 date_end = 9;
  if (this->date_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->date_end(), output);
  }

  // int32 time_start = 10;
  if (this->time_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->time_start(), output);
  }

  // int32 time_end = 11;
  if (this->time_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->time_end(), output);
  }

  // string char64_id = 12;
  if (this->char64_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->char64_id().data(), static_cast<int>(this->char64_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.char64_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->char64_id(), output);
  }

  // int32 int32_id = 13;
  if (this->int32_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->int32_id(), output);
  }

  // string char64_position_index = 14;
  if (this->char64_position_index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->char64_position_index().data(), static_cast<int>(this->char64_position_index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.char64_position_index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->char64_position_index(), output);
  }

  // int32 int32_position_index = 15;
  if (this->int32_position_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->int32_position_index(), output);
  }

  // string portfolio_id1 = 16;
  if (this->portfolio_id1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id1().data(), static_cast<int>(this->portfolio_id1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.portfolio_id1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->portfolio_id1(), output);
  }

  // string portfolio_id2 = 17;
  if (this->portfolio_id2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id2().data(), static_cast<int>(this->portfolio_id2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.portfolio_id2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->portfolio_id2(), output);
  }

  // string portfolio_id3 = 18;
  if (this->portfolio_id3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id3().data(), static_cast<int>(this->portfolio_id3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.portfolio_id3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->portfolio_id3(), output);
  }

  // .LT.BusinessType business = 19;
  if (this->business() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->business(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.ReqQueryField)
}

::google::protobuf::uint8* ReqQueryField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.ReqQueryField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.instrument_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instrument_name(), target);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.instrument_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->instrument_id(), target);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchange_id(), target);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_id(), target);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account_id(), target);
  }

  // string currency_id = 7;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.currency_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->currency_id(), target);
  }

  // int32 date_start = 8;
  if (this->date_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->date_start(), target);
  }

  // int32 date_end = 9;
  if (this->date_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->date_end(), target);
  }

  // int32 time_start = 10;
  if (this->time_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->time_start(), target);
  }

  // int32 time_end = 11;
  if (this->time_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->time_end(), target);
  }

  // string char64_id = 12;
  if (this->char64_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->char64_id().data(), static_cast<int>(this->char64_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.char64_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->char64_id(), target);
  }

  // int32 int32_id = 13;
  if (this->int32_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->int32_id(), target);
  }

  // string char64_position_index = 14;
  if (this->char64_position_index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->char64_position_index().data(), static_cast<int>(this->char64_position_index().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.char64_position_index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->char64_position_index(), target);
  }

  // int32 int32_position_index = 15;
  if (this->int32_position_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->int32_position_index(), target);
  }

  // string portfolio_id1 = 16;
  if (this->portfolio_id1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id1().data(), static_cast<int>(this->portfolio_id1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.portfolio_id1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->portfolio_id1(), target);
  }

  // string portfolio_id2 = 17;
  if (this->portfolio_id2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id2().data(), static_cast<int>(this->portfolio_id2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.portfolio_id2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->portfolio_id2(), target);
  }

  // string portfolio_id3 = 18;
  if (this->portfolio_id3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id3().data(), static_cast<int>(this->portfolio_id3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ReqQueryField.portfolio_id3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->portfolio_id3(), target);
  }

  // .LT.BusinessType business = 19;
  if (this->business() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      19, this->business(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.ReqQueryField)
  return target;
}

size_t ReqQueryField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.ReqQueryField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_name());
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_id());
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string currency_id = 7;
  if (this->currency_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency_id());
  }

  // string char64_id = 12;
  if (this->char64_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->char64_id());
  }

  // string char64_position_index = 14;
  if (this->char64_position_index().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->char64_position_index());
  }

  // string portfolio_id1 = 16;
  if (this->portfolio_id1().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio_id1());
  }

  // string portfolio_id2 = 17;
  if (this->portfolio_id2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio_id2());
  }

  // string portfolio_id3 = 18;
  if (this->portfolio_id3().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio_id3());
  }

  // int32 date_start = 8;
  if (this->date_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->date_start());
  }

  // int32 date_end = 9;
  if (this->date_end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->date_end());
  }

  // int32 time_start = 10;
  if (this->time_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time_start());
  }

  // int32 time_end = 11;
  if (this->time_end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time_end());
  }

  // int32 int32_id = 13;
  if (this->int32_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int32_id());
  }

  // int32 int32_position_index = 15;
  if (this->int32_position_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int32_position_index());
  }

  // .LT.BusinessType business = 19;
  if (this->business() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->business());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqQueryField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.ReqQueryField)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqQueryField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqQueryField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.ReqQueryField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.ReqQueryField)
    MergeFrom(*source);
  }
}

void ReqQueryField::MergeFrom(const ReqQueryField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.ReqQueryField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrument_name().size() > 0) {

    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.instrument_id().size() > 0) {

    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.currency_id().size() > 0) {

    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  if (from.char64_id().size() > 0) {

    char64_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.char64_id_);
  }
  if (from.char64_position_index().size() > 0) {

    char64_position_index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.char64_position_index_);
  }
  if (from.portfolio_id1().size() > 0) {

    portfolio_id1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id1_);
  }
  if (from.portfolio_id2().size() > 0) {

    portfolio_id2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id2_);
  }
  if (from.portfolio_id3().size() > 0) {

    portfolio_id3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id3_);
  }
  if (from.date_start() != 0) {
    set_date_start(from.date_start());
  }
  if (from.date_end() != 0) {
    set_date_end(from.date_end());
  }
  if (from.time_start() != 0) {
    set_time_start(from.time_start());
  }
  if (from.time_end() != 0) {
    set_time_end(from.time_end());
  }
  if (from.int32_id() != 0) {
    set_int32_id(from.int32_id());
  }
  if (from.int32_position_index() != 0) {
    set_int32_position_index(from.int32_position_index());
  }
  if (from.business() != 0) {
    set_business(from.business());
  }
}

void ReqQueryField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.ReqQueryField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqQueryField::CopyFrom(const ReqQueryField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.ReqQueryField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqQueryField::IsInitialized() const {
  return true;
}

void ReqQueryField::Swap(ReqQueryField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqQueryField::InternalSwap(ReqQueryField* other) {
  using std::swap;
  instrument_name_.Swap(&other->instrument_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrument_id_.Swap(&other->instrument_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_id_.Swap(&other->exchange_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_id_.Swap(&other->currency_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  char64_id_.Swap(&other->char64_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  char64_position_index_.Swap(&other->char64_position_index_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolio_id1_.Swap(&other->portfolio_id1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolio_id2_.Swap(&other->portfolio_id2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolio_id3_.Swap(&other->portfolio_id3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(date_start_, other->date_start_);
  swap(date_end_, other->date_end_);
  swap(time_start_, other->time_start_);
  swap(time_end_, other->time_end_);
  swap(int32_id_, other->int32_id_);
  swap(int32_position_index_, other->int32_position_index_);
  swap(business_, other->business_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqQueryField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PositionField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionField::kInstrumentNameFieldNumber;
const int PositionField::kSymbolFieldNumber;
const int PositionField::kInstrumentIdFieldNumber;
const int PositionField::kExchangeIdFieldNumber;
const int PositionField::kClientIdFieldNumber;
const int PositionField::kAccountIdFieldNumber;
const int PositionField::kSideFieldNumber;
const int PositionField::kHedgeFlagFieldNumber;
const int PositionField::kDateFieldNumber;
const int PositionField::kPositionCostFieldNumber;
const int PositionField::kPositionFieldNumber;
const int PositionField::kTodayPositionFieldNumber;
const int PositionField::kHistoryPositionFieldNumber;
const int PositionField::kHistoryFrozenFieldNumber;
const int PositionField::kTodayBsPositionFieldNumber;
const int PositionField::kTodayBsFrozenFieldNumber;
const int PositionField::kTodayPrPositionFieldNumber;
const int PositionField::kTodayPrFrozenFieldNumber;
const int PositionField::kIdFieldNumber;
const int PositionField::kPortfolioId1FieldNumber;
const int PositionField::kPortfolioId2FieldNumber;
const int PositionField::kPortfolioId3FieldNumber;
const int PositionField::kBusinessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionField::PositionField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_PositionField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.PositionField)
}
PositionField::PositionField(const PositionField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_name().size() > 0) {
    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_id().size() > 0) {
    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  portfolio_id1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolio_id1().size() > 0) {
    portfolio_id1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id1_);
  }
  portfolio_id2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolio_id2().size() > 0) {
    portfolio_id2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id2_);
  }
  portfolio_id3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolio_id3().size() > 0) {
    portfolio_id3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id3_);
  }
  ::memcpy(&side_, &from.side_,
    static_cast<size_t>(reinterpret_cast<char*>(&today_pr_frozen_) -
    reinterpret_cast<char*>(&side_)) + sizeof(today_pr_frozen_));
  // @@protoc_insertion_point(copy_constructor:LT.PositionField)
}

void PositionField::SharedCtor() {
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&side_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&today_pr_frozen_) -
      reinterpret_cast<char*>(&side_)) + sizeof(today_pr_frozen_));
}

PositionField::~PositionField() {
  // @@protoc_insertion_point(destructor:LT.PositionField)
  SharedDtor();
}

void PositionField::SharedDtor() {
  instrument_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PositionField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PositionField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PositionField& PositionField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_PositionField.base);
  return *internal_default_instance();
}


void PositionField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.PositionField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrument_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&side_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&today_pr_frozen_) -
      reinterpret_cast<char*>(&side_)) + sizeof(today_pr_frozen_));
  _internal_metadata_.Clear();
}

bool PositionField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.PositionField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instrument_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.instrument_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.instrument_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.PositionSide side = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::LT::PositionSide >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.HedgeFlagType hedge_flag = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hedge_flag(static_cast< ::LT::HedgeFlagType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 date = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double position_cost = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &position_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double position = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double today_position = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &today_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double history_position = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &history_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double history_frozen = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &history_frozen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double today_bs_position = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &today_bs_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double today_bs_frozen = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &today_bs_frozen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double today_pr_position = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &today_pr_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double today_pr_frozen = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &today_pr_frozen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolio_id1 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio_id1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio_id1().data(), static_cast<int>(this->portfolio_id1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.portfolio_id1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolio_id2 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio_id2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio_id2().data(), static_cast<int>(this->portfolio_id2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.portfolio_id2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolio_id3 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio_id3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio_id3().data(), static_cast<int>(this->portfolio_id3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.PositionField.portfolio_id3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.BusinessType business = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_business(static_cast< ::LT::BusinessType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.PositionField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.PositionField)
  return false;
#undef DO_
}

void PositionField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.PositionField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.instrument_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instrument_name(), output);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.instrument_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instrument_id(), output);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchange_id(), output);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_id(), output);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account_id(), output);
  }

  // .LT.PositionSide side = 7;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->side(), output);
  }

  // .LT.HedgeFlagType hedge_flag = 8;
  if (this->hedge_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->hedge_flag(), output);
  }

  // int32 date = 9;
  if (this->date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->date(), output);
  }

  // double position_cost = 10;
  if (this->position_cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->position_cost(), output);
  }

  // double position = 11;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->position(), output);
  }

  // double today_position = 12;
  if (this->today_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->today_position(), output);
  }

  // double history_position = 13;
  if (this->history_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->history_position(), output);
  }

  // double history_frozen = 14;
  if (this->history_frozen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->history_frozen(), output);
  }

  // double today_bs_position = 15;
  if (this->today_bs_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->today_bs_position(), output);
  }

  // double today_bs_frozen = 16;
  if (this->today_bs_frozen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->today_bs_frozen(), output);
  }

  // double today_pr_position = 17;
  if (this->today_pr_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->today_pr_position(), output);
  }

  // double today_pr_frozen = 18;
  if (this->today_pr_frozen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->today_pr_frozen(), output);
  }

  // string id = 19;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->id(), output);
  }

  // string portfolio_id1 = 20;
  if (this->portfolio_id1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id1().data(), static_cast<int>(this->portfolio_id1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.portfolio_id1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->portfolio_id1(), output);
  }

  // string portfolio_id2 = 21;
  if (this->portfolio_id2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id2().data(), static_cast<int>(this->portfolio_id2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.portfolio_id2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->portfolio_id2(), output);
  }

  // string portfolio_id3 = 22;
  if (this->portfolio_id3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id3().data(), static_cast<int>(this->portfolio_id3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.portfolio_id3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->portfolio_id3(), output);
  }

  // .LT.BusinessType business = 23;
  if (this->business() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->business(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.PositionField)
}

::google::protobuf::uint8* PositionField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.PositionField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.instrument_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instrument_name(), target);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.instrument_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->instrument_id(), target);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchange_id(), target);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_id(), target);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account_id(), target);
  }

  // .LT.PositionSide side = 7;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->side(), target);
  }

  // .LT.HedgeFlagType hedge_flag = 8;
  if (this->hedge_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->hedge_flag(), target);
  }

  // int32 date = 9;
  if (this->date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->date(), target);
  }

  // double position_cost = 10;
  if (this->position_cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->position_cost(), target);
  }

  // double position = 11;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->position(), target);
  }

  // double today_position = 12;
  if (this->today_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->today_position(), target);
  }

  // double history_position = 13;
  if (this->history_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->history_position(), target);
  }

  // double history_frozen = 14;
  if (this->history_frozen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->history_frozen(), target);
  }

  // double today_bs_position = 15;
  if (this->today_bs_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->today_bs_position(), target);
  }

  // double today_bs_frozen = 16;
  if (this->today_bs_frozen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->today_bs_frozen(), target);
  }

  // double today_pr_position = 17;
  if (this->today_pr_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->today_pr_position(), target);
  }

  // double today_pr_frozen = 18;
  if (this->today_pr_frozen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->today_pr_frozen(), target);
  }

  // string id = 19;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->id(), target);
  }

  // string portfolio_id1 = 20;
  if (this->portfolio_id1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id1().data(), static_cast<int>(this->portfolio_id1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.portfolio_id1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->portfolio_id1(), target);
  }

  // string portfolio_id2 = 21;
  if (this->portfolio_id2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id2().data(), static_cast<int>(this->portfolio_id2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.portfolio_id2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->portfolio_id2(), target);
  }

  // string portfolio_id3 = 22;
  if (this->portfolio_id3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id3().data(), static_cast<int>(this->portfolio_id3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.PositionField.portfolio_id3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->portfolio_id3(), target);
  }

  // .LT.BusinessType business = 23;
  if (this->business() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      23, this->business(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.PositionField)
  return target;
}

size_t PositionField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.PositionField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_name());
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_id());
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string id = 19;
  if (this->id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string portfolio_id1 = 20;
  if (this->portfolio_id1().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio_id1());
  }

  // string portfolio_id2 = 21;
  if (this->portfolio_id2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio_id2());
  }

  // string portfolio_id3 = 22;
  if (this->portfolio_id3().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio_id3());
  }

  // .LT.PositionSide side = 7;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  // .LT.HedgeFlagType hedge_flag = 8;
  if (this->hedge_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hedge_flag());
  }

  // double position_cost = 10;
  if (this->position_cost() != 0) {
    total_size += 1 + 8;
  }

  // double position = 11;
  if (this->position() != 0) {
    total_size += 1 + 8;
  }

  // double today_position = 12;
  if (this->today_position() != 0) {
    total_size += 1 + 8;
  }

  // double history_position = 13;
  if (this->history_position() != 0) {
    total_size += 1 + 8;
  }

  // double history_frozen = 14;
  if (this->history_frozen() != 0) {
    total_size += 1 + 8;
  }

  // double today_bs_position = 15;
  if (this->today_bs_position() != 0) {
    total_size += 1 + 8;
  }

  // double today_bs_frozen = 16;
  if (this->today_bs_frozen() != 0) {
    total_size += 2 + 8;
  }

  // int32 date = 9;
  if (this->date() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->date());
  }

  // .LT.BusinessType business = 23;
  if (this->business() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->business());
  }

  // double today_pr_position = 17;
  if (this->today_pr_position() != 0) {
    total_size += 2 + 8;
  }

  // double today_pr_frozen = 18;
  if (this->today_pr_frozen() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.PositionField)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PositionField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.PositionField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.PositionField)
    MergeFrom(*source);
  }
}

void PositionField::MergeFrom(const PositionField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.PositionField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrument_name().size() > 0) {

    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.instrument_id().size() > 0) {

    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.portfolio_id1().size() > 0) {

    portfolio_id1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id1_);
  }
  if (from.portfolio_id2().size() > 0) {

    portfolio_id2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id2_);
  }
  if (from.portfolio_id3().size() > 0) {

    portfolio_id3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id3_);
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
  if (from.hedge_flag() != 0) {
    set_hedge_flag(from.hedge_flag());
  }
  if (from.position_cost() != 0) {
    set_position_cost(from.position_cost());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
  if (from.today_position() != 0) {
    set_today_position(from.today_position());
  }
  if (from.history_position() != 0) {
    set_history_position(from.history_position());
  }
  if (from.history_frozen() != 0) {
    set_history_frozen(from.history_frozen());
  }
  if (from.today_bs_position() != 0) {
    set_today_bs_position(from.today_bs_position());
  }
  if (from.today_bs_frozen() != 0) {
    set_today_bs_frozen(from.today_bs_frozen());
  }
  if (from.date() != 0) {
    set_date(from.date());
  }
  if (from.business() != 0) {
    set_business(from.business());
  }
  if (from.today_pr_position() != 0) {
    set_today_pr_position(from.today_pr_position());
  }
  if (from.today_pr_frozen() != 0) {
    set_today_pr_frozen(from.today_pr_frozen());
  }
}

void PositionField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.PositionField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionField::CopyFrom(const PositionField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.PositionField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionField::IsInitialized() const {
  return true;
}

void PositionField::Swap(PositionField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionField::InternalSwap(PositionField* other) {
  using std::swap;
  instrument_name_.Swap(&other->instrument_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrument_id_.Swap(&other->instrument_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_id_.Swap(&other->exchange_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolio_id1_.Swap(&other->portfolio_id1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolio_id2_.Swap(&other->portfolio_id2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolio_id3_.Swap(&other->portfolio_id3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(side_, other->side_);
  swap(hedge_flag_, other->hedge_flag_);
  swap(position_cost_, other->position_cost_);
  swap(position_, other->position_);
  swap(today_position_, other->today_position_);
  swap(history_position_, other->history_position_);
  swap(history_frozen_, other->history_frozen_);
  swap(today_bs_position_, other->today_bs_position_);
  swap(today_bs_frozen_, other->today_bs_frozen_);
  swap(date_, other->date_);
  swap(business_, other->business_);
  swap(today_pr_position_, other->today_pr_position_);
  swap(today_pr_frozen_, other->today_pr_frozen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PositionField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuoteField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteField::kInstrumentNameFieldNumber;
const int QuoteField::kSymbolFieldNumber;
const int QuoteField::kInstrumentIdFieldNumber;
const int QuoteField::kExchangeIdFieldNumber;
const int QuoteField::kClientIdFieldNumber;
const int QuoteField::kAccountIdFieldNumber;
const int QuoteField::kAskQtyFieldNumber;
const int QuoteField::kAskPriceFieldNumber;
const int QuoteField::kAskOpenCloseFieldNumber;
const int QuoteField::kAskHedgeFlagFieldNumber;
const int QuoteField::kBidQtyFieldNumber;
const int QuoteField::kBidPriceFieldNumber;
const int QuoteField::kBidOpenCloseFieldNumber;
const int QuoteField::kBidHedgeFlagFieldNumber;
const int QuoteField::kStatusFieldNumber;
const int QuoteField::kExecTypeFieldNumber;
const int QuoteField::kQuoteReqIdFieldNumber;
const int QuoteField::kLocalIdFieldNumber;
const int QuoteField::kIdFieldNumber;
const int QuoteField::kAskIdFieldNumber;
const int QuoteField::kBidIdFieldNumber;
const int QuoteField::kAskOrderIdFieldNumber;
const int QuoteField::kBidOrderIdFieldNumber;
const int QuoteField::kXerrorIdFieldNumber;
const int QuoteField::kRowErrorIdFieldNumber;
const int QuoteField::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteField::QuoteField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_QuoteField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.QuoteField)
}
QuoteField::QuoteField(const QuoteField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_name().size() > 0) {
    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_id().size() > 0) {
    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  quote_req_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.quote_req_id().size() > 0) {
    quote_req_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_req_id_);
  }
  local_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_id().size() > 0) {
    local_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ask_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ask_id().size() > 0) {
    ask_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ask_id_);
  }
  bid_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bid_id().size() > 0) {
    bid_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_id_);
  }
  ask_order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ask_order_id().size() > 0) {
    ask_order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ask_order_id_);
  }
  bid_order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bid_order_id().size() > 0) {
    bid_order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_order_id_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&ask_qty_, &from.ask_qty_,
    static_cast<size_t>(reinterpret_cast<char*>(&row_error_id_) -
    reinterpret_cast<char*>(&ask_qty_)) + sizeof(row_error_id_));
  // @@protoc_insertion_point(copy_constructor:LT.QuoteField)
}

void QuoteField::SharedCtor() {
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_req_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ask_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bid_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ask_order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bid_order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ask_qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_error_id_) -
      reinterpret_cast<char*>(&ask_qty_)) + sizeof(row_error_id_));
}

QuoteField::~QuoteField() {
  // @@protoc_insertion_point(destructor:LT.QuoteField)
  SharedDtor();
}

void QuoteField::SharedDtor() {
  instrument_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_req_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ask_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bid_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ask_order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bid_order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuoteField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuoteField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuoteField& QuoteField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_QuoteField.base);
  return *internal_default_instance();
}


void QuoteField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.QuoteField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrument_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_req_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ask_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bid_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ask_order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bid_order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ask_qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_error_id_) -
      reinterpret_cast<char*>(&ask_qty_)) + sizeof(row_error_id_));
  _internal_metadata_.Clear();
}

bool QuoteField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.QuoteField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instrument_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.instrument_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.instrument_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ask_qty = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ask_qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ask_price = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ask_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.OpenCloseType ask_open_close = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ask_open_close(static_cast< ::LT::OpenCloseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.HedgeFlagType ask_hedge_flag = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ask_hedge_flag(static_cast< ::LT::HedgeFlagType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bid_qty = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bid_qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bid_price = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bid_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.OpenCloseType bid_open_close = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bid_open_close(static_cast< ::LT::OpenCloseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.HedgeFlagType bid_hedge_flag = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bid_hedge_flag(static_cast< ::LT::HedgeFlagType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.OrderStatus status = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::LT::OrderStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.ExecType exec_type = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_exec_type(static_cast< ::LT::ExecType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string quote_req_id = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quote_req_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quote_req_id().data(), static_cast<int>(this->quote_req_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.quote_req_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_id = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_id().data(), static_cast<int>(this->local_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.local_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ask_id = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ask_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ask_id().data(), static_cast<int>(this->ask_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.ask_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bid_id = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bid_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bid_id().data(), static_cast<int>(this->bid_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.bid_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ask_order_id = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ask_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ask_order_id().data(), static_cast<int>(this->ask_order_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.ask_order_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bid_order_id = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bid_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bid_order_id().data(), static_cast<int>(this->bid_order_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.bid_order_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 xerror_id = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xerror_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row_error_id = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_error_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteField.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.QuoteField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.QuoteField)
  return false;
#undef DO_
}

void QuoteField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.QuoteField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.instrument_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instrument_name(), output);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.instrument_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instrument_id(), output);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchange_id(), output);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_id(), output);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account_id(), output);
  }

  // double ask_qty = 7;
  if (this->ask_qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->ask_qty(), output);
  }

  // double ask_price = 8;
  if (this->ask_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->ask_price(), output);
  }

  // .LT.OpenCloseType ask_open_close = 9;
  if (this->ask_open_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->ask_open_close(), output);
  }

  // .LT.HedgeFlagType ask_hedge_flag = 10;
  if (this->ask_hedge_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->ask_hedge_flag(), output);
  }

  // double bid_qty = 11;
  if (this->bid_qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->bid_qty(), output);
  }

  // double bid_price = 12;
  if (this->bid_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->bid_price(), output);
  }

  // .LT.OpenCloseType bid_open_close = 13;
  if (this->bid_open_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->bid_open_close(), output);
  }

  // .LT.HedgeFlagType bid_hedge_flag = 14;
  if (this->bid_hedge_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->bid_hedge_flag(), output);
  }

  // .LT.OrderStatus status = 15;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->status(), output);
  }

  // .LT.ExecType exec_type = 16;
  if (this->exec_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->exec_type(), output);
  }

  // string quote_req_id = 17;
  if (this->quote_req_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quote_req_id().data(), static_cast<int>(this->quote_req_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.quote_req_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->quote_req_id(), output);
  }

  // string local_id = 18;
  if (this->local_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_id().data(), static_cast<int>(this->local_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.local_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->local_id(), output);
  }

  // string id = 19;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->id(), output);
  }

  // string ask_id = 20;
  if (this->ask_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ask_id().data(), static_cast<int>(this->ask_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.ask_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->ask_id(), output);
  }

  // string bid_id = 21;
  if (this->bid_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bid_id().data(), static_cast<int>(this->bid_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.bid_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->bid_id(), output);
  }

  // string ask_order_id = 22;
  if (this->ask_order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ask_order_id().data(), static_cast<int>(this->ask_order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.ask_order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->ask_order_id(), output);
  }

  // string bid_order_id = 23;
  if (this->bid_order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bid_order_id().data(), static_cast<int>(this->bid_order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.bid_order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->bid_order_id(), output);
  }

  // int32 xerror_id = 24;
  if (this->xerror_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->xerror_id(), output);
  }

  // int32 row_error_id = 25;
  if (this->row_error_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->row_error_id(), output);
  }

  // string text = 26;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.QuoteField)
}

::google::protobuf::uint8* QuoteField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.QuoteField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.instrument_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instrument_name(), target);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.instrument_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->instrument_id(), target);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchange_id(), target);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_id(), target);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account_id(), target);
  }

  // double ask_qty = 7;
  if (this->ask_qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->ask_qty(), target);
  }

  // double ask_price = 8;
  if (this->ask_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->ask_price(), target);
  }

  // .LT.OpenCloseType ask_open_close = 9;
  if (this->ask_open_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->ask_open_close(), target);
  }

  // .LT.HedgeFlagType ask_hedge_flag = 10;
  if (this->ask_hedge_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->ask_hedge_flag(), target);
  }

  // double bid_qty = 11;
  if (this->bid_qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->bid_qty(), target);
  }

  // double bid_price = 12;
  if (this->bid_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->bid_price(), target);
  }

  // .LT.OpenCloseType bid_open_close = 13;
  if (this->bid_open_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->bid_open_close(), target);
  }

  // .LT.HedgeFlagType bid_hedge_flag = 14;
  if (this->bid_hedge_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->bid_hedge_flag(), target);
  }

  // .LT.OrderStatus status = 15;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->status(), target);
  }

  // .LT.ExecType exec_type = 16;
  if (this->exec_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->exec_type(), target);
  }

  // string quote_req_id = 17;
  if (this->quote_req_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quote_req_id().data(), static_cast<int>(this->quote_req_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.quote_req_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->quote_req_id(), target);
  }

  // string local_id = 18;
  if (this->local_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_id().data(), static_cast<int>(this->local_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.local_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->local_id(), target);
  }

  // string id = 19;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->id(), target);
  }

  // string ask_id = 20;
  if (this->ask_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ask_id().data(), static_cast<int>(this->ask_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.ask_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->ask_id(), target);
  }

  // string bid_id = 21;
  if (this->bid_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bid_id().data(), static_cast<int>(this->bid_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.bid_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->bid_id(), target);
  }

  // string ask_order_id = 22;
  if (this->ask_order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ask_order_id().data(), static_cast<int>(this->ask_order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.ask_order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->ask_order_id(), target);
  }

  // string bid_order_id = 23;
  if (this->bid_order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bid_order_id().data(), static_cast<int>(this->bid_order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.bid_order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->bid_order_id(), target);
  }

  // int32 xerror_id = 24;
  if (this->xerror_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->xerror_id(), target);
  }

  // int32 row_error_id = 25;
  if (this->row_error_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->row_error_id(), target);
  }

  // string text = 26;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteField.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.QuoteField)
  return target;
}

size_t QuoteField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.QuoteField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_name());
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_id());
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string quote_req_id = 17;
  if (this->quote_req_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->quote_req_id());
  }

  // string local_id = 18;
  if (this->local_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_id());
  }

  // string id = 19;
  if (this->id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string ask_id = 20;
  if (this->ask_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ask_id());
  }

  // string bid_id = 21;
  if (this->bid_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bid_id());
  }

  // string ask_order_id = 22;
  if (this->ask_order_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ask_order_id());
  }

  // string bid_order_id = 23;
  if (this->bid_order_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bid_order_id());
  }

  // string text = 26;
  if (this->text().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // double ask_qty = 7;
  if (this->ask_qty() != 0) {
    total_size += 1 + 8;
  }

  // double ask_price = 8;
  if (this->ask_price() != 0) {
    total_size += 1 + 8;
  }

  // .LT.OpenCloseType ask_open_close = 9;
  if (this->ask_open_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ask_open_close());
  }

  // .LT.HedgeFlagType ask_hedge_flag = 10;
  if (this->ask_hedge_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ask_hedge_flag());
  }

  // double bid_qty = 11;
  if (this->bid_qty() != 0) {
    total_size += 1 + 8;
  }

  // double bid_price = 12;
  if (this->bid_price() != 0) {
    total_size += 1 + 8;
  }

  // .LT.OpenCloseType bid_open_close = 13;
  if (this->bid_open_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bid_open_close());
  }

  // .LT.HedgeFlagType bid_hedge_flag = 14;
  if (this->bid_hedge_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bid_hedge_flag());
  }

  // .LT.OrderStatus status = 15;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // .LT.ExecType exec_type = 16;
  if (this->exec_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->exec_type());
  }

  // int32 xerror_id = 24;
  if (this->xerror_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xerror_id());
  }

  // int32 row_error_id = 25;
  if (this->row_error_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_error_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuoteField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.QuoteField)
  GOOGLE_DCHECK_NE(&from, this);
  const QuoteField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.QuoteField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.QuoteField)
    MergeFrom(*source);
  }
}

void QuoteField::MergeFrom(const QuoteField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.QuoteField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrument_name().size() > 0) {

    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.instrument_id().size() > 0) {

    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.quote_req_id().size() > 0) {

    quote_req_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_req_id_);
  }
  if (from.local_id().size() > 0) {

    local_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.ask_id().size() > 0) {

    ask_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ask_id_);
  }
  if (from.bid_id().size() > 0) {

    bid_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_id_);
  }
  if (from.ask_order_id().size() > 0) {

    ask_order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ask_order_id_);
  }
  if (from.bid_order_id().size() > 0) {

    bid_order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_order_id_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.ask_qty() != 0) {
    set_ask_qty(from.ask_qty());
  }
  if (from.ask_price() != 0) {
    set_ask_price(from.ask_price());
  }
  if (from.ask_open_close() != 0) {
    set_ask_open_close(from.ask_open_close());
  }
  if (from.ask_hedge_flag() != 0) {
    set_ask_hedge_flag(from.ask_hedge_flag());
  }
  if (from.bid_qty() != 0) {
    set_bid_qty(from.bid_qty());
  }
  if (from.bid_price() != 0) {
    set_bid_price(from.bid_price());
  }
  if (from.bid_open_close() != 0) {
    set_bid_open_close(from.bid_open_close());
  }
  if (from.bid_hedge_flag() != 0) {
    set_bid_hedge_flag(from.bid_hedge_flag());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.exec_type() != 0) {
    set_exec_type(from.exec_type());
  }
  if (from.xerror_id() != 0) {
    set_xerror_id(from.xerror_id());
  }
  if (from.row_error_id() != 0) {
    set_row_error_id(from.row_error_id());
  }
}

void QuoteField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.QuoteField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteField::CopyFrom(const QuoteField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.QuoteField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteField::IsInitialized() const {
  return true;
}

void QuoteField::Swap(QuoteField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteField::InternalSwap(QuoteField* other) {
  using std::swap;
  instrument_name_.Swap(&other->instrument_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrument_id_.Swap(&other->instrument_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_id_.Swap(&other->exchange_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  quote_req_id_.Swap(&other->quote_req_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_id_.Swap(&other->local_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ask_id_.Swap(&other->ask_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bid_id_.Swap(&other->bid_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ask_order_id_.Swap(&other->ask_order_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bid_order_id_.Swap(&other->bid_order_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ask_qty_, other->ask_qty_);
  swap(ask_price_, other->ask_price_);
  swap(ask_open_close_, other->ask_open_close_);
  swap(ask_hedge_flag_, other->ask_hedge_flag_);
  swap(bid_qty_, other->bid_qty_);
  swap(bid_price_, other->bid_price_);
  swap(bid_open_close_, other->bid_open_close_);
  swap(bid_hedge_flag_, other->bid_hedge_flag_);
  swap(status_, other->status_);
  swap(exec_type_, other->exec_type_);
  swap(xerror_id_, other->xerror_id_);
  swap(row_error_id_, other->row_error_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuoteField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderField::kInstrumentNameFieldNumber;
const int OrderField::kSymbolFieldNumber;
const int OrderField::kInstrumentIdFieldNumber;
const int OrderField::kExchangeIdFieldNumber;
const int OrderField::kClientIdFieldNumber;
const int OrderField::kAccountIdFieldNumber;
const int OrderField::kSizeFieldNumber;
const int OrderField::kQtyFieldNumber;
const int OrderField::kPriceFieldNumber;
const int OrderField::kOpenCloseFieldNumber;
const int OrderField::kHedgeFlagFieldNumber;
const int OrderField::kDateFieldNumber;
const int OrderField::kTimeFieldNumber;
const int OrderField::kIdFieldNumber;
const int OrderField::kOrderIdFieldNumber;
const int OrderField::kLocalIdFieldNumber;
const int OrderField::kTypeFieldNumber;
const int OrderField::kStopPxFieldNumber;
const int OrderField::kTimeInForceFieldNumber;
const int OrderField::kStatusFieldNumber;
const int OrderField::kExecTypeFieldNumber;
const int OrderField::kLeavesQtyFieldNumber;
const int OrderField::kCumQtyFieldNumber;
const int OrderField::kAvgPxFieldNumber;
const int OrderField::kXerrorIdFieldNumber;
const int OrderField::kRawErrorIdFieldNumber;
const int OrderField::kTextFieldNumber;
const int OrderField::kReserveInt32FieldNumber;
const int OrderField::kReserveChar64FieldNumber;
const int OrderField::kPortfolioId1FieldNumber;
const int OrderField::kPortfolioId2FieldNumber;
const int OrderField::kPortfolioId3FieldNumber;
const int OrderField::kBusinessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderField::OrderField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_OrderField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.OrderField)
}
OrderField::OrderField(const OrderField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_name().size() > 0) {
    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_id().size() > 0) {
    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_id().size() > 0) {
    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
  local_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_id().size() > 0) {
    local_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_id_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  reserve_char64_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reserve_char64().size() > 0) {
    reserve_char64_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reserve_char64_);
  }
  portfolio_id1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolio_id1().size() > 0) {
    portfolio_id1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id1_);
  }
  portfolio_id2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolio_id2().size() > 0) {
    portfolio_id2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id2_);
  }
  portfolio_id3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolio_id3().size() > 0) {
    portfolio_id3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id3_);
  }
  ::memcpy(&qty_, &from.qty_,
    static_cast<size_t>(reinterpret_cast<char*>(&business_) -
    reinterpret_cast<char*>(&qty_)) + sizeof(business_));
  // @@protoc_insertion_point(copy_constructor:LT.OrderField)
}

void OrderField::SharedCtor() {
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserve_char64_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&business_) -
      reinterpret_cast<char*>(&qty_)) + sizeof(business_));
}

OrderField::~OrderField() {
  // @@protoc_insertion_point(destructor:LT.OrderField)
  SharedDtor();
}

void OrderField::SharedDtor() {
  instrument_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserve_char64_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderField& OrderField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_OrderField.base);
  return *internal_default_instance();
}


void OrderField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.OrderField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrument_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserve_char64_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolio_id3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&business_) -
      reinterpret_cast<char*>(&qty_)) + sizeof(business_));
  _internal_metadata_.Clear();
}

bool OrderField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.OrderField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instrument_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.instrument_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.instrument_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.OrderSide size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_size(static_cast< ::LT::OrderSide >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double qty = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double price = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.OpenCloseType open_close = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_open_close(static_cast< ::LT::OpenCloseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.HedgeFlagType hedge_flag = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hedge_flag(static_cast< ::LT::HedgeFlagType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 date = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_id().data(), static_cast<int>(this->order_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.order_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_id().data(), static_cast<int>(this->local_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.local_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.OrderType type = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::LT::OrderType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double stop_px = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stop_px_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.TimeInForce time_in_force = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_time_in_force(static_cast< ::LT::TimeInForce >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.OrderStatus status = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::LT::OrderStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.ExecType exec_type = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_exec_type(static_cast< ::LT::ExecType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double leaves_qty = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &leaves_qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cum_qty = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cum_qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double avg_px = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avg_px_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 xerror_id = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xerror_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 raw_error_id = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &raw_error_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reserve_int32 = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserve_int32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reserve_char64 = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reserve_char64()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reserve_char64().data(), static_cast<int>(this->reserve_char64().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.reserve_char64"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolio_id1 = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio_id1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio_id1().data(), static_cast<int>(this->portfolio_id1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.portfolio_id1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolio_id2 = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio_id2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio_id2().data(), static_cast<int>(this->portfolio_id2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.portfolio_id2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolio_id3 = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolio_id3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolio_id3().data(), static_cast<int>(this->portfolio_id3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.OrderField.portfolio_id3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.BusinessType business = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_business(static_cast< ::LT::BusinessType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.OrderField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.OrderField)
  return false;
#undef DO_
}

void OrderField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.OrderField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.instrument_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instrument_name(), output);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.instrument_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instrument_id(), output);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchange_id(), output);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_id(), output);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account_id(), output);
  }

  // .LT.OrderSide size = 7;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->size(), output);
  }

  // double qty = 8;
  if (this->qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->qty(), output);
  }

  // double price = 9;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->price(), output);
  }

  // .LT.OpenCloseType open_close = 10;
  if (this->open_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->open_close(), output);
  }

  // .LT.HedgeFlagType hedge_flag = 11;
  if (this->hedge_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->hedge_flag(), output);
  }

  // int32 date = 12;
  if (this->date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->date(), output);
  }

  // int64 time = 13;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->time(), output);
  }

  // string id = 14;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->id(), output);
  }

  // string order_id = 15;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), static_cast<int>(this->order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->order_id(), output);
  }

  // string local_id = 16;
  if (this->local_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_id().data(), static_cast<int>(this->local_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.local_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->local_id(), output);
  }

  // .LT.OrderType type = 17;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->type(), output);
  }

  // double stop_px = 18;
  if (this->stop_px() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->stop_px(), output);
  }

  // .LT.TimeInForce time_in_force = 19;
  if (this->time_in_force() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->time_in_force(), output);
  }

  // .LT.OrderStatus status = 20;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      20, this->status(), output);
  }

  // .LT.ExecType exec_type = 21;
  if (this->exec_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->exec_type(), output);
  }

  // double leaves_qty = 22;
  if (this->leaves_qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->leaves_qty(), output);
  }

  // double cum_qty = 23;
  if (this->cum_qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->cum_qty(), output);
  }

  // double avg_px = 24;
  if (this->avg_px() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->avg_px(), output);
  }

  // int32 xerror_id = 25;
  if (this->xerror_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->xerror_id(), output);
  }

  // int32 raw_error_id = 26;
  if (this->raw_error_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->raw_error_id(), output);
  }

  // string text = 27;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->text(), output);
  }

  // int32 reserve_int32 = 28;
  if (this->reserve_int32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->reserve_int32(), output);
  }

  // string reserve_char64 = 29;
  if (this->reserve_char64().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserve_char64().data(), static_cast<int>(this->reserve_char64().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.reserve_char64");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->reserve_char64(), output);
  }

  // string portfolio_id1 = 30;
  if (this->portfolio_id1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id1().data(), static_cast<int>(this->portfolio_id1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.portfolio_id1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->portfolio_id1(), output);
  }

  // string portfolio_id2 = 31;
  if (this->portfolio_id2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id2().data(), static_cast<int>(this->portfolio_id2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.portfolio_id2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      31, this->portfolio_id2(), output);
  }

  // string portfolio_id3 = 32;
  if (this->portfolio_id3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id3().data(), static_cast<int>(this->portfolio_id3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.portfolio_id3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->portfolio_id3(), output);
  }

  // .LT.BusinessType business = 33;
  if (this->business() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      33, this->business(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.OrderField)
}

::google::protobuf::uint8* OrderField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.OrderField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.instrument_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instrument_name(), target);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.instrument_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->instrument_id(), target);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchange_id(), target);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_id(), target);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account_id(), target);
  }

  // .LT.OrderSide size = 7;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->size(), target);
  }

  // double qty = 8;
  if (this->qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->qty(), target);
  }

  // double price = 9;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->price(), target);
  }

  // .LT.OpenCloseType open_close = 10;
  if (this->open_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->open_close(), target);
  }

  // .LT.HedgeFlagType hedge_flag = 11;
  if (this->hedge_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->hedge_flag(), target);
  }

  // int32 date = 12;
  if (this->date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->date(), target);
  }

  // int64 time = 13;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->time(), target);
  }

  // string id = 14;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->id(), target);
  }

  // string order_id = 15;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), static_cast<int>(this->order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->order_id(), target);
  }

  // string local_id = 16;
  if (this->local_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_id().data(), static_cast<int>(this->local_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.local_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->local_id(), target);
  }

  // .LT.OrderType type = 17;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->type(), target);
  }

  // double stop_px = 18;
  if (this->stop_px() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->stop_px(), target);
  }

  // .LT.TimeInForce time_in_force = 19;
  if (this->time_in_force() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      19, this->time_in_force(), target);
  }

  // .LT.OrderStatus status = 20;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      20, this->status(), target);
  }

  // .LT.ExecType exec_type = 21;
  if (this->exec_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->exec_type(), target);
  }

  // double leaves_qty = 22;
  if (this->leaves_qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->leaves_qty(), target);
  }

  // double cum_qty = 23;
  if (this->cum_qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->cum_qty(), target);
  }

  // double avg_px = 24;
  if (this->avg_px() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->avg_px(), target);
  }

  // int32 xerror_id = 25;
  if (this->xerror_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->xerror_id(), target);
  }

  // int32 raw_error_id = 26;
  if (this->raw_error_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->raw_error_id(), target);
  }

  // string text = 27;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->text(), target);
  }

  // int32 reserve_int32 = 28;
  if (this->reserve_int32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->reserve_int32(), target);
  }

  // string reserve_char64 = 29;
  if (this->reserve_char64().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserve_char64().data(), static_cast<int>(this->reserve_char64().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.reserve_char64");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->reserve_char64(), target);
  }

  // string portfolio_id1 = 30;
  if (this->portfolio_id1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id1().data(), static_cast<int>(this->portfolio_id1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.portfolio_id1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->portfolio_id1(), target);
  }

  // string portfolio_id2 = 31;
  if (this->portfolio_id2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id2().data(), static_cast<int>(this->portfolio_id2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.portfolio_id2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->portfolio_id2(), target);
  }

  // string portfolio_id3 = 32;
  if (this->portfolio_id3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolio_id3().data(), static_cast<int>(this->portfolio_id3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.OrderField.portfolio_id3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->portfolio_id3(), target);
  }

  // .LT.BusinessType business = 33;
  if (this->business() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      33, this->business(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.OrderField)
  return target;
}

size_t OrderField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.OrderField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_name());
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_id());
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string id = 14;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string order_id = 15;
  if (this->order_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_id());
  }

  // string local_id = 16;
  if (this->local_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_id());
  }

  // string text = 27;
  if (this->text().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string reserve_char64 = 29;
  if (this->reserve_char64().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reserve_char64());
  }

  // string portfolio_id1 = 30;
  if (this->portfolio_id1().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio_id1());
  }

  // string portfolio_id2 = 31;
  if (this->portfolio_id2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio_id2());
  }

  // string portfolio_id3 = 32;
  if (this->portfolio_id3().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolio_id3());
  }

  // double qty = 8;
  if (this->qty() != 0) {
    total_size += 1 + 8;
  }

  // .LT.OrderSide size = 7;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->size());
  }

  // .LT.OpenCloseType open_close = 10;
  if (this->open_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->open_close());
  }

  // double price = 9;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // .LT.HedgeFlagType hedge_flag = 11;
  if (this->hedge_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hedge_flag());
  }

  // int32 date = 12;
  if (this->date() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->date());
  }

  // int64 time = 13;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // double stop_px = 18;
  if (this->stop_px() != 0) {
    total_size += 2 + 8;
  }

  // .LT.OrderType type = 17;
  if (this->type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .LT.TimeInForce time_in_force = 19;
  if (this->time_in_force() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->time_in_force());
  }

  // .LT.OrderStatus status = 20;
  if (this->status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // .LT.ExecType exec_type = 21;
  if (this->exec_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->exec_type());
  }

  // double leaves_qty = 22;
  if (this->leaves_qty() != 0) {
    total_size += 2 + 8;
  }

  // double cum_qty = 23;
  if (this->cum_qty() != 0) {
    total_size += 2 + 8;
  }

  // double avg_px = 24;
  if (this->avg_px() != 0) {
    total_size += 2 + 8;
  }

  // int32 xerror_id = 25;
  if (this->xerror_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xerror_id());
  }

  // int32 raw_error_id = 26;
  if (this->raw_error_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->raw_error_id());
  }

  // int32 reserve_int32 = 28;
  if (this->reserve_int32() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserve_int32());
  }

  // .LT.BusinessType business = 33;
  if (this->business() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->business());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.OrderField)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.OrderField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.OrderField)
    MergeFrom(*source);
  }
}

void OrderField::MergeFrom(const OrderField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.OrderField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrument_name().size() > 0) {

    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.instrument_id().size() > 0) {

    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.order_id().size() > 0) {

    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
  if (from.local_id().size() > 0) {

    local_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_id_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.reserve_char64().size() > 0) {

    reserve_char64_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reserve_char64_);
  }
  if (from.portfolio_id1().size() > 0) {

    portfolio_id1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id1_);
  }
  if (from.portfolio_id2().size() > 0) {

    portfolio_id2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id2_);
  }
  if (from.portfolio_id3().size() > 0) {

    portfolio_id3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolio_id3_);
  }
  if (from.qty() != 0) {
    set_qty(from.qty());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.open_close() != 0) {
    set_open_close(from.open_close());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.hedge_flag() != 0) {
    set_hedge_flag(from.hedge_flag());
  }
  if (from.date() != 0) {
    set_date(from.date());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.stop_px() != 0) {
    set_stop_px(from.stop_px());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.time_in_force() != 0) {
    set_time_in_force(from.time_in_force());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.exec_type() != 0) {
    set_exec_type(from.exec_type());
  }
  if (from.leaves_qty() != 0) {
    set_leaves_qty(from.leaves_qty());
  }
  if (from.cum_qty() != 0) {
    set_cum_qty(from.cum_qty());
  }
  if (from.avg_px() != 0) {
    set_avg_px(from.avg_px());
  }
  if (from.xerror_id() != 0) {
    set_xerror_id(from.xerror_id());
  }
  if (from.raw_error_id() != 0) {
    set_raw_error_id(from.raw_error_id());
  }
  if (from.reserve_int32() != 0) {
    set_reserve_int32(from.reserve_int32());
  }
  if (from.business() != 0) {
    set_business(from.business());
  }
}

void OrderField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.OrderField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderField::CopyFrom(const OrderField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.OrderField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderField::IsInitialized() const {
  return true;
}

void OrderField::Swap(OrderField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderField::InternalSwap(OrderField* other) {
  using std::swap;
  instrument_name_.Swap(&other->instrument_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrument_id_.Swap(&other->instrument_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_id_.Swap(&other->exchange_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_id_.Swap(&other->order_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_id_.Swap(&other->local_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reserve_char64_.Swap(&other->reserve_char64_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolio_id1_.Swap(&other->portfolio_id1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolio_id2_.Swap(&other->portfolio_id2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolio_id3_.Swap(&other->portfolio_id3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(qty_, other->qty_);
  swap(size_, other->size_);
  swap(open_close_, other->open_close_);
  swap(price_, other->price_);
  swap(hedge_flag_, other->hedge_flag_);
  swap(date_, other->date_);
  swap(time_, other->time_);
  swap(stop_px_, other->stop_px_);
  swap(type_, other->type_);
  swap(time_in_force_, other->time_in_force_);
  swap(status_, other->status_);
  swap(exec_type_, other->exec_type_);
  swap(leaves_qty_, other->leaves_qty_);
  swap(cum_qty_, other->cum_qty_);
  swap(avg_px_, other->avg_px_);
  swap(xerror_id_, other->xerror_id_);
  swap(raw_error_id_, other->raw_error_id_);
  swap(reserve_int32_, other->reserve_int32_);
  swap(business_, other->business_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TradeField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TradeField::kInstrumentNameFieldNumber;
const int TradeField::kSymbolFieldNumber;
const int TradeField::kInstrumentIdFieldNumber;
const int TradeField::kExchangeIdFieldNumber;
const int TradeField::kClientIdFieldNumber;
const int TradeField::kAccountIdFieldNumber;
const int TradeField::kSideFieldNumber;
const int TradeField::kQtyFieldNumber;
const int TradeField::kPriceFieldNumber;
const int TradeField::kOpenCloseFieldNumber;
const int TradeField::kHedgeFlagFieldNumber;
const int TradeField::kDateFieldNumber;
const int TradeField::kTimeFieldNumber;
const int TradeField::kIdFieldNumber;
const int TradeField::kTradeidFieldNumber;
const int TradeField::kCommissionFieldNumber;
const int TradeField::kReserveint32FieldNumber;
const int TradeField::kReservechar64FieldNumber;
const int TradeField::kPortfolioid1FieldNumber;
const int TradeField::kPortfolioid2FieldNumber;
const int TradeField::kPortfolioid3FieldNumber;
const int TradeField::kBusinessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TradeField::TradeField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_TradeField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.TradeField)
}
TradeField::TradeField(const TradeField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_name().size() > 0) {
    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_id().size() > 0) {
    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  tradeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tradeid().size() > 0) {
    tradeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradeid_);
  }
  reservechar64_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reservechar64().size() > 0) {
    reservechar64_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reservechar64_);
  }
  portfolioid1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolioid1().size() > 0) {
    portfolioid1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolioid1_);
  }
  portfolioid2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolioid2().size() > 0) {
    portfolioid2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolioid2_);
  }
  portfolioid3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portfolioid3().size() > 0) {
    portfolioid3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolioid3_);
  }
  ::memcpy(&qty_, &from.qty_,
    static_cast<size_t>(reinterpret_cast<char*>(&business_) -
    reinterpret_cast<char*>(&qty_)) + sizeof(business_));
  // @@protoc_insertion_point(copy_constructor:LT.TradeField)
}

void TradeField::SharedCtor() {
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reservechar64_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolioid1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolioid2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolioid3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&business_) -
      reinterpret_cast<char*>(&qty_)) + sizeof(business_));
}

TradeField::~TradeField() {
  // @@protoc_insertion_point(destructor:LT.TradeField)
  SharedDtor();
}

void TradeField::SharedDtor() {
  instrument_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradeid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reservechar64_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolioid1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolioid2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolioid3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TradeField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TradeField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TradeField& TradeField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_TradeField.base);
  return *internal_default_instance();
}


void TradeField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.TradeField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrument_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tradeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reservechar64_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolioid1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolioid2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portfolioid3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&business_) -
      reinterpret_cast<char*>(&qty_)) + sizeof(business_));
  _internal_metadata_.Clear();
}

bool TradeField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.TradeField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instrument_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.instrument_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.instrument_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.OrderSide side = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::LT::OrderSide >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double qty = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double price = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.OpenCloseType open_close = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_open_close(static_cast< ::LT::OpenCloseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.HedgeFlagType hedge_flag = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hedge_flag(static_cast< ::LT::HedgeFlagType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 date = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tradeid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradeid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradeid().data(), static_cast<int>(this->tradeid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.tradeid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double commission = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &commission_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reserveint32 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserveint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reservechar64 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reservechar64()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reservechar64().data(), static_cast<int>(this->reservechar64().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.reservechar64"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolioid1 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolioid1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolioid1().data(), static_cast<int>(this->portfolioid1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.portfolioid1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolioid2 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolioid2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolioid2().data(), static_cast<int>(this->portfolioid2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.portfolioid2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portfolioid3 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portfolioid3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portfolioid3().data(), static_cast<int>(this->portfolioid3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.TradeField.portfolioid3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.BusinessType business = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_business(static_cast< ::LT::BusinessType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.TradeField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.TradeField)
  return false;
#undef DO_
}

void TradeField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.TradeField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.instrument_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instrument_name(), output);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.instrument_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instrument_id(), output);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchange_id(), output);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_id(), output);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account_id(), output);
  }

  // .LT.OrderSide side = 7;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->side(), output);
  }

  // double qty = 8;
  if (this->qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->qty(), output);
  }

  // double price = 9;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->price(), output);
  }

  // .LT.OpenCloseType open_close = 10;
  if (this->open_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->open_close(), output);
  }

  // .LT.HedgeFlagType hedge_flag = 11;
  if (this->hedge_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->hedge_flag(), output);
  }

  // int32 date = 12;
  if (this->date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->date(), output);
  }

  // int64 time = 13;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->time(), output);
  }

  // string id = 14;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->id(), output);
  }

  // string tradeid = 15;
  if (this->tradeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradeid().data(), static_cast<int>(this->tradeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.tradeid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->tradeid(), output);
  }

  // double commission = 16;
  if (this->commission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->commission(), output);
  }

  // int32 reserveint32 = 17;
  if (this->reserveint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->reserveint32(), output);
  }

  // string reservechar64 = 18;
  if (this->reservechar64().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reservechar64().data(), static_cast<int>(this->reservechar64().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.reservechar64");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->reservechar64(), output);
  }

  // string portfolioid1 = 19;
  if (this->portfolioid1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolioid1().data(), static_cast<int>(this->portfolioid1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.portfolioid1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->portfolioid1(), output);
  }

  // string portfolioid2 = 20;
  if (this->portfolioid2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolioid2().data(), static_cast<int>(this->portfolioid2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.portfolioid2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->portfolioid2(), output);
  }

  // string portfolioid3 = 21;
  if (this->portfolioid3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolioid3().data(), static_cast<int>(this->portfolioid3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.portfolioid3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->portfolioid3(), output);
  }

  // .LT.BusinessType business = 22;
  if (this->business() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->business(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.TradeField)
}

::google::protobuf::uint8* TradeField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.TradeField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.instrument_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instrument_name(), target);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.instrument_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->instrument_id(), target);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchange_id(), target);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_id(), target);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account_id(), target);
  }

  // .LT.OrderSide side = 7;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->side(), target);
  }

  // double qty = 8;
  if (this->qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->qty(), target);
  }

  // double price = 9;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->price(), target);
  }

  // .LT.OpenCloseType open_close = 10;
  if (this->open_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->open_close(), target);
  }

  // .LT.HedgeFlagType hedge_flag = 11;
  if (this->hedge_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->hedge_flag(), target);
  }

  // int32 date = 12;
  if (this->date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->date(), target);
  }

  // int64 time = 13;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->time(), target);
  }

  // string id = 14;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->id(), target);
  }

  // string tradeid = 15;
  if (this->tradeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradeid().data(), static_cast<int>(this->tradeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.tradeid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->tradeid(), target);
  }

  // double commission = 16;
  if (this->commission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->commission(), target);
  }

  // int32 reserveint32 = 17;
  if (this->reserveint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->reserveint32(), target);
  }

  // string reservechar64 = 18;
  if (this->reservechar64().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reservechar64().data(), static_cast<int>(this->reservechar64().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.reservechar64");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->reservechar64(), target);
  }

  // string portfolioid1 = 19;
  if (this->portfolioid1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolioid1().data(), static_cast<int>(this->portfolioid1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.portfolioid1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->portfolioid1(), target);
  }

  // string portfolioid2 = 20;
  if (this->portfolioid2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolioid2().data(), static_cast<int>(this->portfolioid2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.portfolioid2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->portfolioid2(), target);
  }

  // string portfolioid3 = 21;
  if (this->portfolioid3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portfolioid3().data(), static_cast<int>(this->portfolioid3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.TradeField.portfolioid3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->portfolioid3(), target);
  }

  // .LT.BusinessType business = 22;
  if (this->business() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->business(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.TradeField)
  return target;
}

size_t TradeField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.TradeField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_name());
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_id());
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string id = 14;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string tradeid = 15;
  if (this->tradeid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradeid());
  }

  // string reservechar64 = 18;
  if (this->reservechar64().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reservechar64());
  }

  // string portfolioid1 = 19;
  if (this->portfolioid1().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolioid1());
  }

  // string portfolioid2 = 20;
  if (this->portfolioid2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolioid2());
  }

  // string portfolioid3 = 21;
  if (this->portfolioid3().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portfolioid3());
  }

  // double qty = 8;
  if (this->qty() != 0) {
    total_size += 1 + 8;
  }

  // .LT.OrderSide side = 7;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  // .LT.OpenCloseType open_close = 10;
  if (this->open_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->open_close());
  }

  // double price = 9;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // .LT.HedgeFlagType hedge_flag = 11;
  if (this->hedge_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hedge_flag());
  }

  // int32 date = 12;
  if (this->date() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->date());
  }

  // int64 time = 13;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // double commission = 16;
  if (this->commission() != 0) {
    total_size += 2 + 8;
  }

  // int32 reserveint32 = 17;
  if (this->reserveint32() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserveint32());
  }

  // .LT.BusinessType business = 22;
  if (this->business() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->business());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TradeField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.TradeField)
  GOOGLE_DCHECK_NE(&from, this);
  const TradeField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TradeField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.TradeField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.TradeField)
    MergeFrom(*source);
  }
}

void TradeField::MergeFrom(const TradeField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.TradeField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrument_name().size() > 0) {

    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.instrument_id().size() > 0) {

    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.tradeid().size() > 0) {

    tradeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradeid_);
  }
  if (from.reservechar64().size() > 0) {

    reservechar64_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reservechar64_);
  }
  if (from.portfolioid1().size() > 0) {

    portfolioid1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolioid1_);
  }
  if (from.portfolioid2().size() > 0) {

    portfolioid2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolioid2_);
  }
  if (from.portfolioid3().size() > 0) {

    portfolioid3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portfolioid3_);
  }
  if (from.qty() != 0) {
    set_qty(from.qty());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
  if (from.open_close() != 0) {
    set_open_close(from.open_close());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.hedge_flag() != 0) {
    set_hedge_flag(from.hedge_flag());
  }
  if (from.date() != 0) {
    set_date(from.date());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.commission() != 0) {
    set_commission(from.commission());
  }
  if (from.reserveint32() != 0) {
    set_reserveint32(from.reserveint32());
  }
  if (from.business() != 0) {
    set_business(from.business());
  }
}

void TradeField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.TradeField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TradeField::CopyFrom(const TradeField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.TradeField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TradeField::IsInitialized() const {
  return true;
}

void TradeField::Swap(TradeField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TradeField::InternalSwap(TradeField* other) {
  using std::swap;
  instrument_name_.Swap(&other->instrument_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrument_id_.Swap(&other->instrument_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_id_.Swap(&other->exchange_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tradeid_.Swap(&other->tradeid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reservechar64_.Swap(&other->reservechar64_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolioid1_.Swap(&other->portfolioid1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolioid2_.Swap(&other->portfolioid2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portfolioid3_.Swap(&other->portfolioid3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(qty_, other->qty_);
  swap(side_, other->side_);
  swap(open_close_, other->open_close_);
  swap(price_, other->price_);
  swap(hedge_flag_, other->hedge_flag_);
  swap(date_, other->date_);
  swap(time_, other->time_);
  swap(commission_, other->commission_);
  swap(reserveint32_, other->reserveint32_);
  swap(business_, other->business_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TradeField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerInfoField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfoField::kIsUsingUdpFieldNumber;
const int ServerInfoField::kIsMulticastFieldNumber;
const int ServerInfoField::kTopicidFieldNumber;
const int ServerInfoField::kPortFieldNumber;
const int ServerInfoField::kMarketdataTopicResumeTypeFieldNumber;
const int ServerInfoField::kPrivateTopicResumeTypeFieldNumber;
const int ServerInfoField::kPublicTopicResumeTypeFieldNumber;
const int ServerInfoField::kUserTopicResumeTypeFieldNumber;
const int ServerInfoField::kBrokerIdFieldNumber;
const int ServerInfoField::kUserProductInfoFieldNumber;
const int ServerInfoField::kAuthcodeFieldNumber;
const int ServerInfoField::kAddressFieldNumber;
const int ServerInfoField::kConfigPathFieldNumber;
const int ServerInfoField::kExtinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfoField::ServerInfoField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_ServerInfoField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.ServerInfoField)
}
ServerInfoField::ServerInfoField(const ServerInfoField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  user_product_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_product_info().size() > 0) {
    user_product_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_product_info_);
  }
  authcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.authcode().size() > 0) {
    authcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authcode_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  config_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config_path().size() > 0) {
    config_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_path_);
  }
  extinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extinfo().size() > 0) {
    extinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_);
  }
  ::memcpy(&is_using_udp_, &from.is_using_udp_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_topic_resume_type_) -
    reinterpret_cast<char*>(&is_using_udp_)) + sizeof(user_topic_resume_type_));
  // @@protoc_insertion_point(copy_constructor:LT.ServerInfoField)
}

void ServerInfoField::SharedCtor() {
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_product_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_using_udp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_topic_resume_type_) -
      reinterpret_cast<char*>(&is_using_udp_)) + sizeof(user_topic_resume_type_));
}

ServerInfoField::~ServerInfoField() {
  // @@protoc_insertion_point(destructor:LT.ServerInfoField)
  SharedDtor();
}

void ServerInfoField::SharedDtor() {
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_product_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerInfoField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerInfoField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfoField& ServerInfoField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_ServerInfoField.base);
  return *internal_default_instance();
}


void ServerInfoField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.ServerInfoField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_product_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_using_udp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_topic_resume_type_) -
      reinterpret_cast<char*>(&is_using_udp_)) + sizeof(user_topic_resume_type_));
  _internal_metadata_.Clear();
}

bool ServerInfoField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.ServerInfoField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_using_udp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_using_udp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_multicast = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_multicast_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 topicid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topicid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.ResumeType marketdata_topic_resume_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_marketdata_topic_resume_type(static_cast< ::LT::ResumeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.ResumeType private_topic_resume_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_private_topic_resume_type(static_cast< ::LT::ResumeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.ResumeType public_topic_resume_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_public_topic_resume_type(static_cast< ::LT::ResumeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.ResumeType user_topic_resume_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_user_topic_resume_type(static_cast< ::LT::ResumeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ServerInfoField.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_product_info = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_product_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_product_info().data(), static_cast<int>(this->user_product_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ServerInfoField.user_product_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string authcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authcode().data(), static_cast<int>(this->authcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ServerInfoField.authcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ServerInfoField.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string config_path = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config_path().data(), static_cast<int>(this->config_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ServerInfoField.config_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extinfo = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extinfo().data(), static_cast<int>(this->extinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ServerInfoField.extinfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.ServerInfoField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.ServerInfoField)
  return false;
#undef DO_
}

void ServerInfoField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.ServerInfoField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_using_udp = 1;
  if (this->is_using_udp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_using_udp(), output);
  }

  // bool is_multicast = 2;
  if (this->is_multicast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_multicast(), output);
  }

  // int32 topicid = 3;
  if (this->topicid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->topicid(), output);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->port(), output);
  }

  // .LT.ResumeType marketdata_topic_resume_type = 5;
  if (this->marketdata_topic_resume_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->marketdata_topic_resume_type(), output);
  }

  // .LT.ResumeType private_topic_resume_type = 6;
  if (this->private_topic_resume_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->private_topic_resume_type(), output);
  }

  // .LT.ResumeType public_topic_resume_type = 7;
  if (this->public_topic_resume_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->public_topic_resume_type(), output);
  }

  // .LT.ResumeType user_topic_resume_type = 8;
  if (this->user_topic_resume_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->user_topic_resume_type(), output);
  }

  // string broker_id = 9;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->broker_id(), output);
  }

  // string user_product_info = 10;
  if (this->user_product_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_product_info().data(), static_cast<int>(this->user_product_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.user_product_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->user_product_info(), output);
  }

  // string authcode = 11;
  if (this->authcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authcode().data(), static_cast<int>(this->authcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.authcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->authcode(), output);
  }

  // string address = 12;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->address(), output);
  }

  // string config_path = 13;
  if (this->config_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_path().data(), static_cast<int>(this->config_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.config_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->config_path(), output);
  }

  // string extinfo = 14;
  if (this->extinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extinfo().data(), static_cast<int>(this->extinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.extinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->extinfo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.ServerInfoField)
}

::google::protobuf::uint8* ServerInfoField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.ServerInfoField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_using_udp = 1;
  if (this->is_using_udp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_using_udp(), target);
  }

  // bool is_multicast = 2;
  if (this->is_multicast() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_multicast(), target);
  }

  // int32 topicid = 3;
  if (this->topicid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->topicid(), target);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->port(), target);
  }

  // .LT.ResumeType marketdata_topic_resume_type = 5;
  if (this->marketdata_topic_resume_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->marketdata_topic_resume_type(), target);
  }

  // .LT.ResumeType private_topic_resume_type = 6;
  if (this->private_topic_resume_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->private_topic_resume_type(), target);
  }

  // .LT.ResumeType public_topic_resume_type = 7;
  if (this->public_topic_resume_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->public_topic_resume_type(), target);
  }

  // .LT.ResumeType user_topic_resume_type = 8;
  if (this->user_topic_resume_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->user_topic_resume_type(), target);
  }

  // string broker_id = 9;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->broker_id(), target);
  }

  // string user_product_info = 10;
  if (this->user_product_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_product_info().data(), static_cast<int>(this->user_product_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.user_product_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->user_product_info(), target);
  }

  // string authcode = 11;
  if (this->authcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authcode().data(), static_cast<int>(this->authcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.authcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->authcode(), target);
  }

  // string address = 12;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->address(), target);
  }

  // string config_path = 13;
  if (this->config_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_path().data(), static_cast<int>(this->config_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.config_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->config_path(), target);
  }

  // string extinfo = 14;
  if (this->extinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extinfo().data(), static_cast<int>(this->extinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ServerInfoField.extinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->extinfo(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.ServerInfoField)
  return target;
}

size_t ServerInfoField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.ServerInfoField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string broker_id = 9;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string user_product_info = 10;
  if (this->user_product_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_product_info());
  }

  // string authcode = 11;
  if (this->authcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authcode());
  }

  // string address = 12;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string config_path = 13;
  if (this->config_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config_path());
  }

  // string extinfo = 14;
  if (this->extinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extinfo());
  }

  // bool is_using_udp = 1;
  if (this->is_using_udp() != 0) {
    total_size += 1 + 1;
  }

  // bool is_multicast = 2;
  if (this->is_multicast() != 0) {
    total_size += 1 + 1;
  }

  // int32 topicid = 3;
  if (this->topicid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->topicid());
  }

  // int32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // .LT.ResumeType marketdata_topic_resume_type = 5;
  if (this->marketdata_topic_resume_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->marketdata_topic_resume_type());
  }

  // .LT.ResumeType private_topic_resume_type = 6;
  if (this->private_topic_resume_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->private_topic_resume_type());
  }

  // .LT.ResumeType public_topic_resume_type = 7;
  if (this->public_topic_resume_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->public_topic_resume_type());
  }

  // .LT.ResumeType user_topic_resume_type = 8;
  if (this->user_topic_resume_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->user_topic_resume_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerInfoField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.ServerInfoField)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfoField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfoField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.ServerInfoField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.ServerInfoField)
    MergeFrom(*source);
  }
}

void ServerInfoField::MergeFrom(const ServerInfoField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.ServerInfoField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.user_product_info().size() > 0) {

    user_product_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_product_info_);
  }
  if (from.authcode().size() > 0) {

    authcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authcode_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.config_path().size() > 0) {

    config_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_path_);
  }
  if (from.extinfo().size() > 0) {

    extinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_);
  }
  if (from.is_using_udp() != 0) {
    set_is_using_udp(from.is_using_udp());
  }
  if (from.is_multicast() != 0) {
    set_is_multicast(from.is_multicast());
  }
  if (from.topicid() != 0) {
    set_topicid(from.topicid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.marketdata_topic_resume_type() != 0) {
    set_marketdata_topic_resume_type(from.marketdata_topic_resume_type());
  }
  if (from.private_topic_resume_type() != 0) {
    set_private_topic_resume_type(from.private_topic_resume_type());
  }
  if (from.public_topic_resume_type() != 0) {
    set_public_topic_resume_type(from.public_topic_resume_type());
  }
  if (from.user_topic_resume_type() != 0) {
    set_user_topic_resume_type(from.user_topic_resume_type());
  }
}

void ServerInfoField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.ServerInfoField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfoField::CopyFrom(const ServerInfoField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.ServerInfoField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfoField::IsInitialized() const {
  return true;
}

void ServerInfoField::Swap(ServerInfoField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfoField::InternalSwap(ServerInfoField* other) {
  using std::swap;
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_product_info_.Swap(&other->user_product_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  authcode_.Swap(&other->authcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  config_path_.Swap(&other->config_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extinfo_.Swap(&other->extinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_using_udp_, other->is_using_udp_);
  swap(is_multicast_, other->is_multicast_);
  swap(topicid_, other->topicid_);
  swap(port_, other->port_);
  swap(marketdata_topic_resume_type_, other->marketdata_topic_resume_type_);
  swap(private_topic_resume_type_, other->private_topic_resume_type_);
  swap(public_topic_resume_type_, other->public_topic_resume_type_);
  swap(user_topic_resume_type_, other->user_topic_resume_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerInfoField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserInfoField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfoField::kUserIdFieldNumber;
const int UserInfoField::kPasswordFieldNumber;
const int UserInfoField::kExtinfoStringFieldNumber;
const int UserInfoField::kExtinfoInt32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfoField::UserInfoField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_UserInfoField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.UserInfoField)
}
UserInfoField::UserInfoField(const UserInfoField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  extinfo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extinfo_string().size() > 0) {
    extinfo_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_string_);
  }
  extinfo_int32_ = from.extinfo_int32_;
  // @@protoc_insertion_point(copy_constructor:LT.UserInfoField)
}

void UserInfoField::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_int32_ = 0;
}

UserInfoField::~UserInfoField() {
  // @@protoc_insertion_point(destructor:LT.UserInfoField)
  SharedDtor();
}

void UserInfoField::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfoField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserInfoField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfoField& UserInfoField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_UserInfoField.base);
  return *internal_default_instance();
}


void UserInfoField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.UserInfoField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_int32_ = 0;
  _internal_metadata_.Clear();
}

bool UserInfoField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.UserInfoField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.UserInfoField.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.UserInfoField.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extinfo_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extinfo_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extinfo_string().data(), static_cast<int>(this->extinfo_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.UserInfoField.extinfo_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 extinfo_int32 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extinfo_int32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.UserInfoField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.UserInfoField)
  return false;
#undef DO_
}

void UserInfoField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.UserInfoField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.UserInfoField.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.UserInfoField.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // string extinfo_string = 3;
  if (this->extinfo_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extinfo_string().data(), static_cast<int>(this->extinfo_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.UserInfoField.extinfo_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->extinfo_string(), output);
  }

  // int32 extinfo_int32 = 4;
  if (this->extinfo_int32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->extinfo_int32(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.UserInfoField)
}

::google::protobuf::uint8* UserInfoField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.UserInfoField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.UserInfoField.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.UserInfoField.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // string extinfo_string = 3;
  if (this->extinfo_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extinfo_string().data(), static_cast<int>(this->extinfo_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.UserInfoField.extinfo_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->extinfo_string(), target);
  }

  // int32 extinfo_int32 = 4;
  if (this->extinfo_int32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->extinfo_int32(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.UserInfoField)
  return target;
}

size_t UserInfoField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.UserInfoField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string extinfo_string = 3;
  if (this->extinfo_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extinfo_string());
  }

  // int32 extinfo_int32 = 4;
  if (this->extinfo_int32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->extinfo_int32());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserInfoField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.UserInfoField)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfoField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfoField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.UserInfoField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.UserInfoField)
    MergeFrom(*source);
  }
}

void UserInfoField::MergeFrom(const UserInfoField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.UserInfoField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.extinfo_string().size() > 0) {

    extinfo_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_string_);
  }
  if (from.extinfo_int32() != 0) {
    set_extinfo_int32(from.extinfo_int32());
  }
}

void UserInfoField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.UserInfoField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfoField::CopyFrom(const UserInfoField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.UserInfoField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfoField::IsInitialized() const {
  return true;
}

void UserInfoField::Swap(UserInfoField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfoField::InternalSwap(UserInfoField* other) {
  using std::swap;
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extinfo_string_.Swap(&other->extinfo_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(extinfo_int32_, other->extinfo_int32_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserInfoField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorField::kXerrorIdFieldNumber;
const int ErrorField::kRawErroridFieldNumber;
const int ErrorField::kTextFieldNumber;
const int ErrorField::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorField::ErrorField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_ErrorField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.ErrorField)
}
ErrorField::ErrorField(const ErrorField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  ::memcpy(&xerror_id_, &from.xerror_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&raw_errorid_) -
    reinterpret_cast<char*>(&xerror_id_)) + sizeof(raw_errorid_));
  // @@protoc_insertion_point(copy_constructor:LT.ErrorField)
}

void ErrorField::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&xerror_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&raw_errorid_) -
      reinterpret_cast<char*>(&xerror_id_)) + sizeof(raw_errorid_));
}

ErrorField::~ErrorField() {
  // @@protoc_insertion_point(destructor:LT.ErrorField)
  SharedDtor();
}

void ErrorField::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorField& ErrorField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_ErrorField.base);
  return *internal_default_instance();
}


void ErrorField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.ErrorField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&xerror_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&raw_errorid_) -
      reinterpret_cast<char*>(&xerror_id_)) + sizeof(raw_errorid_));
  _internal_metadata_.Clear();
}

bool ErrorField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.ErrorField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 xerror_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xerror_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 raw_errorid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &raw_errorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ErrorField.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.ErrorField.source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.ErrorField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.ErrorField)
  return false;
#undef DO_
}

void ErrorField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.ErrorField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xerror_id = 1;
  if (this->xerror_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->xerror_id(), output);
  }

  // int32 raw_errorid = 2;
  if (this->raw_errorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->raw_errorid(), output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ErrorField.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // string source = 4;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ErrorField.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.ErrorField)
}

::google::protobuf::uint8* ErrorField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.ErrorField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xerror_id = 1;
  if (this->xerror_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->xerror_id(), target);
  }

  // int32 raw_errorid = 2;
  if (this->raw_errorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->raw_errorid(), target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ErrorField.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // string source = 4;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.ErrorField.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.ErrorField)
  return target;
}

size_t ErrorField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.ErrorField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string source = 4;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // int32 xerror_id = 1;
  if (this->xerror_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xerror_id());
  }

  // int32 raw_errorid = 2;
  if (this->raw_errorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->raw_errorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.ErrorField)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.ErrorField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.ErrorField)
    MergeFrom(*source);
  }
}

void ErrorField::MergeFrom(const ErrorField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.ErrorField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.xerror_id() != 0) {
    set_xerror_id(from.xerror_id());
  }
  if (from.raw_errorid() != 0) {
    set_raw_errorid(from.raw_errorid());
  }
}

void ErrorField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.ErrorField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorField::CopyFrom(const ErrorField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.ErrorField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorField::IsInitialized() const {
  return true;
}

void ErrorField::Swap(ErrorField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorField::InternalSwap(ErrorField* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_.Swap(&other->source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(xerror_id_, other->xerror_id_);
  swap(raw_errorid_, other->raw_errorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogField::kLevelFieldNumber;
const int LogField::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogField::LogField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_LogField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.LogField)
}
LogField::LogField(const LogField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:LT.LogField)
}

void LogField::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
}

LogField::~LogField() {
  // @@protoc_insertion_point(destructor:LT.LogField)
  SharedDtor();
}

void LogField::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogField& LogField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_LogField.base);
  return *internal_default_instance();
}


void LogField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.LogField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  _internal_metadata_.Clear();
}

bool LogField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.LogField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LT.LogLevel level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_level(static_cast< ::LT::LogLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.LogField.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.LogField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.LogField)
  return false;
#undef DO_
}

void LogField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.LogField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LT.LogLevel level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->level(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.LogField.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.LogField)
}

::google::protobuf::uint8* LogField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.LogField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LT.LogLevel level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->level(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.LogField.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.LogField)
  return target;
}

size_t LogField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.LogField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .LT.LogLevel level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.LogField)
  GOOGLE_DCHECK_NE(&from, this);
  const LogField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.LogField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.LogField)
    MergeFrom(*source);
  }
}

void LogField::MergeFrom(const LogField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.LogField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void LogField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.LogField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogField::CopyFrom(const LogField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.LogField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogField::IsInitialized() const {
  return true;
}

void LogField::Swap(LogField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogField::InternalSwap(LogField* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspUserLoginField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspUserLoginField::kTradingDayFieldNumber;
const int RspUserLoginField::kLoginTimeFieldNumber;
const int RspUserLoginField::kSessionIdFieldNumber;
const int RspUserLoginField::kUserIdFieldNumber;
const int RspUserLoginField::kAccountidFieldNumber;
const int RspUserLoginField::kInvestorNameFieldNumber;
const int RspUserLoginField::kXerrorIdFieldNumber;
const int RspUserLoginField::kRawErroridFieldNumber;
const int RspUserLoginField::kTextFieldNumber;
const int RspUserLoginField::kVersionFieldNumber;
const int RspUserLoginField::kLangFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspUserLoginField::RspUserLoginField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_RspUserLoginField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.RspUserLoginField)
}
RspUserLoginField::RspUserLoginField(const RspUserLoginField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  accountid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountid().size() > 0) {
    accountid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  investor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor_name().size() > 0) {
    investor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_name_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang().size() > 0) {
    lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
  }
  ::memcpy(&trading_day_, &from.trading_day_,
    static_cast<size_t>(reinterpret_cast<char*>(&raw_errorid_) -
    reinterpret_cast<char*>(&trading_day_)) + sizeof(raw_errorid_));
  // @@protoc_insertion_point(copy_constructor:LT.RspUserLoginField)
}

void RspUserLoginField::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trading_day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&raw_errorid_) -
      reinterpret_cast<char*>(&trading_day_)) + sizeof(raw_errorid_));
}

RspUserLoginField::~RspUserLoginField() {
  // @@protoc_insertion_point(destructor:LT.RspUserLoginField)
  SharedDtor();
}

void RspUserLoginField::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RspUserLoginField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RspUserLoginField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspUserLoginField& RspUserLoginField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_RspUserLoginField.base);
  return *internal_default_instance();
}


void RspUserLoginField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.RspUserLoginField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trading_day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&raw_errorid_) -
      reinterpret_cast<char*>(&trading_day_)) + sizeof(raw_errorid_));
  _internal_metadata_.Clear();
}

bool RspUserLoginField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.RspUserLoginField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 trading_day = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &trading_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 login_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &login_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.RspUserLoginField.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.RspUserLoginField.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string accountid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountid().data(), static_cast<int>(this->accountid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.RspUserLoginField.accountid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investor_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor_name().data(), static_cast<int>(this->investor_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.RspUserLoginField.investor_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 xerror_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xerror_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 raw_errorid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &raw_errorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.RspUserLoginField.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.RspUserLoginField.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lang = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lang()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lang().data(), static_cast<int>(this->lang().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.RspUserLoginField.lang"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.RspUserLoginField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.RspUserLoginField)
  return false;
#undef DO_
}

void RspUserLoginField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.RspUserLoginField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 trading_day = 1;
  if (this->trading_day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->trading_day(), output);
  }

  // int64 login_time = 2;
  if (this->login_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->login_time(), output);
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->session_id(), output);
  }

  // string user_id = 5;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_id(), output);
  }

  // string accountid = 6;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), static_cast<int>(this->accountid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.accountid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->accountid(), output);
  }

  // string investor_name = 7;
  if (this->investor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_name().data(), static_cast<int>(this->investor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.investor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->investor_name(), output);
  }

  // int32 xerror_id = 8;
  if (this->xerror_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->xerror_id(), output);
  }

  // int32 raw_errorid = 9;
  if (this->raw_errorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->raw_errorid(), output);
  }

  // string text = 10;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->text(), output);
  }

  // string version = 11;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->version(), output);
  }

  // string lang = 12;
  if (this->lang().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lang().data(), static_cast<int>(this->lang().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.lang");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->lang(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.RspUserLoginField)
}

::google::protobuf::uint8* RspUserLoginField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.RspUserLoginField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 trading_day = 1;
  if (this->trading_day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->trading_day(), target);
  }

  // int64 login_time = 2;
  if (this->login_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->login_time(), target);
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->session_id(), target);
  }

  // string user_id = 5;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_id(), target);
  }

  // string accountid = 6;
  if (this->accountid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountid().data(), static_cast<int>(this->accountid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.accountid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->accountid(), target);
  }

  // string investor_name = 7;
  if (this->investor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_name().data(), static_cast<int>(this->investor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.investor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->investor_name(), target);
  }

  // int32 xerror_id = 8;
  if (this->xerror_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->xerror_id(), target);
  }

  // int32 raw_errorid = 9;
  if (this->raw_errorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->raw_errorid(), target);
  }

  // string text = 10;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->text(), target);
  }

  // string version = 11;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->version(), target);
  }

  // string lang = 12;
  if (this->lang().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lang().data(), static_cast<int>(this->lang().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.RspUserLoginField.lang");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->lang(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.RspUserLoginField)
  return target;
}

size_t RspUserLoginField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.RspUserLoginField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session_id = 4;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // string user_id = 5;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string accountid = 6;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountid());
  }

  // string investor_name = 7;
  if (this->investor_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor_name());
  }

  // string text = 10;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string version = 11;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string lang = 12;
  if (this->lang().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lang());
  }

  // int64 trading_day = 1;
  if (this->trading_day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->trading_day());
  }

  // int64 login_time = 2;
  if (this->login_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->login_time());
  }

  // int32 xerror_id = 8;
  if (this->xerror_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xerror_id());
  }

  // int32 raw_errorid = 9;
  if (this->raw_errorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->raw_errorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspUserLoginField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.RspUserLoginField)
  GOOGLE_DCHECK_NE(&from, this);
  const RspUserLoginField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspUserLoginField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.RspUserLoginField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.RspUserLoginField)
    MergeFrom(*source);
  }
}

void RspUserLoginField::MergeFrom(const RspUserLoginField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.RspUserLoginField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.accountid().size() > 0) {

    accountid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  if (from.investor_name().size() > 0) {

    investor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_name_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.lang().size() > 0) {

    lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
  }
  if (from.trading_day() != 0) {
    set_trading_day(from.trading_day());
  }
  if (from.login_time() != 0) {
    set_login_time(from.login_time());
  }
  if (from.xerror_id() != 0) {
    set_xerror_id(from.xerror_id());
  }
  if (from.raw_errorid() != 0) {
    set_raw_errorid(from.raw_errorid());
  }
}

void RspUserLoginField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.RspUserLoginField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspUserLoginField::CopyFrom(const RspUserLoginField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.RspUserLoginField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspUserLoginField::IsInitialized() const {
  return true;
}

void RspUserLoginField::Swap(RspUserLoginField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspUserLoginField::InternalSwap(RspUserLoginField* other) {
  using std::swap;
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  accountid_.Swap(&other->accountid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  investor_name_.Swap(&other->investor_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lang_.Swap(&other->lang_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(trading_day_, other->trading_day_);
  swap(login_time_, other->login_time_);
  swap(xerror_id_, other->xerror_id_);
  swap(raw_errorid_, other->raw_errorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RspUserLoginField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DepthMarketDataNField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DepthMarketDataNField::kSizeFieldNumber;
const int DepthMarketDataNField::kTradingDayFieldNumber;
const int DepthMarketDataNField::kActionDayFieldNumber;
const int DepthMarketDataNField::kUpdateTimeFieldNumber;
const int DepthMarketDataNField::kUpdateMillisecFieldNumber;
const int DepthMarketDataNField::kSymbolFieldNumber;
const int DepthMarketDataNField::kInstrumentIdFieldNumber;
const int DepthMarketDataNField::kExchangeIdFieldNumber;
const int DepthMarketDataNField::kExchangeFieldNumber;
const int DepthMarketDataNField::kLastPriceFieldNumber;
const int DepthMarketDataNField::kVolumeFieldNumber;
const int DepthMarketDataNField::kTurnoverFieldNumber;
const int DepthMarketDataNField::kOpeninterestFieldNumber;
const int DepthMarketDataNField::kAveragePriceFieldNumber;
const int DepthMarketDataNField::kOpenPriceFieldNumber;
const int DepthMarketDataNField::kHighestPriceFieldNumber;
const int DepthMarketDataNField::kLowestPriceFieldNumber;
const int DepthMarketDataNField::kClosePriceFieldNumber;
const int DepthMarketDataNField::kSettlementPriceFieldNumber;
const int DepthMarketDataNField::kUpperlimitPriceFieldNumber;
const int DepthMarketDataNField::kLowerlimitPriceFieldNumber;
const int DepthMarketDataNField::kPreclosePriceFieldNumber;
const int DepthMarketDataNField::kPresettlementPriceFieldNumber;
const int DepthMarketDataNField::kPreopeninterestFieldNumber;
const int DepthMarketDataNField::kTradingPhaseFieldNumber;
const int DepthMarketDataNField::kBidcountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DepthMarketDataNField::DepthMarketDataNField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_DepthMarketDataNField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.DepthMarketDataNField)
}
DepthMarketDataNField::DepthMarketDataNField(const DepthMarketDataNField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_id().size() > 0) {
    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  ::memcpy(&trading_day_, &from.trading_day_,
    static_cast<size_t>(reinterpret_cast<char*>(&bidcount_) -
    reinterpret_cast<char*>(&trading_day_)) + sizeof(bidcount_));
  // @@protoc_insertion_point(copy_constructor:LT.DepthMarketDataNField)
}

void DepthMarketDataNField::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trading_day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bidcount_) -
      reinterpret_cast<char*>(&trading_day_)) + sizeof(bidcount_));
}

DepthMarketDataNField::~DepthMarketDataNField() {
  // @@protoc_insertion_point(destructor:LT.DepthMarketDataNField)
  SharedDtor();
}

void DepthMarketDataNField::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DepthMarketDataNField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DepthMarketDataNField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DepthMarketDataNField& DepthMarketDataNField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_DepthMarketDataNField.base);
  return *internal_default_instance();
}


void DepthMarketDataNField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.DepthMarketDataNField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trading_day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bidcount_) -
      reinterpret_cast<char*>(&trading_day_)) + sizeof(bidcount_));
  _internal_metadata_.Clear();
}

bool DepthMarketDataNField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.DepthMarketDataNField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 trading_day = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &trading_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 action_day = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &action_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 update_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 update_millisec = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_millisec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.DepthMarketDataNField.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.DepthMarketDataNField.instrument_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.DepthMarketDataNField.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.ExchangeType exchange = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_exchange(static_cast< ::LT::ExchangeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double last_price = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &last_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double volume = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double turnover = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double openinterest = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openinterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double average_price = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &average_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double open_price = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &open_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double highest_price = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highest_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lowest_price = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowest_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double close_price = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &close_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double settlement_price = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &settlement_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double upperlimit_price = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &upperlimit_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lowerlimit_price = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowerlimit_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double preclose_price = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preclose_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double presettlement_price = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &presettlement_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double preopeninterest = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preopeninterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.TradingPhaseType trading_phase = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trading_phase(static_cast< ::LT::TradingPhaseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bidcount = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.DepthMarketDataNField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.DepthMarketDataNField)
  return false;
#undef DO_
}

void DepthMarketDataNField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.DepthMarketDataNField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 size = 1;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->size(), output);
  }

  // int64 trading_day = 2;
  if (this->trading_day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->trading_day(), output);
  }

  // int64 action_day = 3;
  if (this->action_day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->action_day(), output);
  }

  // int64 update_time = 4;
  if (this->update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->update_time(), output);
  }

  // int64 update_millisec = 5;
  if (this->update_millisec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->update_millisec(), output);
  }

  // string symbol = 6;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.DepthMarketDataNField.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->symbol(), output);
  }

  // string instrument_id = 7;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.DepthMarketDataNField.instrument_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->instrument_id(), output);
  }

  // string exchange_id = 8;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.DepthMarketDataNField.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->exchange_id(), output);
  }

  // .LT.ExchangeType exchange = 9;
  if (this->exchange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->exchange(), output);
  }

  // double last_price = 10;
  if (this->last_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->last_price(), output);
  }

  // double volume = 11;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->volume(), output);
  }

  // double turnover = 12;
  if (this->turnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->turnover(), output);
  }

  // double openinterest = 13;
  if (this->openinterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->openinterest(), output);
  }

  // double average_price = 14;
  if (this->average_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->average_price(), output);
  }

  // double open_price = 15;
  if (this->open_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->open_price(), output);
  }

  // double highest_price = 16;
  if (this->highest_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->highest_price(), output);
  }

  // double lowest_price = 17;
  if (this->lowest_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->lowest_price(), output);
  }

  // double close_price = 18;
  if (this->close_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->close_price(), output);
  }

  // double settlement_price = 19;
  if (this->settlement_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->settlement_price(), output);
  }

  // double upperlimit_price = 20;
  if (this->upperlimit_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->upperlimit_price(), output);
  }

  // double lowerlimit_price = 21;
  if (this->lowerlimit_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->lowerlimit_price(), output);
  }

  // double preclose_price = 22;
  if (this->preclose_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->preclose_price(), output);
  }

  // double presettlement_price = 23;
  if (this->presettlement_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->presettlement_price(), output);
  }

  // double preopeninterest = 24;
  if (this->preopeninterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->preopeninterest(), output);
  }

  // .LT.TradingPhaseType trading_phase = 25;
  if (this->trading_phase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      25, this->trading_phase(), output);
  }

  // int32 bidcount = 26;
  if (this->bidcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->bidcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.DepthMarketDataNField)
}

::google::protobuf::uint8* DepthMarketDataNField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.DepthMarketDataNField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 size = 1;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->size(), target);
  }

  // int64 trading_day = 2;
  if (this->trading_day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->trading_day(), target);
  }

  // int64 action_day = 3;
  if (this->action_day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->action_day(), target);
  }

  // int64 update_time = 4;
  if (this->update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->update_time(), target);
  }

  // int64 update_millisec = 5;
  if (this->update_millisec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->update_millisec(), target);
  }

  // string symbol = 6;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.DepthMarketDataNField.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->symbol(), target);
  }

  // string instrument_id = 7;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.DepthMarketDataNField.instrument_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->instrument_id(), target);
  }

  // string exchange_id = 8;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.DepthMarketDataNField.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->exchange_id(), target);
  }

  // .LT.ExchangeType exchange = 9;
  if (this->exchange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->exchange(), target);
  }

  // double last_price = 10;
  if (this->last_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->last_price(), target);
  }

  // double volume = 11;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->volume(), target);
  }

  // double turnover = 12;
  if (this->turnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->turnover(), target);
  }

  // double openinterest = 13;
  if (this->openinterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->openinterest(), target);
  }

  // double average_price = 14;
  if (this->average_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->average_price(), target);
  }

  // double open_price = 15;
  if (this->open_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->open_price(), target);
  }

  // double highest_price = 16;
  if (this->highest_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->highest_price(), target);
  }

  // double lowest_price = 17;
  if (this->lowest_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->lowest_price(), target);
  }

  // double close_price = 18;
  if (this->close_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->close_price(), target);
  }

  // double settlement_price = 19;
  if (this->settlement_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->settlement_price(), target);
  }

  // double upperlimit_price = 20;
  if (this->upperlimit_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->upperlimit_price(), target);
  }

  // double lowerlimit_price = 21;
  if (this->lowerlimit_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->lowerlimit_price(), target);
  }

  // double preclose_price = 22;
  if (this->preclose_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->preclose_price(), target);
  }

  // double presettlement_price = 23;
  if (this->presettlement_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->presettlement_price(), target);
  }

  // double preopeninterest = 24;
  if (this->preopeninterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->preopeninterest(), target);
  }

  // .LT.TradingPhaseType trading_phase = 25;
  if (this->trading_phase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      25, this->trading_phase(), target);
  }

  // int32 bidcount = 26;
  if (this->bidcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->bidcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.DepthMarketDataNField)
  return target;
}

size_t DepthMarketDataNField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.DepthMarketDataNField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 6;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string instrument_id = 7;
  if (this->instrument_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_id());
  }

  // string exchange_id = 8;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // int64 trading_day = 2;
  if (this->trading_day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->trading_day());
  }

  // int64 action_day = 3;
  if (this->action_day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->action_day());
  }

  // int64 update_time = 4;
  if (this->update_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_time());
  }

  // int64 update_millisec = 5;
  if (this->update_millisec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_millisec());
  }

  // int32 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  // .LT.ExchangeType exchange = 9;
  if (this->exchange() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->exchange());
  }

  // double last_price = 10;
  if (this->last_price() != 0) {
    total_size += 1 + 8;
  }

  // double volume = 11;
  if (this->volume() != 0) {
    total_size += 1 + 8;
  }

  // double turnover = 12;
  if (this->turnover() != 0) {
    total_size += 1 + 8;
  }

  // double openinterest = 13;
  if (this->openinterest() != 0) {
    total_size += 1 + 8;
  }

  // double average_price = 14;
  if (this->average_price() != 0) {
    total_size += 1 + 8;
  }

  // double open_price = 15;
  if (this->open_price() != 0) {
    total_size += 1 + 8;
  }

  // double highest_price = 16;
  if (this->highest_price() != 0) {
    total_size += 2 + 8;
  }

  // double lowest_price = 17;
  if (this->lowest_price() != 0) {
    total_size += 2 + 8;
  }

  // double close_price = 18;
  if (this->close_price() != 0) {
    total_size += 2 + 8;
  }

  // double settlement_price = 19;
  if (this->settlement_price() != 0) {
    total_size += 2 + 8;
  }

  // double upperlimit_price = 20;
  if (this->upperlimit_price() != 0) {
    total_size += 2 + 8;
  }

  // double lowerlimit_price = 21;
  if (this->lowerlimit_price() != 0) {
    total_size += 2 + 8;
  }

  // double preclose_price = 22;
  if (this->preclose_price() != 0) {
    total_size += 2 + 8;
  }

  // double presettlement_price = 23;
  if (this->presettlement_price() != 0) {
    total_size += 2 + 8;
  }

  // double preopeninterest = 24;
  if (this->preopeninterest() != 0) {
    total_size += 2 + 8;
  }

  // .LT.TradingPhaseType trading_phase = 25;
  if (this->trading_phase() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trading_phase());
  }

  // int32 bidcount = 26;
  if (this->bidcount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DepthMarketDataNField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.DepthMarketDataNField)
  GOOGLE_DCHECK_NE(&from, this);
  const DepthMarketDataNField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DepthMarketDataNField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.DepthMarketDataNField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.DepthMarketDataNField)
    MergeFrom(*source);
  }
}

void DepthMarketDataNField::MergeFrom(const DepthMarketDataNField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.DepthMarketDataNField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.instrument_id().size() > 0) {

    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.trading_day() != 0) {
    set_trading_day(from.trading_day());
  }
  if (from.action_day() != 0) {
    set_action_day(from.action_day());
  }
  if (from.update_time() != 0) {
    set_update_time(from.update_time());
  }
  if (from.update_millisec() != 0) {
    set_update_millisec(from.update_millisec());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.exchange() != 0) {
    set_exchange(from.exchange());
  }
  if (from.last_price() != 0) {
    set_last_price(from.last_price());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.turnover() != 0) {
    set_turnover(from.turnover());
  }
  if (from.openinterest() != 0) {
    set_openinterest(from.openinterest());
  }
  if (from.average_price() != 0) {
    set_average_price(from.average_price());
  }
  if (from.open_price() != 0) {
    set_open_price(from.open_price());
  }
  if (from.highest_price() != 0) {
    set_highest_price(from.highest_price());
  }
  if (from.lowest_price() != 0) {
    set_lowest_price(from.lowest_price());
  }
  if (from.close_price() != 0) {
    set_close_price(from.close_price());
  }
  if (from.settlement_price() != 0) {
    set_settlement_price(from.settlement_price());
  }
  if (from.upperlimit_price() != 0) {
    set_upperlimit_price(from.upperlimit_price());
  }
  if (from.lowerlimit_price() != 0) {
    set_lowerlimit_price(from.lowerlimit_price());
  }
  if (from.preclose_price() != 0) {
    set_preclose_price(from.preclose_price());
  }
  if (from.presettlement_price() != 0) {
    set_presettlement_price(from.presettlement_price());
  }
  if (from.preopeninterest() != 0) {
    set_preopeninterest(from.preopeninterest());
  }
  if (from.trading_phase() != 0) {
    set_trading_phase(from.trading_phase());
  }
  if (from.bidcount() != 0) {
    set_bidcount(from.bidcount());
  }
}

void DepthMarketDataNField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.DepthMarketDataNField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DepthMarketDataNField::CopyFrom(const DepthMarketDataNField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.DepthMarketDataNField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DepthMarketDataNField::IsInitialized() const {
  return true;
}

void DepthMarketDataNField::Swap(DepthMarketDataNField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DepthMarketDataNField::InternalSwap(DepthMarketDataNField* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrument_id_.Swap(&other->instrument_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_id_.Swap(&other->exchange_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(trading_day_, other->trading_day_);
  swap(action_day_, other->action_day_);
  swap(update_time_, other->update_time_);
  swap(update_millisec_, other->update_millisec_);
  swap(size_, other->size_);
  swap(exchange_, other->exchange_);
  swap(last_price_, other->last_price_);
  swap(volume_, other->volume_);
  swap(turnover_, other->turnover_);
  swap(openinterest_, other->openinterest_);
  swap(average_price_, other->average_price_);
  swap(open_price_, other->open_price_);
  swap(highest_price_, other->highest_price_);
  swap(lowest_price_, other->lowest_price_);
  swap(close_price_, other->close_price_);
  swap(settlement_price_, other->settlement_price_);
  swap(upperlimit_price_, other->upperlimit_price_);
  swap(lowerlimit_price_, other->lowerlimit_price_);
  swap(preclose_price_, other->preclose_price_);
  swap(presettlement_price_, other->presettlement_price_);
  swap(preopeninterest_, other->preopeninterest_);
  swap(trading_phase_, other->trading_phase_);
  swap(bidcount_, other->bidcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DepthMarketDataNField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DepthField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DepthField::kPriceFieldNumber;
const int DepthField::kSizeFieldNumber;
const int DepthField::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DepthField::DepthField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_DepthField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.DepthField)
}
DepthField::DepthField(const DepthField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&price_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:LT.DepthField)
}

void DepthField::SharedCtor() {
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&price_)) + sizeof(count_));
}

DepthField::~DepthField() {
  // @@protoc_insertion_point(destructor:LT.DepthField)
  SharedDtor();
}

void DepthField::SharedDtor() {
}

void DepthField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DepthField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DepthField& DepthField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_DepthField.base);
  return *internal_default_instance();
}


void DepthField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.DepthField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&price_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool DepthField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.DepthField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.DepthField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.DepthField)
  return false;
#undef DO_
}

void DepthField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.DepthField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double price = 1;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->price(), output);
  }

  // double size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->size(), output);
  }

  // double count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.DepthField)
}

::google::protobuf::uint8* DepthField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.DepthField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double price = 1;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->price(), target);
  }

  // double size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->size(), target);
  }

  // double count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.DepthField)
  return target;
}

size_t DepthField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.DepthField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double price = 1;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // double size = 2;
  if (this->size() != 0) {
    total_size += 1 + 8;
  }

  // double count = 3;
  if (this->count() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DepthField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.DepthField)
  GOOGLE_DCHECK_NE(&from, this);
  const DepthField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DepthField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.DepthField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.DepthField)
    MergeFrom(*source);
  }
}

void DepthField::MergeFrom(const DepthField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.DepthField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void DepthField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.DepthField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DepthField::CopyFrom(const DepthField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.DepthField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DepthField::IsInitialized() const {
  return true;
}

void DepthField::Swap(DepthField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DepthField::InternalSwap(DepthField* other) {
  using std::swap;
  swap(price_, other->price_);
  swap(size_, other->size_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DepthField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InstrumentField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstrumentField::kInstrumentNameFieldNumber;
const int InstrumentField::kSymbolFieldNumber;
const int InstrumentField::kInstrumentIdFieldNumber;
const int InstrumentField::kExchangeIdFieldNumber;
const int InstrumentField::kClientIdFieldNumber;
const int InstrumentField::kAccountIdFieldNumber;
const int InstrumentField::kExchangeInstidFieldNumber;
const int InstrumentField::kTypeFieldNumber;
const int InstrumentField::kVolumeMultipleFieldNumber;
const int InstrumentField::kPriceTickFieldNumber;
const int InstrumentField::kExpireDateFieldNumber;
const int InstrumentField::kStrikePriceFieldNumber;
const int InstrumentField::kOptionsTypeFieldNumber;
const int InstrumentField::kProductIdFieldNumber;
const int InstrumentField::kUnderlyingInstridFieldNumber;
const int InstrumentField::kInstlifePhaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstrumentField::InstrumentField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_InstrumentField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.InstrumentField)
}
InstrumentField::InstrumentField(const InstrumentField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_name().size() > 0) {
    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_id().size() > 0) {
    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  exchange_instid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_instid().size() > 0) {
    exchange_instid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_instid_);
  }
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  underlying_instrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.underlying_instrid().size() > 0) {
    underlying_instrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlying_instrid_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&instlife_phase_) -
    reinterpret_cast<char*>(&type_)) + sizeof(instlife_phase_));
  // @@protoc_insertion_point(copy_constructor:LT.InstrumentField)
}

void InstrumentField::SharedCtor() {
  instrument_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_instid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_instrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instlife_phase_) -
      reinterpret_cast<char*>(&type_)) + sizeof(instlife_phase_));
}

InstrumentField::~InstrumentField() {
  // @@protoc_insertion_point(destructor:LT.InstrumentField)
  SharedDtor();
}

void InstrumentField::SharedDtor() {
  instrument_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_instid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_instrid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InstrumentField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstrumentField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstrumentField& InstrumentField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_InstrumentField.base);
  return *internal_default_instance();
}


void InstrumentField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.InstrumentField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrument_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_instid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  underlying_instrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instlife_phase_) -
      reinterpret_cast<char*>(&type_)) + sizeof(instlife_phase_));
  _internal_metadata_.Clear();
}

bool InstrumentField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.InstrumentField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instrument_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentField.instrument_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentField.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentField.instrument_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentField.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentField.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentField.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_instid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_instid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_instid().data(), static_cast<int>(this->exchange_instid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentField.exchange_instid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.InstrumentType type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::LT::InstrumentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume_multiple = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_multiple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double price_tick = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 expire_date = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expire_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double strike_price = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strike_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.PutCall options_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_options_type(static_cast< ::LT::PutCall >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentField.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string underlying_instrid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_underlying_instrid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->underlying_instrid().data(), static_cast<int>(this->underlying_instrid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentField.underlying_instrid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.InstLifePhaseType instlife_phase = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_instlife_phase(static_cast< ::LT::InstLifePhaseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.InstrumentField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.InstrumentField)
  return false;
#undef DO_
}

void InstrumentField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.InstrumentField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.instrument_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instrument_name(), output);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.instrument_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instrument_id(), output);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchange_id(), output);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_id(), output);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account_id(), output);
  }

  // string exchange_instid = 7;
  if (this->exchange_instid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_instid().data(), static_cast<int>(this->exchange_instid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.exchange_instid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->exchange_instid(), output);
  }

  // .LT.InstrumentType type = 8;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->type(), output);
  }

  // int32 volume_multiple = 9;
  if (this->volume_multiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->volume_multiple(), output);
  }

  // double price_tick = 10;
  if (this->price_tick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->price_tick(), output);
  }

  // int32 expire_date = 11;
  if (this->expire_date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->expire_date(), output);
  }

  // double strike_price = 12;
  if (this->strike_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->strike_price(), output);
  }

  // .LT.PutCall options_type = 13;
  if (this->options_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->options_type(), output);
  }

  // string product_id = 14;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->product_id(), output);
  }

  // string underlying_instrid = 15;
  if (this->underlying_instrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying_instrid().data(), static_cast<int>(this->underlying_instrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.underlying_instrid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->underlying_instrid(), output);
  }

  // .LT.InstLifePhaseType instlife_phase = 16;
  if (this->instlife_phase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->instlife_phase(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.InstrumentField)
}

::google::protobuf::uint8* InstrumentField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.InstrumentField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_name().data(), static_cast<int>(this->instrument_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.instrument_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instrument_name(), target);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.instrument_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->instrument_id(), target);
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchange_id(), target);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_id(), target);
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account_id(), target);
  }

  // string exchange_instid = 7;
  if (this->exchange_instid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_instid().data(), static_cast<int>(this->exchange_instid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.exchange_instid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->exchange_instid(), target);
  }

  // .LT.InstrumentType type = 8;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->type(), target);
  }

  // int32 volume_multiple = 9;
  if (this->volume_multiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->volume_multiple(), target);
  }

  // double price_tick = 10;
  if (this->price_tick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->price_tick(), target);
  }

  // int32 expire_date = 11;
  if (this->expire_date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->expire_date(), target);
  }

  // double strike_price = 12;
  if (this->strike_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->strike_price(), target);
  }

  // .LT.PutCall options_type = 13;
  if (this->options_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->options_type(), target);
  }

  // string product_id = 14;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->product_id(), target);
  }

  // string underlying_instrid = 15;
  if (this->underlying_instrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->underlying_instrid().data(), static_cast<int>(this->underlying_instrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentField.underlying_instrid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->underlying_instrid(), target);
  }

  // .LT.InstLifePhaseType instlife_phase = 16;
  if (this->instlife_phase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->instlife_phase(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.InstrumentField)
  return target;
}

size_t InstrumentField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.InstrumentField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string instrument_name = 1;
  if (this->instrument_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_name());
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string instrument_id = 3;
  if (this->instrument_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_id());
  }

  // string exchange_id = 4;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string account_id = 6;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string exchange_instid = 7;
  if (this->exchange_instid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_instid());
  }

  // string product_id = 14;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // string underlying_instrid = 15;
  if (this->underlying_instrid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->underlying_instrid());
  }

  // .LT.InstrumentType type = 8;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 volume_multiple = 9;
  if (this->volume_multiple() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume_multiple());
  }

  // double price_tick = 10;
  if (this->price_tick() != 0) {
    total_size += 1 + 8;
  }

  // double strike_price = 12;
  if (this->strike_price() != 0) {
    total_size += 1 + 8;
  }

  // int32 expire_date = 11;
  if (this->expire_date() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->expire_date());
  }

  // .LT.PutCall options_type = 13;
  if (this->options_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->options_type());
  }

  // .LT.InstLifePhaseType instlife_phase = 16;
  if (this->instlife_phase() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->instlife_phase());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstrumentField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.InstrumentField)
  GOOGLE_DCHECK_NE(&from, this);
  const InstrumentField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstrumentField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.InstrumentField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.InstrumentField)
    MergeFrom(*source);
  }
}

void InstrumentField::MergeFrom(const InstrumentField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.InstrumentField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instrument_name().size() > 0) {

    instrument_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_name_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.instrument_id().size() > 0) {

    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.exchange_instid().size() > 0) {

    exchange_instid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_instid_);
  }
  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.underlying_instrid().size() > 0) {

    underlying_instrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.underlying_instrid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.volume_multiple() != 0) {
    set_volume_multiple(from.volume_multiple());
  }
  if (from.price_tick() != 0) {
    set_price_tick(from.price_tick());
  }
  if (from.strike_price() != 0) {
    set_strike_price(from.strike_price());
  }
  if (from.expire_date() != 0) {
    set_expire_date(from.expire_date());
  }
  if (from.options_type() != 0) {
    set_options_type(from.options_type());
  }
  if (from.instlife_phase() != 0) {
    set_instlife_phase(from.instlife_phase());
  }
}

void InstrumentField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.InstrumentField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstrumentField::CopyFrom(const InstrumentField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.InstrumentField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstrumentField::IsInitialized() const {
  return true;
}

void InstrumentField::Swap(InstrumentField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstrumentField::InternalSwap(InstrumentField* other) {
  using std::swap;
  instrument_name_.Swap(&other->instrument_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrument_id_.Swap(&other->instrument_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_id_.Swap(&other->exchange_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_instid_.Swap(&other->exchange_instid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  product_id_.Swap(&other->product_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  underlying_instrid_.Swap(&other->underlying_instrid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(volume_multiple_, other->volume_multiple_);
  swap(price_tick_, other->price_tick_);
  swap(strike_price_, other->strike_price_);
  swap(expire_date_, other->expire_date_);
  swap(options_type_, other->options_type_);
  swap(instlife_phase_, other->instlife_phase_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstrumentField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountField::kClientIdFieldNumber;
const int AccountField::kAccountIdFieldNumber;
const int AccountField::kCurrencyIdFieldNumber;
const int AccountField::kPreBalanceFieldNumber;
const int AccountField::kCurrMarginFieldNumber;
const int AccountField::kCloseProfitFieldNumber;
const int AccountField::kPositionProfitFieldNumber;
const int AccountField::kBalanceFieldNumber;
const int AccountField::kAvailableFieldNumber;
const int AccountField::kDepositFieldNumber;
const int AccountField::kWithdrawFieldNumber;
const int AccountField::kWithdrawquotaFieldNumber;
const int AccountField::kFrozenTransferFeeFieldNumber;
const int AccountField::kFrozenStampTaxFieldNumber;
const int AccountField::kFrozenCommissionFieldNumber;
const int AccountField::kFrozenCashFieldNumber;
const int AccountField::kTransferFeeFieldNumber;
const int AccountField::kStampTaxFieldNumber;
const int AccountField::kCommissionFieldNumber;
const int AccountField::kCashinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountField::AccountField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_AccountField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.AccountField)
}
AccountField::AccountField(const AccountField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_id().size() > 0) {
    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currency_id().size() > 0) {
    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  ::memcpy(&pre_balance_, &from.pre_balance_,
    static_cast<size_t>(reinterpret_cast<char*>(&cashin_) -
    reinterpret_cast<char*>(&pre_balance_)) + sizeof(cashin_));
  // @@protoc_insertion_point(copy_constructor:LT.AccountField)
}

void AccountField::SharedCtor() {
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pre_balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cashin_) -
      reinterpret_cast<char*>(&pre_balance_)) + sizeof(cashin_));
}

AccountField::~AccountField() {
  // @@protoc_insertion_point(destructor:LT.AccountField)
  SharedDtor();
}

void AccountField::SharedDtor() {
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountField& AccountField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_AccountField.base);
  return *internal_default_instance();
}


void AccountField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.AccountField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pre_balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cashin_) -
      reinterpret_cast<char*>(&pre_balance_)) + sizeof(cashin_));
  _internal_metadata_.Clear();
}

bool AccountField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.AccountField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.AccountField.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_id().data(), static_cast<int>(this->account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.AccountField.account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency_id().data(), static_cast<int>(this->currency_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.AccountField.currency_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pre_balance = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pre_balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double curr_margin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &curr_margin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double close_profit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &close_profit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double position_profit = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &position_profit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double balance = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double available = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double deposit = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deposit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double withdraw = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &withdraw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double withdrawquota = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &withdrawquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double frozen_transfer_fee = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozen_transfer_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double frozen_stamp_tax = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozen_stamp_tax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double frozen_commission = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozen_commission_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double frozen_cash = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frozen_cash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double transfer_fee = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &transfer_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double stamp_tax = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stamp_tax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double commission = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &commission_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cashin = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cashin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.AccountField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.AccountField)
  return false;
#undef DO_
}

void AccountField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.AccountField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.AccountField.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->client_id(), output);
  }

  // string account_id = 2;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.AccountField.account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_id(), output);
  }

  // string currency_id = 3;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.AccountField.currency_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->currency_id(), output);
  }

  // double pre_balance = 4;
  if (this->pre_balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->pre_balance(), output);
  }

  // double curr_margin = 5;
  if (this->curr_margin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->curr_margin(), output);
  }

  // double close_profit = 6;
  if (this->close_profit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->close_profit(), output);
  }

  // double position_profit = 7;
  if (this->position_profit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->position_profit(), output);
  }

  // double balance = 8;
  if (this->balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->balance(), output);
  }

  // double available = 9;
  if (this->available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->available(), output);
  }

  // double deposit = 10;
  if (this->deposit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->deposit(), output);
  }

  // double withdraw = 11;
  if (this->withdraw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->withdraw(), output);
  }

  // double withdrawquota = 12;
  if (this->withdrawquota() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->withdrawquota(), output);
  }

  // double frozen_transfer_fee = 13;
  if (this->frozen_transfer_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->frozen_transfer_fee(), output);
  }

  // double frozen_stamp_tax = 14;
  if (this->frozen_stamp_tax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->frozen_stamp_tax(), output);
  }

  // double frozen_commission = 15;
  if (this->frozen_commission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->frozen_commission(), output);
  }

  // double frozen_cash = 16;
  if (this->frozen_cash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->frozen_cash(), output);
  }

  // double transfer_fee = 17;
  if (this->transfer_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->transfer_fee(), output);
  }

  // double stamp_tax = 18;
  if (this->stamp_tax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->stamp_tax(), output);
  }

  // double commission = 19;
  if (this->commission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->commission(), output);
  }

  // double cashin = 20;
  if (this->cashin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->cashin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.AccountField)
}

::google::protobuf::uint8* AccountField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.AccountField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.AccountField.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->client_id(), target);
  }

  // string account_id = 2;
  if (this->account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_id().data(), static_cast<int>(this->account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.AccountField.account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_id(), target);
  }

  // string currency_id = 3;
  if (this->currency_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency_id().data(), static_cast<int>(this->currency_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.AccountField.currency_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->currency_id(), target);
  }

  // double pre_balance = 4;
  if (this->pre_balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->pre_balance(), target);
  }

  // double curr_margin = 5;
  if (this->curr_margin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->curr_margin(), target);
  }

  // double close_profit = 6;
  if (this->close_profit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->close_profit(), target);
  }

  // double position_profit = 7;
  if (this->position_profit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->position_profit(), target);
  }

  // double balance = 8;
  if (this->balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->balance(), target);
  }

  // double available = 9;
  if (this->available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->available(), target);
  }

  // double deposit = 10;
  if (this->deposit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->deposit(), target);
  }

  // double withdraw = 11;
  if (this->withdraw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->withdraw(), target);
  }

  // double withdrawquota = 12;
  if (this->withdrawquota() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->withdrawquota(), target);
  }

  // double frozen_transfer_fee = 13;
  if (this->frozen_transfer_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->frozen_transfer_fee(), target);
  }

  // double frozen_stamp_tax = 14;
  if (this->frozen_stamp_tax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->frozen_stamp_tax(), target);
  }

  // double frozen_commission = 15;
  if (this->frozen_commission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->frozen_commission(), target);
  }

  // double frozen_cash = 16;
  if (this->frozen_cash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->frozen_cash(), target);
  }

  // double transfer_fee = 17;
  if (this->transfer_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->transfer_fee(), target);
  }

  // double stamp_tax = 18;
  if (this->stamp_tax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->stamp_tax(), target);
  }

  // double commission = 19;
  if (this->commission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->commission(), target);
  }

  // double cashin = 20;
  if (this->cashin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->cashin(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.AccountField)
  return target;
}

size_t AccountField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.AccountField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string client_id = 1;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string account_id = 2;
  if (this->account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_id());
  }

  // string currency_id = 3;
  if (this->currency_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency_id());
  }

  // double pre_balance = 4;
  if (this->pre_balance() != 0) {
    total_size += 1 + 8;
  }

  // double curr_margin = 5;
  if (this->curr_margin() != 0) {
    total_size += 1 + 8;
  }

  // double close_profit = 6;
  if (this->close_profit() != 0) {
    total_size += 1 + 8;
  }

  // double position_profit = 7;
  if (this->position_profit() != 0) {
    total_size += 1 + 8;
  }

  // double balance = 8;
  if (this->balance() != 0) {
    total_size += 1 + 8;
  }

  // double available = 9;
  if (this->available() != 0) {
    total_size += 1 + 8;
  }

  // double deposit = 10;
  if (this->deposit() != 0) {
    total_size += 1 + 8;
  }

  // double withdraw = 11;
  if (this->withdraw() != 0) {
    total_size += 1 + 8;
  }

  // double withdrawquota = 12;
  if (this->withdrawquota() != 0) {
    total_size += 1 + 8;
  }

  // double frozen_transfer_fee = 13;
  if (this->frozen_transfer_fee() != 0) {
    total_size += 1 + 8;
  }

  // double frozen_stamp_tax = 14;
  if (this->frozen_stamp_tax() != 0) {
    total_size += 1 + 8;
  }

  // double frozen_commission = 15;
  if (this->frozen_commission() != 0) {
    total_size += 1 + 8;
  }

  // double frozen_cash = 16;
  if (this->frozen_cash() != 0) {
    total_size += 2 + 8;
  }

  // double transfer_fee = 17;
  if (this->transfer_fee() != 0) {
    total_size += 2 + 8;
  }

  // double stamp_tax = 18;
  if (this->stamp_tax() != 0) {
    total_size += 2 + 8;
  }

  // double commission = 19;
  if (this->commission() != 0) {
    total_size += 2 + 8;
  }

  // double cashin = 20;
  if (this->cashin() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.AccountField)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.AccountField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.AccountField)
    MergeFrom(*source);
  }
}

void AccountField::MergeFrom(const AccountField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.AccountField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.account_id().size() > 0) {

    account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_id_);
  }
  if (from.currency_id().size() > 0) {

    currency_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_id_);
  }
  if (from.pre_balance() != 0) {
    set_pre_balance(from.pre_balance());
  }
  if (from.curr_margin() != 0) {
    set_curr_margin(from.curr_margin());
  }
  if (from.close_profit() != 0) {
    set_close_profit(from.close_profit());
  }
  if (from.position_profit() != 0) {
    set_position_profit(from.position_profit());
  }
  if (from.balance() != 0) {
    set_balance(from.balance());
  }
  if (from.available() != 0) {
    set_available(from.available());
  }
  if (from.deposit() != 0) {
    set_deposit(from.deposit());
  }
  if (from.withdraw() != 0) {
    set_withdraw(from.withdraw());
  }
  if (from.withdrawquota() != 0) {
    set_withdrawquota(from.withdrawquota());
  }
  if (from.frozen_transfer_fee() != 0) {
    set_frozen_transfer_fee(from.frozen_transfer_fee());
  }
  if (from.frozen_stamp_tax() != 0) {
    set_frozen_stamp_tax(from.frozen_stamp_tax());
  }
  if (from.frozen_commission() != 0) {
    set_frozen_commission(from.frozen_commission());
  }
  if (from.frozen_cash() != 0) {
    set_frozen_cash(from.frozen_cash());
  }
  if (from.transfer_fee() != 0) {
    set_transfer_fee(from.transfer_fee());
  }
  if (from.stamp_tax() != 0) {
    set_stamp_tax(from.stamp_tax());
  }
  if (from.commission() != 0) {
    set_commission(from.commission());
  }
  if (from.cashin() != 0) {
    set_cashin(from.cashin());
  }
}

void AccountField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.AccountField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountField::CopyFrom(const AccountField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.AccountField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountField::IsInitialized() const {
  return true;
}

void AccountField::Swap(AccountField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountField::InternalSwap(AccountField* other) {
  using std::swap;
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_id_.Swap(&other->account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_id_.Swap(&other->currency_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pre_balance_, other->pre_balance_);
  swap(curr_margin_, other->curr_margin_);
  swap(close_profit_, other->close_profit_);
  swap(position_profit_, other->position_profit_);
  swap(balance_, other->balance_);
  swap(available_, other->available_);
  swap(deposit_, other->deposit_);
  swap(withdraw_, other->withdraw_);
  swap(withdrawquota_, other->withdrawquota_);
  swap(frozen_transfer_fee_, other->frozen_transfer_fee_);
  swap(frozen_stamp_tax_, other->frozen_stamp_tax_);
  swap(frozen_commission_, other->frozen_commission_);
  swap(frozen_cash_, other->frozen_cash_);
  swap(transfer_fee_, other->transfer_fee_);
  swap(stamp_tax_, other->stamp_tax_);
  swap(commission_, other->commission_);
  swap(cashin_, other->cashin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuoteRequestField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteRequestField::kSymbolFieldNumber;
const int QuoteRequestField::kInstrumentIdFieldNumber;
const int QuoteRequestField::kExchangeIdFieldNumber;
const int QuoteRequestField::kTradingDayFieldNumber;
const int QuoteRequestField::kQuoteTimeFieldNumber;
const int QuoteRequestField::kQuoteIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteRequestField::QuoteRequestField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_QuoteRequestField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.QuoteRequestField)
}
QuoteRequestField::QuoteRequestField(const QuoteRequestField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_id().size() > 0) {
    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  quote_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.quote_id().size() > 0) {
    quote_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_id_);
  }
  ::memcpy(&quote_time_, &from.quote_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&trading_day_) -
    reinterpret_cast<char*>(&quote_time_)) + sizeof(trading_day_));
  // @@protoc_insertion_point(copy_constructor:LT.QuoteRequestField)
}

void QuoteRequestField::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&quote_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trading_day_) -
      reinterpret_cast<char*>(&quote_time_)) + sizeof(trading_day_));
}

QuoteRequestField::~QuoteRequestField() {
  // @@protoc_insertion_point(destructor:LT.QuoteRequestField)
  SharedDtor();
}

void QuoteRequestField::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuoteRequestField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuoteRequestField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuoteRequestField& QuoteRequestField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_QuoteRequestField.base);
  return *internal_default_instance();
}


void QuoteRequestField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.QuoteRequestField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&quote_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trading_day_) -
      reinterpret_cast<char*>(&quote_time_)) + sizeof(trading_day_));
  _internal_metadata_.Clear();
}

bool QuoteRequestField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.QuoteRequestField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteRequestField.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteRequestField.instrument_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteRequestField.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 trading_day = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trading_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 quote_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &quote_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string quote_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quote_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quote_id().data(), static_cast<int>(this->quote_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.QuoteRequestField.quote_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.QuoteRequestField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.QuoteRequestField)
  return false;
#undef DO_
}

void QuoteRequestField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.QuoteRequestField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteRequestField.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // string instrument_id = 2;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteRequestField.instrument_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instrument_id(), output);
  }

  // string exchange_id = 3;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteRequestField.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->exchange_id(), output);
  }

  // int32 trading_day = 4;
  if (this->trading_day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->trading_day(), output);
  }

  // int64 quote_time = 5;
  if (this->quote_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->quote_time(), output);
  }

  // string quote_id = 6;
  if (this->quote_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quote_id().data(), static_cast<int>(this->quote_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteRequestField.quote_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->quote_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.QuoteRequestField)
}

::google::protobuf::uint8* QuoteRequestField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.QuoteRequestField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteRequestField.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // string instrument_id = 2;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteRequestField.instrument_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instrument_id(), target);
  }

  // string exchange_id = 3;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteRequestField.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->exchange_id(), target);
  }

  // int32 trading_day = 4;
  if (this->trading_day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->trading_day(), target);
  }

  // int64 quote_time = 5;
  if (this->quote_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->quote_time(), target);
  }

  // string quote_id = 6;
  if (this->quote_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quote_id().data(), static_cast<int>(this->quote_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.QuoteRequestField.quote_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->quote_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.QuoteRequestField)
  return target;
}

size_t QuoteRequestField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.QuoteRequestField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string instrument_id = 2;
  if (this->instrument_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_id());
  }

  // string exchange_id = 3;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // string quote_id = 6;
  if (this->quote_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->quote_id());
  }

  // int64 quote_time = 5;
  if (this->quote_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->quote_time());
  }

  // int32 trading_day = 4;
  if (this->trading_day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trading_day());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuoteRequestField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.QuoteRequestField)
  GOOGLE_DCHECK_NE(&from, this);
  const QuoteRequestField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteRequestField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.QuoteRequestField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.QuoteRequestField)
    MergeFrom(*source);
  }
}

void QuoteRequestField::MergeFrom(const QuoteRequestField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.QuoteRequestField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.instrument_id().size() > 0) {

    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.quote_id().size() > 0) {

    quote_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_id_);
  }
  if (from.quote_time() != 0) {
    set_quote_time(from.quote_time());
  }
  if (from.trading_day() != 0) {
    set_trading_day(from.trading_day());
  }
}

void QuoteRequestField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.QuoteRequestField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteRequestField::CopyFrom(const QuoteRequestField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.QuoteRequestField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteRequestField::IsInitialized() const {
  return true;
}

void QuoteRequestField::Swap(QuoteRequestField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteRequestField::InternalSwap(QuoteRequestField* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrument_id_.Swap(&other->instrument_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_id_.Swap(&other->exchange_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  quote_id_.Swap(&other->quote_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(quote_time_, other->quote_time_);
  swap(trading_day_, other->trading_day_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuoteRequestField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SettlementInfoField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettlementInfoField::kSizeFieldNumber;
const int SettlementInfoField::kTradingDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettlementInfoField::SettlementInfoField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_SettlementInfoField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.SettlementInfoField)
}
SettlementInfoField::SettlementInfoField(const SettlementInfoField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&trading_day_, &from.trading_day_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&trading_day_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:LT.SettlementInfoField)
}

void SettlementInfoField::SharedCtor() {
  ::memset(&trading_day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&trading_day_)) + sizeof(size_));
}

SettlementInfoField::~SettlementInfoField() {
  // @@protoc_insertion_point(destructor:LT.SettlementInfoField)
  SharedDtor();
}

void SettlementInfoField::SharedDtor() {
}

void SettlementInfoField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SettlementInfoField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SettlementInfoField& SettlementInfoField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_SettlementInfoField.base);
  return *internal_default_instance();
}


void SettlementInfoField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.SettlementInfoField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&trading_day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&trading_day_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

bool SettlementInfoField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.SettlementInfoField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 trading_day = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &trading_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.SettlementInfoField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.SettlementInfoField)
  return false;
#undef DO_
}

void SettlementInfoField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.SettlementInfoField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 size = 1;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->size(), output);
  }

  // int64 trading_day = 2;
  if (this->trading_day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->trading_day(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.SettlementInfoField)
}

::google::protobuf::uint8* SettlementInfoField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.SettlementInfoField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 size = 1;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->size(), target);
  }

  // int64 trading_day = 2;
  if (this->trading_day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->trading_day(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.SettlementInfoField)
  return target;
}

size_t SettlementInfoField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.SettlementInfoField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 trading_day = 2;
  if (this->trading_day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->trading_day());
  }

  // int32 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SettlementInfoField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.SettlementInfoField)
  GOOGLE_DCHECK_NE(&from, this);
  const SettlementInfoField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SettlementInfoField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.SettlementInfoField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.SettlementInfoField)
    MergeFrom(*source);
  }
}

void SettlementInfoField::MergeFrom(const SettlementInfoField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.SettlementInfoField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trading_day() != 0) {
    set_trading_day(from.trading_day());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void SettlementInfoField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.SettlementInfoField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettlementInfoField::CopyFrom(const SettlementInfoField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.SettlementInfoField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettlementInfoField::IsInitialized() const {
  return true;
}

void SettlementInfoField::Swap(SettlementInfoField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettlementInfoField::InternalSwap(SettlementInfoField* other) {
  using std::swap;
  swap(trading_day_, other->trading_day_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SettlementInfoField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InvestorField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvestorField::kInvestorIdFieldNumber;
const int InvestorField::kBrokerIdFieldNumber;
const int InvestorField::kIdentifiedCardTypeFieldNumber;
const int InvestorField::kIdentifiedCardnoFieldNumber;
const int InvestorField::kInvestorNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvestorField::InvestorField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_InvestorField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.InvestorField)
}
InvestorField::InvestorField(const InvestorField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor_id().size() > 0) {
    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.broker_id().size() > 0) {
    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  identified_cardno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identified_cardno().size() > 0) {
    identified_cardno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identified_cardno_);
  }
  investor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.investor_name().size() > 0) {
    investor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_name_);
  }
  identified_card_type_ = from.identified_card_type_;
  // @@protoc_insertion_point(copy_constructor:LT.InvestorField)
}

void InvestorField::SharedCtor() {
  investor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_cardno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_type_ = 0;
}

InvestorField::~InvestorField() {
  // @@protoc_insertion_point(destructor:LT.InvestorField)
  SharedDtor();
}

void InvestorField::SharedDtor() {
  investor_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_cardno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InvestorField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InvestorField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvestorField& InvestorField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_InvestorField.base);
  return *internal_default_instance();
}


void InvestorField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.InvestorField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  investor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_cardno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  investor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identified_card_type_ = 0;
  _internal_metadata_.Clear();
}

bool InvestorField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.InvestorField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string investor_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor_id().data(), static_cast<int>(this->investor_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InvestorField.investor_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string broker_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->broker_id().data(), static_cast<int>(this->broker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InvestorField.broker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.IdCardType identified_card_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_identified_card_type(static_cast< ::LT::IdCardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identified_cardno = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identified_cardno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identified_cardno().data(), static_cast<int>(this->identified_cardno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InvestorField.identified_cardno"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string investor_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_investor_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->investor_name().data(), static_cast<int>(this->investor_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InvestorField.investor_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.InvestorField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.InvestorField)
  return false;
#undef DO_
}

void InvestorField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.InvestorField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string investor_id = 1;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InvestorField.investor_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->investor_id(), output);
  }

  // string broker_id = 2;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InvestorField.broker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->broker_id(), output);
  }

  // .LT.IdCardType identified_card_type = 3;
  if (this->identified_card_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->identified_card_type(), output);
  }

  // string identified_cardno = 4;
  if (this->identified_cardno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identified_cardno().data(), static_cast<int>(this->identified_cardno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InvestorField.identified_cardno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->identified_cardno(), output);
  }

  // string investor_name = 5;
  if (this->investor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_name().data(), static_cast<int>(this->investor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InvestorField.investor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->investor_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.InvestorField)
}

::google::protobuf::uint8* InvestorField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.InvestorField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string investor_id = 1;
  if (this->investor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_id().data(), static_cast<int>(this->investor_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InvestorField.investor_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->investor_id(), target);
  }

  // string broker_id = 2;
  if (this->broker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->broker_id().data(), static_cast<int>(this->broker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InvestorField.broker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->broker_id(), target);
  }

  // .LT.IdCardType identified_card_type = 3;
  if (this->identified_card_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->identified_card_type(), target);
  }

  // string identified_cardno = 4;
  if (this->identified_cardno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identified_cardno().data(), static_cast<int>(this->identified_cardno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InvestorField.identified_cardno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->identified_cardno(), target);
  }

  // string investor_name = 5;
  if (this->investor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->investor_name().data(), static_cast<int>(this->investor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InvestorField.investor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->investor_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.InvestorField)
  return target;
}

size_t InvestorField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.InvestorField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string investor_id = 1;
  if (this->investor_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor_id());
  }

  // string broker_id = 2;
  if (this->broker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker_id());
  }

  // string identified_cardno = 4;
  if (this->identified_cardno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identified_cardno());
  }

  // string investor_name = 5;
  if (this->investor_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->investor_name());
  }

  // .LT.IdCardType identified_card_type = 3;
  if (this->identified_card_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->identified_card_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvestorField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.InvestorField)
  GOOGLE_DCHECK_NE(&from, this);
  const InvestorField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvestorField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.InvestorField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.InvestorField)
    MergeFrom(*source);
  }
}

void InvestorField::MergeFrom(const InvestorField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.InvestorField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.investor_id().size() > 0) {

    investor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_id_);
  }
  if (from.broker_id().size() > 0) {

    broker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_id_);
  }
  if (from.identified_cardno().size() > 0) {

    identified_cardno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identified_cardno_);
  }
  if (from.investor_name().size() > 0) {

    investor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.investor_name_);
  }
  if (from.identified_card_type() != 0) {
    set_identified_card_type(from.identified_card_type());
  }
}

void InvestorField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.InvestorField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvestorField::CopyFrom(const InvestorField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.InvestorField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvestorField::IsInitialized() const {
  return true;
}

void InvestorField::Swap(InvestorField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvestorField::InternalSwap(InvestorField* other) {
  using std::swap;
  investor_id_.Swap(&other->investor_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  broker_id_.Swap(&other->broker_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  identified_cardno_.Swap(&other->identified_cardno_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  investor_name_.Swap(&other->investor_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(identified_card_type_, other->identified_card_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InvestorField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InstrumentStatusField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstrumentStatusField::kSymbolFieldNumber;
const int InstrumentStatusField::kInstrumentIdFieldNumber;
const int InstrumentStatusField::kExchangeIdFieldNumber;
const int InstrumentStatusField::kInstrumentStatusFieldNumber;
const int InstrumentStatusField::kEnterTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstrumentStatusField::InstrumentStatusField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_trader_2eproto::scc_info_InstrumentStatusField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.InstrumentStatusField)
}
InstrumentStatusField::InstrumentStatusField(const InstrumentStatusField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_id().size() > 0) {
    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  ::memcpy(&enter_time_, &from.enter_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&instrument_status_) -
    reinterpret_cast<char*>(&enter_time_)) + sizeof(instrument_status_));
  // @@protoc_insertion_point(copy_constructor:LT.InstrumentStatusField)
}

void InstrumentStatusField::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enter_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instrument_status_) -
      reinterpret_cast<char*>(&enter_time_)) + sizeof(instrument_status_));
}

InstrumentStatusField::~InstrumentStatusField() {
  // @@protoc_insertion_point(destructor:LT.InstrumentStatusField)
  SharedDtor();
}

void InstrumentStatusField::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InstrumentStatusField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstrumentStatusField::descriptor() {
  ::protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstrumentStatusField& InstrumentStatusField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_trader_2eproto::scc_info_InstrumentStatusField.base);
  return *internal_default_instance();
}


void InstrumentStatusField::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.InstrumentStatusField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enter_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instrument_status_) -
      reinterpret_cast<char*>(&enter_time_)) + sizeof(instrument_status_));
  _internal_metadata_.Clear();
}

bool InstrumentStatusField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.InstrumentStatusField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentStatusField.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentStatusField.instrument_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchange_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LT.InstrumentStatusField.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LT.TradingPhaseType instrument_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_instrument_status(static_cast< ::LT::TradingPhaseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 enter_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &enter_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.InstrumentStatusField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.InstrumentStatusField)
  return false;
#undef DO_
}

void InstrumentStatusField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.InstrumentStatusField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentStatusField.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // string instrument_id = 2;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentStatusField.instrument_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instrument_id(), output);
  }

  // string exchange_id = 3;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentStatusField.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->exchange_id(), output);
  }

  // .LT.TradingPhaseType instrument_status = 4;
  if (this->instrument_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->instrument_status(), output);
  }

  // int64 enter_time = 5;
  if (this->enter_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->enter_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.InstrumentStatusField)
}

::google::protobuf::uint8* InstrumentStatusField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.InstrumentStatusField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentStatusField.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // string instrument_id = 2;
  if (this->instrument_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_id().data(), static_cast<int>(this->instrument_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentStatusField.instrument_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instrument_id(), target);
  }

  // string exchange_id = 3;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LT.InstrumentStatusField.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->exchange_id(), target);
  }

  // .LT.TradingPhaseType instrument_status = 4;
  if (this->instrument_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->instrument_status(), target);
  }

  // int64 enter_time = 5;
  if (this->enter_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->enter_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.InstrumentStatusField)
  return target;
}

size_t InstrumentStatusField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.InstrumentStatusField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string instrument_id = 2;
  if (this->instrument_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_id());
  }

  // string exchange_id = 3;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // int64 enter_time = 5;
  if (this->enter_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->enter_time());
  }

  // .LT.TradingPhaseType instrument_status = 4;
  if (this->instrument_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->instrument_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstrumentStatusField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.InstrumentStatusField)
  GOOGLE_DCHECK_NE(&from, this);
  const InstrumentStatusField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstrumentStatusField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.InstrumentStatusField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.InstrumentStatusField)
    MergeFrom(*source);
  }
}

void InstrumentStatusField::MergeFrom(const InstrumentStatusField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.InstrumentStatusField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.instrument_id().size() > 0) {

    instrument_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_id_);
  }
  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.enter_time() != 0) {
    set_enter_time(from.enter_time());
  }
  if (from.instrument_status() != 0) {
    set_instrument_status(from.instrument_status());
  }
}

void InstrumentStatusField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.InstrumentStatusField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstrumentStatusField::CopyFrom(const InstrumentStatusField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.InstrumentStatusField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstrumentStatusField::IsInitialized() const {
  return true;
}

void InstrumentStatusField::Swap(InstrumentStatusField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstrumentStatusField::InternalSwap(InstrumentStatusField* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrument_id_.Swap(&other->instrument_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_id_.Swap(&other->exchange_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(enter_time_, other->enter_time_);
  swap(instrument_status_, other->instrument_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstrumentStatusField::GetMetadata() const {
  protobuf_trader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_trader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace LT
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::ReqQueryField* Arena::CreateMaybeMessage< ::LT::ReqQueryField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::ReqQueryField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::PositionField* Arena::CreateMaybeMessage< ::LT::PositionField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::PositionField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::QuoteField* Arena::CreateMaybeMessage< ::LT::QuoteField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::QuoteField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::OrderField* Arena::CreateMaybeMessage< ::LT::OrderField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::OrderField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::TradeField* Arena::CreateMaybeMessage< ::LT::TradeField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::TradeField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::ServerInfoField* Arena::CreateMaybeMessage< ::LT::ServerInfoField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::ServerInfoField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::UserInfoField* Arena::CreateMaybeMessage< ::LT::UserInfoField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::UserInfoField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::ErrorField* Arena::CreateMaybeMessage< ::LT::ErrorField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::ErrorField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::LogField* Arena::CreateMaybeMessage< ::LT::LogField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::LogField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::RspUserLoginField* Arena::CreateMaybeMessage< ::LT::RspUserLoginField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::RspUserLoginField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::DepthMarketDataNField* Arena::CreateMaybeMessage< ::LT::DepthMarketDataNField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::DepthMarketDataNField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::DepthField* Arena::CreateMaybeMessage< ::LT::DepthField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::DepthField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::InstrumentField* Arena::CreateMaybeMessage< ::LT::InstrumentField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::InstrumentField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::AccountField* Arena::CreateMaybeMessage< ::LT::AccountField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::AccountField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::QuoteRequestField* Arena::CreateMaybeMessage< ::LT::QuoteRequestField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::QuoteRequestField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::SettlementInfoField* Arena::CreateMaybeMessage< ::LT::SettlementInfoField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::SettlementInfoField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::InvestorField* Arena::CreateMaybeMessage< ::LT::InvestorField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::InvestorField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LT::InstrumentStatusField* Arena::CreateMaybeMessage< ::LT::InstrumentStatusField >(Arena* arena) {
  return Arena::CreateInternal< ::LT::InstrumentStatusField >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
