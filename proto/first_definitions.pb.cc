// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: first_definitions.proto

#include "first_definitions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace FIRST {
class CreateOrderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateOrderRequest>
      _instance;
} _CreateOrderRequest_default_instance_;
class CreateOrderResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateOrderResponse>
      _instance;
} _CreateOrderResponse_default_instance_;
class OrderFeedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderFeed>
      _instance;
} _OrderFeed_default_instance_;
class TradeFeedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TradeFeed>
      _instance;
} _TradeFeed_default_instance_;
}  // namespace FIRST
namespace protobuf_first_5fdefinitions_2eproto {
void InitDefaultsCreateOrderRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fdefinitions_2eproto::InitDefaultsOrderField();
  {
    void* ptr = &::FIRST::_CreateOrderRequest_default_instance_;
    new (ptr) ::FIRST::CreateOrderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FIRST::CreateOrderRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateOrderRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateOrderRequestImpl);
}

void InitDefaultsCreateOrderResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fdefinitions_2eproto::InitDefaultsOrderField();
  {
    void* ptr = &::FIRST::_CreateOrderResponse_default_instance_;
    new (ptr) ::FIRST::CreateOrderResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FIRST::CreateOrderResponse::InitAsDefaultInstance();
}

void InitDefaultsCreateOrderResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateOrderResponseImpl);
}

void InitDefaultsOrderFeedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fdefinitions_2eproto::InitDefaultsOrderField();
  {
    void* ptr = &::FIRST::_OrderFeed_default_instance_;
    new (ptr) ::FIRST::OrderFeed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FIRST::OrderFeed::InitAsDefaultInstance();
}

void InitDefaultsOrderFeed() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrderFeedImpl);
}

void InitDefaultsTradeFeedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fdefinitions_2eproto::InitDefaultsTradeField();
  {
    void* ptr = &::FIRST::_TradeFeed_default_instance_;
    new (ptr) ::FIRST::TradeFeed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FIRST::TradeFeed::InitAsDefaultInstance();
}

void InitDefaultsTradeFeed() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTradeFeedImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderRequest, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderRequest, in_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderRequest, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderRequest, out_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderResponse, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderResponse, in_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderResponse, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderResponse, out_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::CreateOrderResponse, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::OrderFeed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::OrderFeed, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::OrderFeed, in_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::OrderFeed, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::OrderFeed, out_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::TradeFeed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::TradeFeed, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::TradeFeed, in_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::TradeFeed, trade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FIRST::TradeFeed, out_timestamp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::FIRST::CreateOrderRequest)},
  { 9, -1, sizeof(::FIRST::CreateOrderResponse)},
  { 20, -1, sizeof(::FIRST::OrderFeed)},
  { 29, -1, sizeof(::FIRST::TradeFeed)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::FIRST::_CreateOrderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FIRST::_CreateOrderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FIRST::_OrderFeed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FIRST::_TradeFeed_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "first_definitions.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027first_definitions.proto\022\005FIRST\032\026base_d"
      "efinitions.proto\"w\n\022CreateOrderRequest\022\022"
      "\n\nrequest_id\030\001 \001(\004\022\024\n\014in_timestamp\030\002 \001(\004"
      "\022 \n\005order\030\003 \001(\0132\021.FIRST.OrderField\022\025\n\rou"
      "t_timestamp\030\004 \001(\004\"\340\001\n\023CreateOrderRespons"
      "e\022\022\n\nrequest_id\030\001 \001(\004\022\024\n\014in_timestamp\030\002 "
      "\001(\004\022 \n\005order\030\003 \001(\0132\021.FIRST.OrderField\022\025\n"
      "\rout_timestamp\030\004 \001(\004\0221\n\006status\030\005 \001(\0162!.F"
      "IRST.CreateOrderResponse.Status\022\016\n\006reaso"
      "n\030\006 \001(\t\"#\n\006Status\022\013\n\007SUCCESS\020\000\022\014\n\010REJECT"
      "ED\020\001\"n\n\tOrderFeed\022\022\n\nrequest_id\030\001 \001(\004\022\024\n"
      "\014in_timestamp\030\002 \001(\004\022 \n\005order\030\003 \001(\0132\021.FIR"
      "ST.OrderField\022\025\n\rout_timestamp\030\004 \001(\004\"n\n\t"
      "TradeFeed\022\022\n\nrequest_id\030\001 \001(\004\022\024\n\014in_time"
      "stamp\030\002 \001(\004\022 \n\005trade\030\003 \001(\0132\021.FIRST.Trade"
      "Field\022\025\n\rout_timestamp\030\004 \001(\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 636);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "first_definitions.proto", &protobuf_RegisterTypes);
  ::protobuf_base_5fdefinitions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_first_5fdefinitions_2eproto
namespace FIRST {
const ::google::protobuf::EnumDescriptor* CreateOrderResponse_Status_descriptor() {
  protobuf_first_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_first_5fdefinitions_2eproto::file_level_enum_descriptors[0];
}
bool CreateOrderResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateOrderResponse_Status CreateOrderResponse::SUCCESS;
const CreateOrderResponse_Status CreateOrderResponse::REJECTED;
const CreateOrderResponse_Status CreateOrderResponse::Status_MIN;
const CreateOrderResponse_Status CreateOrderResponse::Status_MAX;
const int CreateOrderResponse::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CreateOrderRequest::InitAsDefaultInstance() {
  ::FIRST::_CreateOrderRequest_default_instance_._instance.get_mutable()->order_ = const_cast< ::FIRST::OrderField*>(
      ::FIRST::OrderField::internal_default_instance());
}
void CreateOrderRequest::clear_order() {
  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateOrderRequest::kRequestIdFieldNumber;
const int CreateOrderRequest::kInTimestampFieldNumber;
const int CreateOrderRequest::kOrderFieldNumber;
const int CreateOrderRequest::kOutTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateOrderRequest::CreateOrderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_first_5fdefinitions_2eproto::InitDefaultsCreateOrderRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FIRST.CreateOrderRequest)
}
CreateOrderRequest::CreateOrderRequest(const CreateOrderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::FIRST::OrderField(*from.order_);
  } else {
    order_ = NULL;
  }
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&out_timestamp_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(out_timestamp_));
  // @@protoc_insertion_point(copy_constructor:FIRST.CreateOrderRequest)
}

void CreateOrderRequest::SharedCtor() {
  ::memset(&order_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_timestamp_) -
      reinterpret_cast<char*>(&order_)) + sizeof(out_timestamp_));
  _cached_size_ = 0;
}

CreateOrderRequest::~CreateOrderRequest() {
  // @@protoc_insertion_point(destructor:FIRST.CreateOrderRequest)
  SharedDtor();
}

void CreateOrderRequest::SharedDtor() {
  if (this != internal_default_instance()) delete order_;
}

void CreateOrderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateOrderRequest::descriptor() {
  ::protobuf_first_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_first_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateOrderRequest& CreateOrderRequest::default_instance() {
  ::protobuf_first_5fdefinitions_2eproto::InitDefaultsCreateOrderRequest();
  return *internal_default_instance();
}

CreateOrderRequest* CreateOrderRequest::New(::google::protobuf::Arena* arena) const {
  CreateOrderRequest* n = new CreateOrderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FIRST.CreateOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_timestamp_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(out_timestamp_));
  _internal_metadata_.Clear();
}

bool CreateOrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FIRST.CreateOrderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 in_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &in_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FIRST.OrderField order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 out_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &out_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FIRST.CreateOrderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FIRST.CreateOrderRequest)
  return false;
#undef DO_
}

void CreateOrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FIRST.CreateOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->request_id(), output);
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->in_timestamp(), output);
  }

  // .FIRST.OrderField order = 3;
  if (this->has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->order_, output);
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->out_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FIRST.CreateOrderRequest)
}

::google::protobuf::uint8* CreateOrderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FIRST.CreateOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->request_id(), target);
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->in_timestamp(), target);
  }

  // .FIRST.OrderField order = 3;
  if (this->has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->order_, deterministic, target);
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->out_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FIRST.CreateOrderRequest)
  return target;
}

size_t CreateOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FIRST.CreateOrderRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .FIRST.OrderField order = 3;
  if (this->has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->order_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->request_id());
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->in_timestamp());
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->out_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateOrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FIRST.CreateOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateOrderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FIRST.CreateOrderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FIRST.CreateOrderRequest)
    MergeFrom(*source);
  }
}

void CreateOrderRequest::MergeFrom(const CreateOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FIRST.CreateOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order()) {
    mutable_order()->::FIRST::OrderField::MergeFrom(from.order());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.in_timestamp() != 0) {
    set_in_timestamp(from.in_timestamp());
  }
  if (from.out_timestamp() != 0) {
    set_out_timestamp(from.out_timestamp());
  }
}

void CreateOrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FIRST.CreateOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrderRequest::CopyFrom(const CreateOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FIRST.CreateOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrderRequest::IsInitialized() const {
  return true;
}

void CreateOrderRequest::Swap(CreateOrderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateOrderRequest::InternalSwap(CreateOrderRequest* other) {
  using std::swap;
  swap(order_, other->order_);
  swap(request_id_, other->request_id_);
  swap(in_timestamp_, other->in_timestamp_);
  swap(out_timestamp_, other->out_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateOrderRequest::GetMetadata() const {
  protobuf_first_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_first_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateOrderResponse::InitAsDefaultInstance() {
  ::FIRST::_CreateOrderResponse_default_instance_._instance.get_mutable()->order_ = const_cast< ::FIRST::OrderField*>(
      ::FIRST::OrderField::internal_default_instance());
}
void CreateOrderResponse::clear_order() {
  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateOrderResponse::kRequestIdFieldNumber;
const int CreateOrderResponse::kInTimestampFieldNumber;
const int CreateOrderResponse::kOrderFieldNumber;
const int CreateOrderResponse::kOutTimestampFieldNumber;
const int CreateOrderResponse::kStatusFieldNumber;
const int CreateOrderResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateOrderResponse::CreateOrderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_first_5fdefinitions_2eproto::InitDefaultsCreateOrderResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FIRST.CreateOrderResponse)
}
CreateOrderResponse::CreateOrderResponse(const CreateOrderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_order()) {
    order_ = new ::FIRST::OrderField(*from.order_);
  } else {
    order_ = NULL;
  }
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:FIRST.CreateOrderResponse)
}

void CreateOrderResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&order_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&order_)) + sizeof(status_));
  _cached_size_ = 0;
}

CreateOrderResponse::~CreateOrderResponse() {
  // @@protoc_insertion_point(destructor:FIRST.CreateOrderResponse)
  SharedDtor();
}

void CreateOrderResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete order_;
}

void CreateOrderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateOrderResponse::descriptor() {
  ::protobuf_first_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_first_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateOrderResponse& CreateOrderResponse::default_instance() {
  ::protobuf_first_5fdefinitions_2eproto::InitDefaultsCreateOrderResponse();
  return *internal_default_instance();
}

CreateOrderResponse* CreateOrderResponse::New(::google::protobuf::Arena* arena) const {
  CreateOrderResponse* n = new CreateOrderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:FIRST.CreateOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool CreateOrderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FIRST.CreateOrderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 in_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &in_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FIRST.OrderField order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 out_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &out_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FIRST.CreateOrderResponse.Status status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::FIRST::CreateOrderResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FIRST.CreateOrderResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FIRST.CreateOrderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FIRST.CreateOrderResponse)
  return false;
#undef DO_
}

void CreateOrderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FIRST.CreateOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->request_id(), output);
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->in_timestamp(), output);
  }

  // .FIRST.OrderField order = 3;
  if (this->has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->order_, output);
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->out_timestamp(), output);
  }

  // .FIRST.CreateOrderResponse.Status status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->status(), output);
  }

  // string reason = 6;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FIRST.CreateOrderResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FIRST.CreateOrderResponse)
}

::google::protobuf::uint8* CreateOrderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FIRST.CreateOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->request_id(), target);
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->in_timestamp(), target);
  }

  // .FIRST.OrderField order = 3;
  if (this->has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->order_, deterministic, target);
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->out_timestamp(), target);
  }

  // .FIRST.CreateOrderResponse.Status status = 5;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->status(), target);
  }

  // string reason = 6;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FIRST.CreateOrderResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FIRST.CreateOrderResponse)
  return target;
}

size_t CreateOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FIRST.CreateOrderResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 6;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .FIRST.OrderField order = 3;
  if (this->has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->order_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->request_id());
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->in_timestamp());
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->out_timestamp());
  }

  // .FIRST.CreateOrderResponse.Status status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateOrderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FIRST.CreateOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateOrderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FIRST.CreateOrderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FIRST.CreateOrderResponse)
    MergeFrom(*source);
  }
}

void CreateOrderResponse::MergeFrom(const CreateOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FIRST.CreateOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_order()) {
    mutable_order()->::FIRST::OrderField::MergeFrom(from.order());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.in_timestamp() != 0) {
    set_in_timestamp(from.in_timestamp());
  }
  if (from.out_timestamp() != 0) {
    set_out_timestamp(from.out_timestamp());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void CreateOrderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FIRST.CreateOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrderResponse::CopyFrom(const CreateOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FIRST.CreateOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrderResponse::IsInitialized() const {
  return true;
}

void CreateOrderResponse::Swap(CreateOrderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateOrderResponse::InternalSwap(CreateOrderResponse* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(order_, other->order_);
  swap(request_id_, other->request_id_);
  swap(in_timestamp_, other->in_timestamp_);
  swap(out_timestamp_, other->out_timestamp_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateOrderResponse::GetMetadata() const {
  protobuf_first_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_first_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderFeed::InitAsDefaultInstance() {
  ::FIRST::_OrderFeed_default_instance_._instance.get_mutable()->order_ = const_cast< ::FIRST::OrderField*>(
      ::FIRST::OrderField::internal_default_instance());
}
void OrderFeed::clear_order() {
  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderFeed::kRequestIdFieldNumber;
const int OrderFeed::kInTimestampFieldNumber;
const int OrderFeed::kOrderFieldNumber;
const int OrderFeed::kOutTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderFeed::OrderFeed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_first_5fdefinitions_2eproto::InitDefaultsOrderFeed();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FIRST.OrderFeed)
}
OrderFeed::OrderFeed(const OrderFeed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::FIRST::OrderField(*from.order_);
  } else {
    order_ = NULL;
  }
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&out_timestamp_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(out_timestamp_));
  // @@protoc_insertion_point(copy_constructor:FIRST.OrderFeed)
}

void OrderFeed::SharedCtor() {
  ::memset(&order_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_timestamp_) -
      reinterpret_cast<char*>(&order_)) + sizeof(out_timestamp_));
  _cached_size_ = 0;
}

OrderFeed::~OrderFeed() {
  // @@protoc_insertion_point(destructor:FIRST.OrderFeed)
  SharedDtor();
}

void OrderFeed::SharedDtor() {
  if (this != internal_default_instance()) delete order_;
}

void OrderFeed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderFeed::descriptor() {
  ::protobuf_first_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_first_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderFeed& OrderFeed::default_instance() {
  ::protobuf_first_5fdefinitions_2eproto::InitDefaultsOrderFeed();
  return *internal_default_instance();
}

OrderFeed* OrderFeed::New(::google::protobuf::Arena* arena) const {
  OrderFeed* n = new OrderFeed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderFeed::Clear() {
// @@protoc_insertion_point(message_clear_start:FIRST.OrderFeed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_timestamp_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(out_timestamp_));
  _internal_metadata_.Clear();
}

bool OrderFeed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FIRST.OrderFeed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 in_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &in_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FIRST.OrderField order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 out_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &out_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FIRST.OrderFeed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FIRST.OrderFeed)
  return false;
#undef DO_
}

void OrderFeed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FIRST.OrderFeed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->request_id(), output);
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->in_timestamp(), output);
  }

  // .FIRST.OrderField order = 3;
  if (this->has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->order_, output);
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->out_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FIRST.OrderFeed)
}

::google::protobuf::uint8* OrderFeed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FIRST.OrderFeed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->request_id(), target);
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->in_timestamp(), target);
  }

  // .FIRST.OrderField order = 3;
  if (this->has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->order_, deterministic, target);
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->out_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FIRST.OrderFeed)
  return target;
}

size_t OrderFeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FIRST.OrderFeed)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .FIRST.OrderField order = 3;
  if (this->has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->order_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->request_id());
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->in_timestamp());
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->out_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderFeed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FIRST.OrderFeed)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderFeed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderFeed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FIRST.OrderFeed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FIRST.OrderFeed)
    MergeFrom(*source);
  }
}

void OrderFeed::MergeFrom(const OrderFeed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FIRST.OrderFeed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order()) {
    mutable_order()->::FIRST::OrderField::MergeFrom(from.order());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.in_timestamp() != 0) {
    set_in_timestamp(from.in_timestamp());
  }
  if (from.out_timestamp() != 0) {
    set_out_timestamp(from.out_timestamp());
  }
}

void OrderFeed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FIRST.OrderFeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderFeed::CopyFrom(const OrderFeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FIRST.OrderFeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderFeed::IsInitialized() const {
  return true;
}

void OrderFeed::Swap(OrderFeed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderFeed::InternalSwap(OrderFeed* other) {
  using std::swap;
  swap(order_, other->order_);
  swap(request_id_, other->request_id_);
  swap(in_timestamp_, other->in_timestamp_);
  swap(out_timestamp_, other->out_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderFeed::GetMetadata() const {
  protobuf_first_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_first_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TradeFeed::InitAsDefaultInstance() {
  ::FIRST::_TradeFeed_default_instance_._instance.get_mutable()->trade_ = const_cast< ::FIRST::TradeField*>(
      ::FIRST::TradeField::internal_default_instance());
}
void TradeFeed::clear_trade() {
  if (GetArenaNoVirtual() == NULL && trade_ != NULL) {
    delete trade_;
  }
  trade_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TradeFeed::kRequestIdFieldNumber;
const int TradeFeed::kInTimestampFieldNumber;
const int TradeFeed::kTradeFieldNumber;
const int TradeFeed::kOutTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TradeFeed::TradeFeed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_first_5fdefinitions_2eproto::InitDefaultsTradeFeed();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FIRST.TradeFeed)
}
TradeFeed::TradeFeed(const TradeFeed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_trade()) {
    trade_ = new ::FIRST::TradeField(*from.trade_);
  } else {
    trade_ = NULL;
  }
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&out_timestamp_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(out_timestamp_));
  // @@protoc_insertion_point(copy_constructor:FIRST.TradeFeed)
}

void TradeFeed::SharedCtor() {
  ::memset(&trade_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_timestamp_) -
      reinterpret_cast<char*>(&trade_)) + sizeof(out_timestamp_));
  _cached_size_ = 0;
}

TradeFeed::~TradeFeed() {
  // @@protoc_insertion_point(destructor:FIRST.TradeFeed)
  SharedDtor();
}

void TradeFeed::SharedDtor() {
  if (this != internal_default_instance()) delete trade_;
}

void TradeFeed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TradeFeed::descriptor() {
  ::protobuf_first_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_first_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TradeFeed& TradeFeed::default_instance() {
  ::protobuf_first_5fdefinitions_2eproto::InitDefaultsTradeFeed();
  return *internal_default_instance();
}

TradeFeed* TradeFeed::New(::google::protobuf::Arena* arena) const {
  TradeFeed* n = new TradeFeed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TradeFeed::Clear() {
// @@protoc_insertion_point(message_clear_start:FIRST.TradeFeed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && trade_ != NULL) {
    delete trade_;
  }
  trade_ = NULL;
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_timestamp_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(out_timestamp_));
  _internal_metadata_.Clear();
}

bool TradeFeed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FIRST.TradeFeed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 in_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &in_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FIRST.TradeField trade = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trade()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 out_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &out_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FIRST.TradeFeed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FIRST.TradeFeed)
  return false;
#undef DO_
}

void TradeFeed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FIRST.TradeFeed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->request_id(), output);
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->in_timestamp(), output);
  }

  // .FIRST.TradeField trade = 3;
  if (this->has_trade()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->trade_, output);
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->out_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FIRST.TradeFeed)
}

::google::protobuf::uint8* TradeFeed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FIRST.TradeFeed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->request_id(), target);
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->in_timestamp(), target);
  }

  // .FIRST.TradeField trade = 3;
  if (this->has_trade()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->trade_, deterministic, target);
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->out_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FIRST.TradeFeed)
  return target;
}

size_t TradeFeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FIRST.TradeFeed)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .FIRST.TradeField trade = 3;
  if (this->has_trade()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->trade_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->request_id());
  }

  // uint64 in_timestamp = 2;
  if (this->in_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->in_timestamp());
  }

  // uint64 out_timestamp = 4;
  if (this->out_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->out_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TradeFeed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FIRST.TradeFeed)
  GOOGLE_DCHECK_NE(&from, this);
  const TradeFeed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TradeFeed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FIRST.TradeFeed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FIRST.TradeFeed)
    MergeFrom(*source);
  }
}

void TradeFeed::MergeFrom(const TradeFeed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FIRST.TradeFeed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_trade()) {
    mutable_trade()->::FIRST::TradeField::MergeFrom(from.trade());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.in_timestamp() != 0) {
    set_in_timestamp(from.in_timestamp());
  }
  if (from.out_timestamp() != 0) {
    set_out_timestamp(from.out_timestamp());
  }
}

void TradeFeed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FIRST.TradeFeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TradeFeed::CopyFrom(const TradeFeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FIRST.TradeFeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TradeFeed::IsInitialized() const {
  return true;
}

void TradeFeed::Swap(TradeFeed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TradeFeed::InternalSwap(TradeFeed* other) {
  using std::swap;
  swap(trade_, other->trade_);
  swap(request_id_, other->request_id_);
  swap(in_timestamp_, other->in_timestamp_);
  swap(out_timestamp_, other->out_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TradeFeed::GetMetadata() const {
  protobuf_first_5fdefinitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_first_5fdefinitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace FIRST

// @@protoc_insertion_point(global_scope)
