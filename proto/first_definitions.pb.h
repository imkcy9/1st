// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: first_definitions.proto

#ifndef PROTOBUF_first_5fdefinitions_2eproto__INCLUDED
#define PROTOBUF_first_5fdefinitions_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base_definitions.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_first_5fdefinitions_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCreateOrderRequestImpl();
void InitDefaultsCreateOrderRequest();
void InitDefaultsCreateOrderResponseImpl();
void InitDefaultsCreateOrderResponse();
void InitDefaultsCancelOrderRequestImpl();
void InitDefaultsCancelOrderRequest();
void InitDefaultsCancelOrderResponseImpl();
void InitDefaultsCancelOrderResponse();
void InitDefaultsOrderFeedImpl();
void InitDefaultsOrderFeed();
void InitDefaultsTradeFeedImpl();
void InitDefaultsTradeFeed();
inline void InitDefaults() {
  InitDefaultsCreateOrderRequest();
  InitDefaultsCreateOrderResponse();
  InitDefaultsCancelOrderRequest();
  InitDefaultsCancelOrderResponse();
  InitDefaultsOrderFeed();
  InitDefaultsTradeFeed();
}
}  // namespace protobuf_first_5fdefinitions_2eproto
namespace FIRST {
class CancelOrderRequest;
class CancelOrderRequestDefaultTypeInternal;
extern CancelOrderRequestDefaultTypeInternal _CancelOrderRequest_default_instance_;
class CancelOrderResponse;
class CancelOrderResponseDefaultTypeInternal;
extern CancelOrderResponseDefaultTypeInternal _CancelOrderResponse_default_instance_;
class CreateOrderRequest;
class CreateOrderRequestDefaultTypeInternal;
extern CreateOrderRequestDefaultTypeInternal _CreateOrderRequest_default_instance_;
class CreateOrderResponse;
class CreateOrderResponseDefaultTypeInternal;
extern CreateOrderResponseDefaultTypeInternal _CreateOrderResponse_default_instance_;
class OrderFeed;
class OrderFeedDefaultTypeInternal;
extern OrderFeedDefaultTypeInternal _OrderFeed_default_instance_;
class TradeFeed;
class TradeFeedDefaultTypeInternal;
extern TradeFeedDefaultTypeInternal _TradeFeed_default_instance_;
}  // namespace FIRST
namespace FIRST {

enum CreateOrderResponse_Status {
  CreateOrderResponse_Status_SUCCESS = 0,
  CreateOrderResponse_Status_REJECTED = 1,
  CreateOrderResponse_Status_CreateOrderResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateOrderResponse_Status_CreateOrderResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateOrderResponse_Status_IsValid(int value);
const CreateOrderResponse_Status CreateOrderResponse_Status_Status_MIN = CreateOrderResponse_Status_SUCCESS;
const CreateOrderResponse_Status CreateOrderResponse_Status_Status_MAX = CreateOrderResponse_Status_REJECTED;
const int CreateOrderResponse_Status_Status_ARRAYSIZE = CreateOrderResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateOrderResponse_Status_descriptor();
inline const ::std::string& CreateOrderResponse_Status_Name(CreateOrderResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateOrderResponse_Status_descriptor(), value);
}
inline bool CreateOrderResponse_Status_Parse(
    const ::std::string& name, CreateOrderResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateOrderResponse_Status>(
    CreateOrderResponse_Status_descriptor(), name, value);
}
enum CancelOrderResponse_Status {
  CancelOrderResponse_Status_SUCCESS = 0,
  CancelOrderResponse_Status_REJECTED = 1,
  CancelOrderResponse_Status_CancelOrderResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CancelOrderResponse_Status_CancelOrderResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CancelOrderResponse_Status_IsValid(int value);
const CancelOrderResponse_Status CancelOrderResponse_Status_Status_MIN = CancelOrderResponse_Status_SUCCESS;
const CancelOrderResponse_Status CancelOrderResponse_Status_Status_MAX = CancelOrderResponse_Status_REJECTED;
const int CancelOrderResponse_Status_Status_ARRAYSIZE = CancelOrderResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* CancelOrderResponse_Status_descriptor();
inline const ::std::string& CancelOrderResponse_Status_Name(CancelOrderResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    CancelOrderResponse_Status_descriptor(), value);
}
inline bool CancelOrderResponse_Status_Parse(
    const ::std::string& name, CancelOrderResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CancelOrderResponse_Status>(
    CancelOrderResponse_Status_descriptor(), name, value);
}
// ===================================================================

class CreateOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FIRST.CreateOrderRequest) */ {
 public:
  CreateOrderRequest();
  virtual ~CreateOrderRequest();

  CreateOrderRequest(const CreateOrderRequest& from);

  inline CreateOrderRequest& operator=(const CreateOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateOrderRequest(CreateOrderRequest&& from) noexcept
    : CreateOrderRequest() {
    *this = ::std::move(from);
  }

  inline CreateOrderRequest& operator=(CreateOrderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateOrderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateOrderRequest* internal_default_instance() {
    return reinterpret_cast<const CreateOrderRequest*>(
               &_CreateOrderRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CreateOrderRequest* other);
  friend void swap(CreateOrderRequest& a, CreateOrderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateOrderRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateOrderRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateOrderRequest& from);
  void MergeFrom(const CreateOrderRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateOrderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .FIRST.OrderField order = 3;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 3;
  const ::FIRST::OrderField& order() const;
  ::FIRST::OrderField* release_order();
  ::FIRST::OrderField* mutable_order();
  void set_allocated_order(::FIRST::OrderField* order);

  // uint32 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FIRST.CreateOrderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::FIRST::OrderField* order_;
  ::google::protobuf::uint32 request_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_first_5fdefinitions_2eproto::TableStruct;
  friend void ::protobuf_first_5fdefinitions_2eproto::InitDefaultsCreateOrderRequestImpl();
};
// -------------------------------------------------------------------

class CreateOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FIRST.CreateOrderResponse) */ {
 public:
  CreateOrderResponse();
  virtual ~CreateOrderResponse();

  CreateOrderResponse(const CreateOrderResponse& from);

  inline CreateOrderResponse& operator=(const CreateOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateOrderResponse(CreateOrderResponse&& from) noexcept
    : CreateOrderResponse() {
    *this = ::std::move(from);
  }

  inline CreateOrderResponse& operator=(CreateOrderResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateOrderResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CreateOrderResponse*>(
               &_CreateOrderResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CreateOrderResponse* other);
  friend void swap(CreateOrderResponse& a, CreateOrderResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateOrderResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateOrderResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateOrderResponse& from);
  void MergeFrom(const CreateOrderResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateOrderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateOrderResponse_Status Status;
  static const Status SUCCESS =
    CreateOrderResponse_Status_SUCCESS;
  static const Status REJECTED =
    CreateOrderResponse_Status_REJECTED;
  static inline bool Status_IsValid(int value) {
    return CreateOrderResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    CreateOrderResponse_Status_Status_MIN;
  static const Status Status_MAX =
    CreateOrderResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    CreateOrderResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return CreateOrderResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return CreateOrderResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return CreateOrderResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string reason = 6;
  void clear_reason();
  static const int kReasonFieldNumber = 6;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // .FIRST.OrderField order = 3;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 3;
  const ::FIRST::OrderField& order() const;
  ::FIRST::OrderField* release_order();
  ::FIRST::OrderField* mutable_order();
  void set_allocated_order(::FIRST::OrderField* order);

  // uint32 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // .FIRST.CreateOrderResponse.Status status = 5;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::FIRST::CreateOrderResponse_Status status() const;
  void set_status(::FIRST::CreateOrderResponse_Status value);

  // @@protoc_insertion_point(class_scope:FIRST.CreateOrderResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::FIRST::OrderField* order_;
  ::google::protobuf::uint32 request_id_;
  int status_;
  mutable int _cached_size_;
  friend struct ::protobuf_first_5fdefinitions_2eproto::TableStruct;
  friend void ::protobuf_first_5fdefinitions_2eproto::InitDefaultsCreateOrderResponseImpl();
};
// -------------------------------------------------------------------

class CancelOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FIRST.CancelOrderRequest) */ {
 public:
  CancelOrderRequest();
  virtual ~CancelOrderRequest();

  CancelOrderRequest(const CancelOrderRequest& from);

  inline CancelOrderRequest& operator=(const CancelOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelOrderRequest(CancelOrderRequest&& from) noexcept
    : CancelOrderRequest() {
    *this = ::std::move(from);
  }

  inline CancelOrderRequest& operator=(CancelOrderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelOrderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelOrderRequest* internal_default_instance() {
    return reinterpret_cast<const CancelOrderRequest*>(
               &_CancelOrderRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CancelOrderRequest* other);
  friend void swap(CancelOrderRequest& a, CancelOrderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelOrderRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelOrderRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelOrderRequest& from);
  void MergeFrom(const CancelOrderRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelOrderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .FIRST.OrderField order = 4;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 4;
  const ::FIRST::OrderField& order() const;
  ::FIRST::OrderField* release_order();
  ::FIRST::OrderField* mutable_order();
  void set_allocated_order(::FIRST::OrderField* order);

  // uint64 client_order_id = 3;
  void clear_client_order_id();
  static const int kClientOrderIdFieldNumber = 3;
  ::google::protobuf::uint64 client_order_id() const;
  void set_client_order_id(::google::protobuf::uint64 value);

  // uint32 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FIRST.CancelOrderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::FIRST::OrderField* order_;
  ::google::protobuf::uint64 client_order_id_;
  ::google::protobuf::uint32 request_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_first_5fdefinitions_2eproto::TableStruct;
  friend void ::protobuf_first_5fdefinitions_2eproto::InitDefaultsCancelOrderRequestImpl();
};
// -------------------------------------------------------------------

class CancelOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FIRST.CancelOrderResponse) */ {
 public:
  CancelOrderResponse();
  virtual ~CancelOrderResponse();

  CancelOrderResponse(const CancelOrderResponse& from);

  inline CancelOrderResponse& operator=(const CancelOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelOrderResponse(CancelOrderResponse&& from) noexcept
    : CancelOrderResponse() {
    *this = ::std::move(from);
  }

  inline CancelOrderResponse& operator=(CancelOrderResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelOrderResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CancelOrderResponse*>(
               &_CancelOrderResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CancelOrderResponse* other);
  friend void swap(CancelOrderResponse& a, CancelOrderResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelOrderResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelOrderResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelOrderResponse& from);
  void MergeFrom(const CancelOrderResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelOrderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CancelOrderResponse_Status Status;
  static const Status SUCCESS =
    CancelOrderResponse_Status_SUCCESS;
  static const Status REJECTED =
    CancelOrderResponse_Status_REJECTED;
  static inline bool Status_IsValid(int value) {
    return CancelOrderResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    CancelOrderResponse_Status_Status_MIN;
  static const Status Status_MAX =
    CancelOrderResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    CancelOrderResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return CancelOrderResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return CancelOrderResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return CancelOrderResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string reason = 6;
  void clear_reason();
  static const int kReasonFieldNumber = 6;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // .FIRST.OrderField order = 3;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 3;
  const ::FIRST::OrderField& order() const;
  ::FIRST::OrderField* release_order();
  ::FIRST::OrderField* mutable_order();
  void set_allocated_order(::FIRST::OrderField* order);

  // uint32 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // .FIRST.CancelOrderResponse.Status status = 5;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::FIRST::CancelOrderResponse_Status status() const;
  void set_status(::FIRST::CancelOrderResponse_Status value);

  // @@protoc_insertion_point(class_scope:FIRST.CancelOrderResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::FIRST::OrderField* order_;
  ::google::protobuf::uint32 request_id_;
  int status_;
  mutable int _cached_size_;
  friend struct ::protobuf_first_5fdefinitions_2eproto::TableStruct;
  friend void ::protobuf_first_5fdefinitions_2eproto::InitDefaultsCancelOrderResponseImpl();
};
// -------------------------------------------------------------------

class OrderFeed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FIRST.OrderFeed) */ {
 public:
  OrderFeed();
  virtual ~OrderFeed();

  OrderFeed(const OrderFeed& from);

  inline OrderFeed& operator=(const OrderFeed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderFeed(OrderFeed&& from) noexcept
    : OrderFeed() {
    *this = ::std::move(from);
  }

  inline OrderFeed& operator=(OrderFeed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderFeed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderFeed* internal_default_instance() {
    return reinterpret_cast<const OrderFeed*>(
               &_OrderFeed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(OrderFeed* other);
  friend void swap(OrderFeed& a, OrderFeed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderFeed* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderFeed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderFeed& from);
  void MergeFrom(const OrderFeed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderFeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .FIRST.OrderField order = 3;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 3;
  const ::FIRST::OrderField& order() const;
  ::FIRST::OrderField* release_order();
  ::FIRST::OrderField* mutable_order();
  void set_allocated_order(::FIRST::OrderField* order);

  // uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // uint64 in_timestamp = 2;
  void clear_in_timestamp();
  static const int kInTimestampFieldNumber = 2;
  ::google::protobuf::uint64 in_timestamp() const;
  void set_in_timestamp(::google::protobuf::uint64 value);

  // uint64 out_timestamp = 4;
  void clear_out_timestamp();
  static const int kOutTimestampFieldNumber = 4;
  ::google::protobuf::uint64 out_timestamp() const;
  void set_out_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:FIRST.OrderFeed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::FIRST::OrderField* order_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::uint64 in_timestamp_;
  ::google::protobuf::uint64 out_timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_first_5fdefinitions_2eproto::TableStruct;
  friend void ::protobuf_first_5fdefinitions_2eproto::InitDefaultsOrderFeedImpl();
};
// -------------------------------------------------------------------

class TradeFeed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FIRST.TradeFeed) */ {
 public:
  TradeFeed();
  virtual ~TradeFeed();

  TradeFeed(const TradeFeed& from);

  inline TradeFeed& operator=(const TradeFeed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TradeFeed(TradeFeed&& from) noexcept
    : TradeFeed() {
    *this = ::std::move(from);
  }

  inline TradeFeed& operator=(TradeFeed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TradeFeed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TradeFeed* internal_default_instance() {
    return reinterpret_cast<const TradeFeed*>(
               &_TradeFeed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TradeFeed* other);
  friend void swap(TradeFeed& a, TradeFeed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TradeFeed* New() const PROTOBUF_FINAL { return New(NULL); }

  TradeFeed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TradeFeed& from);
  void MergeFrom(const TradeFeed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TradeFeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .FIRST.TradeField trade = 3;
  bool has_trade() const;
  void clear_trade();
  static const int kTradeFieldNumber = 3;
  const ::FIRST::TradeField& trade() const;
  ::FIRST::TradeField* release_trade();
  ::FIRST::TradeField* mutable_trade();
  void set_allocated_trade(::FIRST::TradeField* trade);

  // uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // uint64 in_timestamp = 2;
  void clear_in_timestamp();
  static const int kInTimestampFieldNumber = 2;
  ::google::protobuf::uint64 in_timestamp() const;
  void set_in_timestamp(::google::protobuf::uint64 value);

  // uint64 out_timestamp = 4;
  void clear_out_timestamp();
  static const int kOutTimestampFieldNumber = 4;
  ::google::protobuf::uint64 out_timestamp() const;
  void set_out_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:FIRST.TradeFeed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::FIRST::TradeField* trade_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::uint64 in_timestamp_;
  ::google::protobuf::uint64 out_timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_first_5fdefinitions_2eproto::TableStruct;
  friend void ::protobuf_first_5fdefinitions_2eproto::InitDefaultsTradeFeedImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateOrderRequest

// uint32 request_id = 1;
inline void CreateOrderRequest::clear_request_id() {
  request_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateOrderRequest::request_id() const {
  // @@protoc_insertion_point(field_get:FIRST.CreateOrderRequest.request_id)
  return request_id_;
}
inline void CreateOrderRequest::set_request_id(::google::protobuf::uint32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:FIRST.CreateOrderRequest.request_id)
}

// .FIRST.OrderField order = 3;
inline bool CreateOrderRequest::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
inline const ::FIRST::OrderField& CreateOrderRequest::order() const {
  const ::FIRST::OrderField* p = order_;
  // @@protoc_insertion_point(field_get:FIRST.CreateOrderRequest.order)
  return p != NULL ? *p : *reinterpret_cast<const ::FIRST::OrderField*>(
      &::FIRST::_OrderField_default_instance_);
}
inline ::FIRST::OrderField* CreateOrderRequest::release_order() {
  // @@protoc_insertion_point(field_release:FIRST.CreateOrderRequest.order)
  
  ::FIRST::OrderField* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::FIRST::OrderField* CreateOrderRequest::mutable_order() {
  
  if (order_ == NULL) {
    order_ = new ::FIRST::OrderField;
  }
  // @@protoc_insertion_point(field_mutable:FIRST.CreateOrderRequest.order)
  return order_;
}
inline void CreateOrderRequest::set_allocated_order(::FIRST::OrderField* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(order_);
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    
  } else {
    
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:FIRST.CreateOrderRequest.order)
}

// -------------------------------------------------------------------

// CreateOrderResponse

// uint32 request_id = 1;
inline void CreateOrderResponse::clear_request_id() {
  request_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateOrderResponse::request_id() const {
  // @@protoc_insertion_point(field_get:FIRST.CreateOrderResponse.request_id)
  return request_id_;
}
inline void CreateOrderResponse::set_request_id(::google::protobuf::uint32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:FIRST.CreateOrderResponse.request_id)
}

// .FIRST.OrderField order = 3;
inline bool CreateOrderResponse::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
inline const ::FIRST::OrderField& CreateOrderResponse::order() const {
  const ::FIRST::OrderField* p = order_;
  // @@protoc_insertion_point(field_get:FIRST.CreateOrderResponse.order)
  return p != NULL ? *p : *reinterpret_cast<const ::FIRST::OrderField*>(
      &::FIRST::_OrderField_default_instance_);
}
inline ::FIRST::OrderField* CreateOrderResponse::release_order() {
  // @@protoc_insertion_point(field_release:FIRST.CreateOrderResponse.order)
  
  ::FIRST::OrderField* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::FIRST::OrderField* CreateOrderResponse::mutable_order() {
  
  if (order_ == NULL) {
    order_ = new ::FIRST::OrderField;
  }
  // @@protoc_insertion_point(field_mutable:FIRST.CreateOrderResponse.order)
  return order_;
}
inline void CreateOrderResponse::set_allocated_order(::FIRST::OrderField* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(order_);
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    
  } else {
    
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:FIRST.CreateOrderResponse.order)
}

// .FIRST.CreateOrderResponse.Status status = 5;
inline void CreateOrderResponse::clear_status() {
  status_ = 0;
}
inline ::FIRST::CreateOrderResponse_Status CreateOrderResponse::status() const {
  // @@protoc_insertion_point(field_get:FIRST.CreateOrderResponse.status)
  return static_cast< ::FIRST::CreateOrderResponse_Status >(status_);
}
inline void CreateOrderResponse::set_status(::FIRST::CreateOrderResponse_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:FIRST.CreateOrderResponse.status)
}

// string reason = 6;
inline void CreateOrderResponse::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateOrderResponse::reason() const {
  // @@protoc_insertion_point(field_get:FIRST.CreateOrderResponse.reason)
  return reason_.GetNoArena();
}
inline void CreateOrderResponse::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FIRST.CreateOrderResponse.reason)
}
#if LANG_CXX11
inline void CreateOrderResponse::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FIRST.CreateOrderResponse.reason)
}
#endif
inline void CreateOrderResponse::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FIRST.CreateOrderResponse.reason)
}
inline void CreateOrderResponse::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FIRST.CreateOrderResponse.reason)
}
inline ::std::string* CreateOrderResponse::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:FIRST.CreateOrderResponse.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateOrderResponse::release_reason() {
  // @@protoc_insertion_point(field_release:FIRST.CreateOrderResponse.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateOrderResponse::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:FIRST.CreateOrderResponse.reason)
}

// -------------------------------------------------------------------

// CancelOrderRequest

// uint32 request_id = 1;
inline void CancelOrderRequest::clear_request_id() {
  request_id_ = 0u;
}
inline ::google::protobuf::uint32 CancelOrderRequest::request_id() const {
  // @@protoc_insertion_point(field_get:FIRST.CancelOrderRequest.request_id)
  return request_id_;
}
inline void CancelOrderRequest::set_request_id(::google::protobuf::uint32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:FIRST.CancelOrderRequest.request_id)
}

// uint64 client_order_id = 3;
inline void CancelOrderRequest::clear_client_order_id() {
  client_order_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CancelOrderRequest::client_order_id() const {
  // @@protoc_insertion_point(field_get:FIRST.CancelOrderRequest.client_order_id)
  return client_order_id_;
}
inline void CancelOrderRequest::set_client_order_id(::google::protobuf::uint64 value) {
  
  client_order_id_ = value;
  // @@protoc_insertion_point(field_set:FIRST.CancelOrderRequest.client_order_id)
}

// .FIRST.OrderField order = 4;
inline bool CancelOrderRequest::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
inline const ::FIRST::OrderField& CancelOrderRequest::order() const {
  const ::FIRST::OrderField* p = order_;
  // @@protoc_insertion_point(field_get:FIRST.CancelOrderRequest.order)
  return p != NULL ? *p : *reinterpret_cast<const ::FIRST::OrderField*>(
      &::FIRST::_OrderField_default_instance_);
}
inline ::FIRST::OrderField* CancelOrderRequest::release_order() {
  // @@protoc_insertion_point(field_release:FIRST.CancelOrderRequest.order)
  
  ::FIRST::OrderField* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::FIRST::OrderField* CancelOrderRequest::mutable_order() {
  
  if (order_ == NULL) {
    order_ = new ::FIRST::OrderField;
  }
  // @@protoc_insertion_point(field_mutable:FIRST.CancelOrderRequest.order)
  return order_;
}
inline void CancelOrderRequest::set_allocated_order(::FIRST::OrderField* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(order_);
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    
  } else {
    
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:FIRST.CancelOrderRequest.order)
}

// -------------------------------------------------------------------

// CancelOrderResponse

// uint32 request_id = 1;
inline void CancelOrderResponse::clear_request_id() {
  request_id_ = 0u;
}
inline ::google::protobuf::uint32 CancelOrderResponse::request_id() const {
  // @@protoc_insertion_point(field_get:FIRST.CancelOrderResponse.request_id)
  return request_id_;
}
inline void CancelOrderResponse::set_request_id(::google::protobuf::uint32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:FIRST.CancelOrderResponse.request_id)
}

// .FIRST.OrderField order = 3;
inline bool CancelOrderResponse::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
inline const ::FIRST::OrderField& CancelOrderResponse::order() const {
  const ::FIRST::OrderField* p = order_;
  // @@protoc_insertion_point(field_get:FIRST.CancelOrderResponse.order)
  return p != NULL ? *p : *reinterpret_cast<const ::FIRST::OrderField*>(
      &::FIRST::_OrderField_default_instance_);
}
inline ::FIRST::OrderField* CancelOrderResponse::release_order() {
  // @@protoc_insertion_point(field_release:FIRST.CancelOrderResponse.order)
  
  ::FIRST::OrderField* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::FIRST::OrderField* CancelOrderResponse::mutable_order() {
  
  if (order_ == NULL) {
    order_ = new ::FIRST::OrderField;
  }
  // @@protoc_insertion_point(field_mutable:FIRST.CancelOrderResponse.order)
  return order_;
}
inline void CancelOrderResponse::set_allocated_order(::FIRST::OrderField* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(order_);
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    
  } else {
    
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:FIRST.CancelOrderResponse.order)
}

// .FIRST.CancelOrderResponse.Status status = 5;
inline void CancelOrderResponse::clear_status() {
  status_ = 0;
}
inline ::FIRST::CancelOrderResponse_Status CancelOrderResponse::status() const {
  // @@protoc_insertion_point(field_get:FIRST.CancelOrderResponse.status)
  return static_cast< ::FIRST::CancelOrderResponse_Status >(status_);
}
inline void CancelOrderResponse::set_status(::FIRST::CancelOrderResponse_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:FIRST.CancelOrderResponse.status)
}

// string reason = 6;
inline void CancelOrderResponse::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelOrderResponse::reason() const {
  // @@protoc_insertion_point(field_get:FIRST.CancelOrderResponse.reason)
  return reason_.GetNoArena();
}
inline void CancelOrderResponse::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FIRST.CancelOrderResponse.reason)
}
#if LANG_CXX11
inline void CancelOrderResponse::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FIRST.CancelOrderResponse.reason)
}
#endif
inline void CancelOrderResponse::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FIRST.CancelOrderResponse.reason)
}
inline void CancelOrderResponse::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FIRST.CancelOrderResponse.reason)
}
inline ::std::string* CancelOrderResponse::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:FIRST.CancelOrderResponse.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelOrderResponse::release_reason() {
  // @@protoc_insertion_point(field_release:FIRST.CancelOrderResponse.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelOrderResponse::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:FIRST.CancelOrderResponse.reason)
}

// -------------------------------------------------------------------

// OrderFeed

// uint64 request_id = 1;
inline void OrderFeed::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderFeed::request_id() const {
  // @@protoc_insertion_point(field_get:FIRST.OrderFeed.request_id)
  return request_id_;
}
inline void OrderFeed::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:FIRST.OrderFeed.request_id)
}

// uint64 in_timestamp = 2;
inline void OrderFeed::clear_in_timestamp() {
  in_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderFeed::in_timestamp() const {
  // @@protoc_insertion_point(field_get:FIRST.OrderFeed.in_timestamp)
  return in_timestamp_;
}
inline void OrderFeed::set_in_timestamp(::google::protobuf::uint64 value) {
  
  in_timestamp_ = value;
  // @@protoc_insertion_point(field_set:FIRST.OrderFeed.in_timestamp)
}

// .FIRST.OrderField order = 3;
inline bool OrderFeed::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
inline const ::FIRST::OrderField& OrderFeed::order() const {
  const ::FIRST::OrderField* p = order_;
  // @@protoc_insertion_point(field_get:FIRST.OrderFeed.order)
  return p != NULL ? *p : *reinterpret_cast<const ::FIRST::OrderField*>(
      &::FIRST::_OrderField_default_instance_);
}
inline ::FIRST::OrderField* OrderFeed::release_order() {
  // @@protoc_insertion_point(field_release:FIRST.OrderFeed.order)
  
  ::FIRST::OrderField* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::FIRST::OrderField* OrderFeed::mutable_order() {
  
  if (order_ == NULL) {
    order_ = new ::FIRST::OrderField;
  }
  // @@protoc_insertion_point(field_mutable:FIRST.OrderFeed.order)
  return order_;
}
inline void OrderFeed::set_allocated_order(::FIRST::OrderField* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(order_);
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    
  } else {
    
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:FIRST.OrderFeed.order)
}

// uint64 out_timestamp = 4;
inline void OrderFeed::clear_out_timestamp() {
  out_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderFeed::out_timestamp() const {
  // @@protoc_insertion_point(field_get:FIRST.OrderFeed.out_timestamp)
  return out_timestamp_;
}
inline void OrderFeed::set_out_timestamp(::google::protobuf::uint64 value) {
  
  out_timestamp_ = value;
  // @@protoc_insertion_point(field_set:FIRST.OrderFeed.out_timestamp)
}

// -------------------------------------------------------------------

// TradeFeed

// uint64 request_id = 1;
inline void TradeFeed::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TradeFeed::request_id() const {
  // @@protoc_insertion_point(field_get:FIRST.TradeFeed.request_id)
  return request_id_;
}
inline void TradeFeed::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:FIRST.TradeFeed.request_id)
}

// uint64 in_timestamp = 2;
inline void TradeFeed::clear_in_timestamp() {
  in_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TradeFeed::in_timestamp() const {
  // @@protoc_insertion_point(field_get:FIRST.TradeFeed.in_timestamp)
  return in_timestamp_;
}
inline void TradeFeed::set_in_timestamp(::google::protobuf::uint64 value) {
  
  in_timestamp_ = value;
  // @@protoc_insertion_point(field_set:FIRST.TradeFeed.in_timestamp)
}

// .FIRST.TradeField trade = 3;
inline bool TradeFeed::has_trade() const {
  return this != internal_default_instance() && trade_ != NULL;
}
inline const ::FIRST::TradeField& TradeFeed::trade() const {
  const ::FIRST::TradeField* p = trade_;
  // @@protoc_insertion_point(field_get:FIRST.TradeFeed.trade)
  return p != NULL ? *p : *reinterpret_cast<const ::FIRST::TradeField*>(
      &::FIRST::_TradeField_default_instance_);
}
inline ::FIRST::TradeField* TradeFeed::release_trade() {
  // @@protoc_insertion_point(field_release:FIRST.TradeFeed.trade)
  
  ::FIRST::TradeField* temp = trade_;
  trade_ = NULL;
  return temp;
}
inline ::FIRST::TradeField* TradeFeed::mutable_trade() {
  
  if (trade_ == NULL) {
    trade_ = new ::FIRST::TradeField;
  }
  // @@protoc_insertion_point(field_mutable:FIRST.TradeFeed.trade)
  return trade_;
}
inline void TradeFeed::set_allocated_trade(::FIRST::TradeField* trade) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(trade_);
  }
  if (trade) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trade = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trade, submessage_arena);
    }
    
  } else {
    
  }
  trade_ = trade;
  // @@protoc_insertion_point(field_set_allocated:FIRST.TradeFeed.trade)
}

// uint64 out_timestamp = 4;
inline void TradeFeed::clear_out_timestamp() {
  out_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TradeFeed::out_timestamp() const {
  // @@protoc_insertion_point(field_get:FIRST.TradeFeed.out_timestamp)
  return out_timestamp_;
}
inline void TradeFeed::set_out_timestamp(::google::protobuf::uint64 value) {
  
  out_timestamp_ = value;
  // @@protoc_insertion_point(field_set:FIRST.TradeFeed.out_timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace FIRST

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::FIRST::CreateOrderResponse_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FIRST::CreateOrderResponse_Status>() {
  return ::FIRST::CreateOrderResponse_Status_descriptor();
}
template <> struct is_proto_enum< ::FIRST::CancelOrderResponse_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FIRST::CancelOrderResponse_Status>() {
  return ::FIRST::CancelOrderResponse_Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_first_5fdefinitions_2eproto__INCLUDED
